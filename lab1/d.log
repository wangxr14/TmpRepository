----------------
IN: 
0xfffffff0:  ljmp   $0xf000,$0xe05b

----------------
IN: 
0x000fe05b:  cmpl   $0x0,%cs:0x6574
0x000fe062:  jne    0xfd2b6

----------------
IN: 
0x000fe066:  xor    %ax,%ax
0x000fe068:  mov    %ax,%ss

----------------
IN: 
0x000fe06a:  mov    $0x7000,%esp

----------------
IN: 
0x000fe070:  mov    $0xf3c24,%edx
0x000fe076:  jmp    0xfd124

----------------
IN: 
0x000fd124:  mov    %eax,%ecx
0x000fd127:  cli    
0x000fd128:  cld    
0x000fd129:  mov    $0x8f,%eax
0x000fd12f:  out    %al,$0x70
0x000fd131:  in     $0x71,%al
0x000fd133:  in     $0x92,%al
0x000fd135:  or     $0x2,%al
0x000fd137:  out    %al,$0x92
0x000fd139:  lidtw  %cs:0x6690
0x000fd13f:  lgdtw  %cs:0x6650
0x000fd145:  mov    %cr0,%eax
0x000fd148:  or     $0x1,%eax
0x000fd14c:  mov    %eax,%cr0

----------------
IN: 
0x000fd14f:  ljmpl  $0x8,$0xfd157

----------------
IN: 
0x000fd157:  mov    $0x10,%eax
0x000fd15c:  mov    %eax,%ds

----------------
IN: 
0x000fd15e:  mov    %eax,%es

----------------
IN: 
0x000fd160:  mov    %eax,%ss

----------------
IN: 
0x000fd162:  mov    %eax,%fs

----------------
IN: 
0x000fd164:  mov    %eax,%gs
0x000fd166:  mov    %ecx,%eax
0x000fd168:  jmp    *%edx

----------------
IN: 
0x000f3c24:  push   %ebx
0x000f3c25:  sub    $0x2c,%esp
0x000f3c28:  movl   $0xf5edc,0x4(%esp)
0x000f3c30:  movl   $0xf5c6d,(%esp)
0x000f3c37:  call   0xf1787

----------------
IN: 
0x000f1787:  lea    0x8(%esp),%ecx
0x000f178b:  mov    0x4(%esp),%edx
0x000f178f:  mov    $0xf5ed8,%eax
0x000f1794:  call   0xf1445

----------------
IN: 
0x000f1445:  push   %ebp
0x000f1446:  push   %edi
0x000f1447:  push   %esi
0x000f1448:  push   %ebx
0x000f1449:  sub    $0xc,%esp
0x000f144c:  mov    %eax,0x4(%esp)
0x000f1450:  mov    %edx,%ebp
0x000f1452:  mov    %ecx,%esi
0x000f1454:  movsbl 0x0(%ebp),%edx
0x000f1458:  test   %dl,%dl
0x000f145a:  je     0xf1629

----------------
IN: 
0x000f1460:  cmp    $0x25,%dl
0x000f1463:  jne    0xf1612

----------------
IN: 
0x000f1612:  mov    0x4(%esp),%eax
0x000f1616:  call   0xf0c75

----------------
IN: 
0x000f0c75:  mov    %eax,%ecx
0x000f0c77:  movsbl %dl,%edx
0x000f0c7a:  call   *(%ecx)

----------------
IN: 
0x000f0c6a:  mov    %edx,%eax
0x000f0c6c:  mov    0xf636c,%dx
0x000f0c73:  out    %al,(%dx)
0x000f0c74:  ret    

----------------
IN: 
0x000f0c7c:  ret    

----------------
IN: 
0x000f161b:  mov    %ebp,%ebx
0x000f161d:  jmp    0xf1621

----------------
IN: 
0x000f1621:  lea    0x1(%ebx),%ebp
0x000f1624:  jmp    0xf1454

----------------
IN: 
0x000f1454:  movsbl 0x0(%ebp),%edx
0x000f1458:  test   %dl,%dl
0x000f145a:  je     0xf1629

----------------
IN: 
0x000f1469:  lea    0x1(%ebp),%ebx
0x000f146c:  movb   $0x20,0xb(%esp)
0x000f1471:  xor    %ecx,%ecx
0x000f1473:  movsbl (%ebx),%eax
0x000f1476:  lea    -0x30(%eax),%edx
0x000f1479:  cmp    $0x9,%dl
0x000f147c:  ja     0xf1499

----------------
IN: 
0x000f1499:  mov    %ebx,%edx
0x000f149b:  xor    %edi,%edi
0x000f149d:  cmp    $0x6c,%al
0x000f149f:  jne    0xf14b6

----------------
IN: 
0x000f14b6:  cmp    $0x64,%al
0x000f14b8:  je     0xf1529

----------------
IN: 
0x000f14ba:  jg     0xf14e7

----------------
IN: 
0x000f14e7:  cmp    $0x73,%al
0x000f14e9:  je     0xf15f4

----------------
IN: 
0x000f15f4:  lea    0x4(%esi),%edi
0x000f15f7:  mov    (%esi),%ebp
0x000f15f9:  movsbl 0x0(%ebp),%edx
0x000f15fd:  test   %dl,%dl
0x000f15ff:  je     0xf161f

----------------
IN: 
0x000f1601:  mov    0x4(%esp),%eax
0x000f1605:  call   0xf0c75

----------------
IN: 
0x000f160a:  inc    %ebp
0x000f160b:  jmp    0xf15f9

----------------
IN: 
0x000f15f9:  movsbl 0x0(%ebp),%edx
0x000f15fd:  test   %dl,%dl
0x000f15ff:  je     0xf161f

----------------
IN: 
0x000f161f:  mov    %edi,%esi
0x000f1621:  lea    0x1(%ebx),%ebp
0x000f1624:  jmp    0xf1454

----------------
IN: 
0x000f1629:  add    $0xc,%esp
0x000f162c:  pop    %ebx
0x000f162d:  pop    %esi
0x000f162e:  pop    %edi
0x000f162f:  pop    %ebp
0x000f1630:  ret    

----------------
IN: 
0x000f1799:  ret    

----------------
IN: 
0x000f3c3c:  mov    $0x40000000,%ebx
0x000f3c41:  lea    0x18(%esp),%eax
0x000f3c45:  mov    %eax,0x4(%esp)
0x000f3c49:  lea    0x14(%esp),%eax
0x000f3c4d:  mov    %eax,(%esp)
0x000f3c50:  lea    0x10(%esp),%ecx
0x000f3c54:  lea    0xc(%esp),%edx
0x000f3c58:  mov    %ebx,%eax
0x000f3c5a:  call   0xf0d85

----------------
IN: 
0x000f0d85:  push   %ebp
0x000f0d86:  push   %edi
0x000f0d87:  push   %esi
0x000f0d88:  push   %ebx
0x000f0d89:  mov    %edx,%esi
0x000f0d8b:  mov    %ecx,%edi
0x000f0d8d:  mov    0x14(%esp),%ebp
0x000f0d91:  pushf  
0x000f0d92:  pop    %ecx
0x000f0d93:  mov    %ecx,%edx
0x000f0d95:  xor    $0x200000,%edx
0x000f0d9b:  push   %edx
0x000f0d9c:  popf   

----------------
IN: 
0x000f0d9d:  pushf  
0x000f0d9e:  pop    %edx
0x000f0d9f:  push   %ecx
0x000f0da0:  popf   

----------------
IN: 
0x000f0da1:  xor    %ecx,%edx
0x000f0da3:  and    $0x200000,%edx
0x000f0da9:  jne    0xf0dca

----------------
IN: 
0x000f0dca:  cpuid  
0x000f0dcc:  mov    %eax,(%esi)
0x000f0dce:  mov    %ebx,(%edi)
0x000f0dd0:  mov    %ecx,0x0(%ebp)
0x000f0dd3:  mov    0x18(%esp),%eax
0x000f0dd7:  mov    %edx,(%eax)
0x000f0dd9:  pop    %ebx
0x000f0dda:  pop    %esi
0x000f0ddb:  pop    %edi
0x000f0ddc:  pop    %ebp
0x000f0ddd:  ret    

----------------
IN: 
0x000f3c5f:  mov    0x10(%esp),%eax
0x000f3c63:  mov    %eax,0x1f(%esp)
0x000f3c67:  mov    0x14(%esp),%eax
0x000f3c6b:  mov    %eax,0x23(%esp)
0x000f3c6f:  mov    0x18(%esp),%eax
0x000f3c73:  mov    %eax,0x27(%esp)
0x000f3c77:  movb   $0x0,0x2b(%esp)
0x000f3c7c:  mov    $0xf5c86,%edx
0x000f3c81:  lea    0x1f(%esp),%eax
0x000f3c85:  call   0xf0d5a

----------------
IN: 
0x000f0d5a:  push   %ebx
0x000f0d5b:  xor    %ecx,%ecx
0x000f0d5d:  mov    (%eax,%ecx,1),%bl
0x000f0d60:  cmp    (%edx,%ecx,1),%bl
0x000f0d63:  je     0xf0d71

----------------
IN: 
0x000f0d65:  setge  %al
0x000f0d68:  movzbl %al,%eax
0x000f0d6b:  lea    -0x1(%eax,%eax,1),%eax
0x000f0d6f:  jmp    0xf0d78

----------------
IN: 
0x000f0d78:  pop    %ebx
0x000f0d79:  ret    

----------------
IN: 
0x000f3c8a:  test   %eax,%eax
0x000f3c8c:  jne    0xf3ce4

----------------
IN: 
0x000f3ce4:  add    $0x100,%ebx
0x000f3cea:  cmp    $0x40010000,%ebx
0x000f3cf0:  jne    0xf3c41

----------------
IN: 
0x000f3c41:  lea    0x18(%esp),%eax
0x000f3c45:  mov    %eax,0x4(%esp)
0x000f3c49:  lea    0x14(%esp),%eax
0x000f3c4d:  mov    %eax,(%esp)
0x000f3c50:  lea    0x10(%esp),%ecx
0x000f3c54:  lea    0xc(%esp),%edx
0x000f3c58:  mov    %ebx,%eax
0x000f3c5a:  call   0xf0d85

----------------
IN: 
0x000f3cf6:  cmpl   $0x0,0xf5f0c
0x000f3cfd:  jne    0xf3d0d

----------------
IN: 
0x000f3cff:  movl   $0xf5d02,(%esp)
0x000f3d06:  call   0xf1787

----------------
IN: 
0x000f3d0b:  jmp    0xf3d17

----------------
IN: 
0x000f3d17:  call   0xf1f45

----------------
IN: 
0x000f1f45:  testb  $0x2,0xf6058
0x000f1f4c:  jne    0xf1fbf

----------------
IN: 
0x000f1f4e:  push   %esi
0x000f1f4f:  push   %ebx
0x000f1f50:  push   %edx
0x000f1f51:  xor    %edx,%edx
0x000f1f53:  or     $0xffffffff,%eax
0x000f1f56:  call   0xf1183

----------------
IN: 
0x000f1183:  push   %ebp
0x000f1184:  push   %edi
0x000f1185:  push   %esi
0x000f1186:  push   %ebx
0x000f1187:  mov    %eax,%ebx
0x000f1189:  mov    %edx,%esi
0x000f118b:  movzwl %ax,%eax
0x000f118e:  test   $0x7,%al
0x000f1190:  jne    0xf11a5

----------------
IN: 
0x000f11a5:  lea    0x1(%ebx),%ecx
0x000f11a8:  mov    $0xcf8,%edi
0x000f11ad:  mov    $0xcfc,%ebp
0x000f11b2:  movzwl %cx,%ebx
0x000f11b5:  mov    %ebx,%eax
0x000f11b7:  shr    $0x8,%eax
0x000f11ba:  cmp    %esi,%eax
0x000f11bc:  jne    0xf11e3

----------------
IN: 
0x000f11be:  mov    %ebx,%eax
0x000f11c0:  shl    $0x8,%eax
0x000f11c3:  or     $0x80000000,%eax
0x000f11c8:  mov    %edi,%edx
0x000f11ca:  out    %eax,(%dx)
0x000f11cb:  mov    %ebp,%edx
0x000f11cd:  in     (%dx),%ax
0x000f11cf:  dec    %eax
0x000f11d0:  cmp    $0xfffffffd,%ax
0x000f11d4:  jbe    0xf11e8

----------------
IN: 
0x000f11e8:  mov    %ecx,%eax
0x000f11ea:  pop    %ebx
0x000f11eb:  pop    %esi
0x000f11ec:  pop    %edi
0x000f11ed:  pop    %ebp
0x000f11ee:  ret    

----------------
IN: 
0x000f1f5b:  mov    %eax,%ebx
0x000f1f5d:  test   %eax,%eax
0x000f1f5f:  js     0xf1fb0

----------------
IN: 
0x000f1f61:  movzwl %bx,%esi
0x000f1f64:  xor    %edx,%edx
0x000f1f66:  mov    %esi,%eax
0x000f1f68:  call   0xf0e37

----------------
IN: 
0x000f0e37:  mov    %edx,%ecx
0x000f0e39:  and    $0xfc,%ecx
0x000f0e3f:  or     $0x80000000,%ecx
0x000f0e45:  movzwl %ax,%eax
0x000f0e48:  shl    $0x8,%eax
0x000f0e4b:  or     %eax,%ecx
0x000f0e4d:  mov    $0xcf8,%edx
0x000f0e52:  mov    %ecx,%eax
0x000f0e54:  out    %eax,(%dx)
0x000f0e55:  mov    $0xfc,%dl
0x000f0e57:  in     (%dx),%eax
0x000f0e58:  ret    

----------------
IN: 
0x000f1f6d:  mov    %eax,%edx
0x000f1f6f:  shr    $0x10,%edx
0x000f1f72:  cmp    $0x8086,%ax
0x000f1f76:  sete   %al
0x000f1f79:  cmp    $0x1237,%edx
0x000f1f7f:  jne    0xf1f8b

----------------
IN: 
0x000f1f81:  test   %al,%al
0x000f1f83:  je     0xf1f8b

----------------
IN: 
0x000f1f85:  mov    $0x59,%dx
0x000f1f89:  jmp    0xf1f9b

----------------
IN: 
0x000f1f9b:  mov    %esi,%eax
0x000f1f9d:  call   0xf1137

----------------
IN: 
0x000f1137:  push   %esi
0x000f1138:  push   %ebx
0x000f1139:  mov    %edx,%esi
0x000f113b:  movzwl %ax,%ebx
0x000f113e:  mov    %ebx,%eax
0x000f1140:  call   0xf0e59

----------------
IN: 
0x000f0e59:  push   %ebx
0x000f0e5a:  mov    %edx,%ebx
0x000f0e5c:  mov    %edx,%ecx
0x000f0e5e:  and    $0xfc,%ecx
0x000f0e64:  or     $0x80000000,%ecx
0x000f0e6a:  movzwl %ax,%eax
0x000f0e6d:  shl    $0x8,%eax
0x000f0e70:  or     %eax,%ecx
0x000f0e72:  mov    $0xcf8,%edx
0x000f0e77:  mov    %ecx,%eax
0x000f0e79:  out    %eax,(%dx)
0x000f0e7a:  and    $0x3,%ebx
0x000f0e7d:  lea    0xcfc(%ebx),%edx
0x000f0e83:  in     (%dx),%al
0x000f0e84:  pop    %ebx
0x000f0e85:  ret    

----------------
IN: 
0x000f1145:  mov    %esi,%edx
0x000f1147:  test   $0x10,%al
0x000f1149:  mov    %ebx,%eax
0x000f114b:  jne    0xf1157

----------------
IN: 
0x000f114d:  mov    $0xffff10d4,%ecx
0x000f1152:  call   *%ecx

----------------
IN: 
0xffff10d4:  push   %ebp
0xffff10d5:  push   %edi
0xffff10d6:  push   %esi
0xffff10d7:  push   %ebx
0xffff10d8:  mov    %edx,%edi
0xffff10da:  lea    0x1(%edx),%ebx
0xffff10dd:  lea    0x7(%edx),%ebp
0xffff10e0:  movzwl %ax,%esi
0xffff10e3:  mov    %ebx,%edx
0xffff10e5:  mov    %esi,%eax
0xffff10e7:  call   0xffff0e59

----------------
IN: 
0xffff0e59:  push   %ebx
0xffff0e5a:  mov    %edx,%ebx
0xffff0e5c:  mov    %edx,%ecx
0xffff0e5e:  and    $0xfc,%ecx
0xffff0e64:  or     $0x80000000,%ecx
0xffff0e6a:  movzwl %ax,%eax
0xffff0e6d:  shl    $0x8,%eax
0xffff0e70:  or     %eax,%ecx
0xffff0e72:  mov    $0xcf8,%edx
0xffff0e77:  mov    %ecx,%eax
0xffff0e79:  out    %eax,(%dx)
0xffff0e7a:  and    $0x3,%ebx
0xffff0e7d:  lea    0xcfc(%ebx),%edx
0xffff0e83:  in     (%dx),%al
0xffff0e84:  pop    %ebx
0xffff0e85:  ret    

----------------
IN: 
0xffff10ec:  mov    $0x33,%ecx
0xffff10f1:  mov    %ebx,%edx
0xffff10f3:  mov    %esi,%eax
0xffff10f5:  call   0xffff0e04

----------------
IN: 
0xffff0e04:  push   %edi
0xffff0e05:  push   %esi
0xffff0e06:  push   %ebx
0xffff0e07:  mov    %edx,%edi
0xffff0e09:  mov    %edx,%ebx
0xffff0e0b:  and    $0xfc,%ebx
0xffff0e11:  or     $0x80000000,%ebx
0xffff0e17:  movzwl %ax,%esi
0xffff0e1a:  shl    $0x8,%esi
0xffff0e1d:  or     %esi,%ebx
0xffff0e1f:  mov    $0xcf8,%edx
0xffff0e24:  mov    %ebx,%eax
0xffff0e26:  out    %eax,(%dx)
0xffff0e27:  and    $0x3,%edi
0xffff0e2a:  lea    0xcfc(%edi),%edx
0xffff0e30:  mov    %cl,%al
0xffff0e32:  out    %al,(%dx)
0xffff0e33:  pop    %ebx
0xffff0e34:  pop    %esi
0xffff0e35:  pop    %edi
0xffff0e36:  ret    

----------------
IN: 
0xffff10fa:  inc    %ebx
0xffff10fb:  cmp    %ebp,%ebx
0xffff10fd:  jne    0xffff10e3

----------------
IN: 
0xffff10e3:  mov    %ebx,%edx
0xffff10e5:  mov    %esi,%eax
0xffff10e7:  call   0xffff0e59

----------------
IN: 
0xffff10ff:  mov    %edi,%edx
0xffff1101:  mov    %esi,%eax
0xffff1103:  call   0xffff0e59

----------------
IN: 
0xffff1108:  mov    %al,%bl
0xffff110a:  mov    $0x30,%ecx
0xffff110f:  mov    %edi,%edx
0xffff1111:  mov    %esi,%eax
0xffff1113:  call   0xffff0e04

----------------
IN: 
0xffff1118:  and    $0x10,%bl
0xffff111b:  jne    0xffff1132

----------------
IN: 
0xffff111d:  mov    $0xde768,%eax
0xffff1122:  mov    $0x100000,%ecx
0xffff1127:  sub    %eax,%ecx
0xffff1129:  mov    $0xfffde768,%esi
0xffff112e:  mov    %eax,%edi
0xffff1130:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xffff1130:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xffff1132:  pop    %ebx
0xffff1133:  pop    %esi
0xffff1134:  pop    %edi
0xffff1135:  pop    %ebp
0xffff1136:  ret    

----------------
IN: 
0x000f1154:  pop    %ebx
0x000f1155:  pop    %esi
0x000f1156:  ret    

----------------
IN: 
0x000f1fa2:  mov    %ebx,0xf5ecc
0x000f1fa8:  jmp    0xf1fbc

----------------
IN: 
0x000f1fbc:  pop    %eax
0x000f1fbd:  pop    %ebx
0x000f1fbe:  pop    %esi
0x000f1fbf:  ret    

----------------
IN: 
0x000f3d1c:  call   0xee8f0

----------------
IN: 
0x000ee8f0:  push   %ebp
0x000ee8f1:  push   %edi
0x000ee8f2:  push   %esi
0x000ee8f3:  push   %ebx
0x000ee8f4:  sub    $0x34,%esp
0x000ee8f7:  mov    $0xcf8,%edx
0x000ee8fc:  mov    $0x80000000,%eax
0x000ee901:  out    %eax,(%dx)
0x000ee902:  mov    $0xcfc,%ebp
0x000ee907:  mov    %ebp,%edx
0x000ee909:  in     (%dx),%ax
0x000ee90b:  mov    %eax,%ebx
0x000ee90d:  lea    -0x1(%ebx),%eax
0x000ee910:  cmp    $0xfffffffd,%ax
0x000ee914:  ja     0xeea02

----------------
IN: 
0x000ee91a:  mov    $0x80000000,%eax
0x000ee91f:  mov    $0xf8,%dl
0x000ee921:  out    %eax,(%dx)
0x000ee922:  mov    $0xcfe,%esi
0x000ee927:  mov    %esi,%edx
0x000ee929:  in     (%dx),%ax
0x000ee92b:  movzwl %ax,%ecx
0x000ee92e:  mov    $0x8000002c,%edi
0x000ee933:  mov    %edi,%eax
0x000ee935:  mov    $0xf8,%dl
0x000ee937:  out    %eax,(%dx)
0x000ee938:  mov    %ebp,%edx
0x000ee93a:  in     (%dx),%ax
0x000ee93c:  mov    %eax,%ebp
0x000ee93e:  mov    %edi,%eax
0x000ee940:  mov    $0xf8,%dl
0x000ee942:  out    %eax,(%dx)
0x000ee943:  mov    %esi,%edx
0x000ee945:  in     (%dx),%ax
0x000ee947:  cmp    $0x1100,%ax
0x000ee94b:  jne    0xeea02

----------------
IN: 
0x000ee951:  cmp    $0x1af4,%bp
0x000ee956:  jne    0xeea02

----------------
IN: 
0x000ee95c:  orl    $0x1,0xf6058
0x000ee963:  cmp    $0x1237,%cx
0x000ee968:  je     0xee97a

----------------
IN: 
0x000ee97a:  movl   $0xf5b34,(%esp)
0x000ee981:  call   0xf1787

----------------
IN: 
0x000f1787:  lea    0x8(%esp),%ecx
0x000f178b:  mov    0x4(%esp),%edx
0x000f178f:  mov    $0xf5ed8,%eax
0x000f1794:  call   0xf1445

----------------
IN: 
0x000f1445:  push   %ebp
0x000f1446:  push   %edi
0x000f1447:  push   %esi
0x000f1448:  push   %ebx
0x000f1449:  sub    $0xc,%esp
0x000f144c:  mov    %eax,0x4(%esp)
0x000f1450:  mov    %edx,%ebp
0x000f1452:  mov    %ecx,%esi
0x000f1454:  movsbl 0x0(%ebp),%edx
0x000f1458:  test   %dl,%dl
0x000f145a:  je     0xf1629

----------------
IN: 
0x000f1460:  cmp    $0x25,%dl
0x000f1463:  jne    0xf1612

----------------
IN: 
0x000f1612:  mov    0x4(%esp),%eax
0x000f1616:  call   0xf0c75

----------------
IN: 
0x000f0c75:  mov    %eax,%ecx
0x000f0c77:  movsbl %dl,%edx
0x000f0c7a:  call   *(%ecx)

----------------
IN: 
0x000f0c6a:  mov    %edx,%eax
0x000f0c6c:  mov    0xf636c,%dx
0x000f0c73:  out    %al,(%dx)
0x000f0c74:  ret    

----------------
IN: 
0x000f0c7c:  ret    

----------------
IN: 
0x000f161b:  mov    %ebp,%ebx
0x000f161d:  jmp    0xf1621

----------------
IN: 
0x000f1621:  lea    0x1(%ebx),%ebp
0x000f1624:  jmp    0xf1454

----------------
IN: 
0x000f1454:  movsbl 0x0(%ebp),%edx
0x000f1458:  test   %dl,%dl
0x000f145a:  je     0xf1629

----------------
IN: 
0x000f1629:  add    $0xc,%esp
0x000f162c:  pop    %ebx
0x000f162d:  pop    %esi
0x000f162e:  pop    %edi
0x000f162f:  pop    %ebp
0x000f1630:  ret    

----------------
IN: 
0x000f1799:  ret    

----------------
IN: 
0x000ee986:  jmp    0xee99f

----------------
IN: 
0x000ee99f:  lea    0x20(%esp),%eax
0x000ee9a3:  mov    %eax,0x4(%esp)
0x000ee9a7:  lea    0x1c(%esp),%eax
0x000ee9ab:  mov    %eax,(%esp)
0x000ee9ae:  lea    0x18(%esp),%ecx
0x000ee9b2:  lea    0x14(%esp),%edx
0x000ee9b6:  mov    $0x40000000,%eax
0x000ee9bb:  call   0xf0d85

----------------
IN: 
0x000f0d85:  push   %ebp
0x000f0d86:  push   %edi
0x000f0d87:  push   %esi
0x000f0d88:  push   %ebx
0x000f0d89:  mov    %edx,%esi
0x000f0d8b:  mov    %ecx,%edi
0x000f0d8d:  mov    0x14(%esp),%ebp
0x000f0d91:  pushf  
0x000f0d92:  pop    %ecx
0x000f0d93:  mov    %ecx,%edx
0x000f0d95:  xor    $0x200000,%edx
0x000f0d9b:  push   %edx
0x000f0d9c:  popf   

----------------
IN: 
0x000f0d9d:  pushf  
0x000f0d9e:  pop    %edx
0x000f0d9f:  push   %ecx
0x000f0da0:  popf   

----------------
IN: 
0x000f0da1:  xor    %ecx,%edx
0x000f0da3:  and    $0x200000,%edx
0x000f0da9:  jne    0xf0dca

----------------
IN: 
0x000f0dca:  cpuid  
0x000f0dcc:  mov    %eax,(%esi)
0x000f0dce:  mov    %ebx,(%edi)
0x000f0dd0:  mov    %ecx,0x0(%ebp)
0x000f0dd3:  mov    0x18(%esp),%eax
0x000f0dd7:  mov    %edx,(%eax)
0x000f0dd9:  pop    %ebx
0x000f0dda:  pop    %esi
0x000f0ddb:  pop    %edi
0x000f0ddc:  pop    %ebp
0x000f0ddd:  ret    

----------------
IN: 
0x000ee9c0:  mov    0x18(%esp),%eax
0x000ee9c4:  mov    %eax,0x27(%esp)
0x000ee9c8:  mov    0x1c(%esp),%eax
0x000ee9cc:  mov    %eax,0x2b(%esp)
0x000ee9d0:  mov    0x20(%esp),%eax
0x000ee9d4:  mov    %eax,0x2f(%esp)
0x000ee9d8:  movb   $0x0,0x33(%esp)
0x000ee9dd:  mov    $0xf5b8e,%edx
0x000ee9e2:  lea    0x27(%esp),%eax
0x000ee9e6:  call   0xf0d5a

----------------
IN: 
0x000f0d5a:  push   %ebx
0x000f0d5b:  xor    %ecx,%ecx
0x000f0d5d:  mov    (%eax,%ecx,1),%bl
0x000f0d60:  cmp    (%edx,%ecx,1),%bl
0x000f0d63:  je     0xf0d71

----------------
IN: 
0x000f0d65:  setge  %al
0x000f0d68:  movzbl %al,%eax
0x000f0d6b:  lea    -0x1(%eax,%eax,1),%eax
0x000f0d6f:  jmp    0xf0d78

----------------
IN: 
0x000f0d78:  pop    %ebx
0x000f0d79:  ret    

----------------
IN: 
0x000ee9eb:  test   %eax,%eax
0x000ee9ed:  jne    0xeea02

----------------
IN: 
0x000eea02:  testb  $0x2,0xf6058
0x000eea09:  je     0xeeaa3

----------------
IN: 
0x000eeaa3:  mov    $0xb4,%al
0x000eeaa5:  out    %al,$0x70
0x000eeaa7:  in     $0x71,%al
0x000eeaa9:  mov    %al,%cl
0x000eeaab:  mov    $0xb5,%al
0x000eeaad:  out    %al,$0x70
0x000eeaaf:  in     $0x71,%al
0x000eeab1:  mov    %eax,%edx
0x000eeab3:  shl    $0x18,%edx
0x000eeab6:  movzbl %cl,%eax
0x000eeab9:  shl    $0x10,%eax
0x000eeabc:  or     %eax,%edx
0x000eeabe:  je     0xeeac8

----------------
IN: 
0x000eeac0:  add    $0x1000000,%edx
0x000eeac6:  jmp    0xeeaea

----------------
IN: 
0x000eeaea:  mov    %edx,0xf0bd8
0x000eeaf0:  movl   $0x1,0x8(%esp)
0x000eeaf8:  mov    %edx,(%esp)
0x000eeafb:  movl   $0x0,0x4(%esp)
0x000eeb03:  xor    %eax,%eax
0x000eeb05:  xor    %edx,%edx
0x000eeb07:  call   0xe1e71

----------------
IN: 
0x000e1e71:  push   %edi
0x000e1e72:  push   %esi
0x000e1e73:  push   %ebx
0x000e1e74:  mov    0x10(%esp),%ebx
0x000e1e78:  mov    0x14(%esp),%ecx
0x000e1e7c:  mov    %ecx,%edi
0x000e1e7e:  or     %ebx,%edi
0x000e1e80:  je     0xe1e8a

----------------
IN: 
0x000e1e82:  pop    %ebx
0x000e1e83:  pop    %esi
0x000e1e84:  pop    %edi
0x000e1e85:  jmp    0xe1ca6

----------------
IN: 
0x000e1ca6:  push   %ebp
0x000e1ca7:  push   %edi
0x000e1ca8:  push   %esi
0x000e1ca9:  push   %ebx
0x000e1caa:  sub    $0x34,%esp
0x000e1cad:  mov    %eax,0x14(%esp)
0x000e1cb1:  mov    %edx,0x18(%esp)
0x000e1cb5:  mov    0x48(%esp),%ebx
0x000e1cb9:  mov    0x4c(%esp),%esi
0x000e1cbd:  mov    %esi,%edi
0x000e1cbf:  mov    %ebx,%esi
0x000e1cc1:  mov    %ebx,0x24(%esp)
0x000e1cc5:  mov    %edi,0x28(%esp)
0x000e1cc9:  mov    0x50(%esp),%ebx
0x000e1ccd:  mov    %ebx,0x2c(%esp)
0x000e1cd1:  add    %esi,%eax
0x000e1cd3:  adc    %edi,%edx
0x000e1cd5:  mov    %eax,0xc(%esp)
0x000e1cd9:  mov    %edx,0x10(%esp)
0x000e1cdd:  mov    0xf6074,%edx
0x000e1ce3:  mov    $0xf6078,%eax
0x000e1ce8:  xor    %esi,%esi
0x000e1cea:  cmp    %edx,%esi
0x000e1cec:  jge    0xe1dbf

----------------
IN: 
0x000e1dbf:  imul   $0x14,%esi,%ebx
0x000e1dc2:  cmp    0xf6074,%esi
0x000e1dc8:  jge    0xe1e36

----------------
IN: 
0x000e1e36:  mov    0x2c(%esp),%eax
0x000e1e3a:  cmp    $0xffffffff,%eax
0x000e1e3d:  je     0xe1e69

----------------
IN: 
0x000e1e3f:  mov    %eax,0x50(%esp)
0x000e1e43:  mov    0x24(%esp),%eax
0x000e1e47:  mov    0x28(%esp),%edx
0x000e1e4b:  mov    %eax,0x48(%esp)
0x000e1e4f:  mov    %edx,0x4c(%esp)
0x000e1e53:  mov    0x14(%esp),%edx
0x000e1e57:  mov    0x18(%esp),%ecx
0x000e1e5b:  mov    %esi,%eax
0x000e1e5d:  add    $0x34,%esp
0x000e1e60:  pop    %ebx
0x000e1e61:  pop    %esi
0x000e1e62:  pop    %edi
0x000e1e63:  pop    %ebp
0x000e1e64:  jmp    0xe1c12

----------------
IN: 
0x000e1c12:  push   %ebp
0x000e1c13:  push   %edi
0x000e1c14:  push   %esi
0x000e1c15:  push   %ebx
0x000e1c16:  sub    $0xc,%esp
0x000e1c19:  mov    %edx,(%esp)
0x000e1c1c:  mov    %ecx,0x4(%esp)
0x000e1c20:  mov    0x20(%esp),%edi
0x000e1c24:  mov    0x24(%esp),%ebp
0x000e1c28:  mov    0x28(%esp),%esi
0x000e1c2c:  mov    %esi,0x8(%esp)
0x000e1c30:  mov    0xf6074,%ecx
0x000e1c36:  cmp    $0x1f,%ecx
0x000e1c39:  jle    0xe1c51

----------------
IN: 
0x000e1c51:  imul   $0x14,%eax,%esi
0x000e1c54:  lea    0xf6078(%esi),%ebx
0x000e1c5a:  sub    %eax,%ecx
0x000e1c5c:  imul   $0x14,%ecx,%ecx
0x000e1c5f:  inc    %eax
0x000e1c60:  imul   $0x14,%eax,%eax
0x000e1c63:  add    $0xf6078,%eax
0x000e1c68:  mov    %ebx,%edx
0x000e1c6a:  call   0xe0a98

----------------
IN: 
0x000e0a98:  push   %ebp
0x000e0a99:  push   %edi
0x000e0a9a:  push   %esi
0x000e0a9b:  push   %ebx
0x000e0a9c:  cmp    %eax,%edx
0x000e0a9e:  jb     0xe0aa8

----------------
IN: 
0x000e0aa8:  lea    -0x1(%ecx),%ebx
0x000e0aab:  lea    (%eax,%ebx,1),%ebp
0x000e0aae:  add    %ebx,%edx
0x000e0ab0:  mov    %ecx,%ebx
0x000e0ab2:  mov    %ecx,%esi
0x000e0ab4:  neg    %esi
0x000e0ab6:  add    %esi,%edx
0x000e0ab8:  dec    %ebx
0x000e0ab9:  cmp    $0xffffffff,%ebx
0x000e0abc:  je     0xe0acc

----------------
IN: 
0x000e0acc:  mov    %ebp,%eax
0x000e0ace:  sub    %ecx,%eax
0x000e0ad0:  pop    %ebx
0x000e0ad1:  pop    %esi
0x000e0ad2:  pop    %edi
0x000e0ad3:  pop    %ebp
0x000e0ad4:  ret    

----------------
IN: 
0x000e1c6f:  incl   0xf6074
0x000e1c75:  mov    (%esp),%eax
0x000e1c78:  mov    0x4(%esp),%edx
0x000e1c7c:  mov    %eax,0xf6078(%esi)
0x000e1c82:  mov    %edx,0xf607c(%esi)
0x000e1c88:  mov    %edi,0xf6080(%esi)
0x000e1c8e:  mov    %ebp,0xf6084(%esi)
0x000e1c94:  mov    0x8(%esp),%eax
0x000e1c98:  mov    %eax,0xf6088(%esi)
0x000e1c9e:  add    $0xc,%esp
0x000e1ca1:  pop    %ebx
0x000e1ca2:  pop    %esi
0x000e1ca3:  pop    %edi
0x000e1ca4:  pop    %ebp
0x000e1ca5:  ret    

----------------
IN: 
0x000eeb0c:  movl   $0x2,0x8(%esp)
0x000eeb14:  movl   $0x40000,(%esp)
0x000eeb1b:  movl   $0x0,0x4(%esp)
0x000eeb23:  mov    $0xfffc0000,%eax
0x000eeb28:  xor    %edx,%edx
0x000eeb2a:  call   0xe1ca6

----------------
IN: 
0x000e1cf2:  mov    %eax,0x30(%esp)
0x000e1cf6:  mov    (%eax),%ecx
0x000e1cf8:  mov    0x4(%eax),%ebx
0x000e1cfb:  mov    %ecx,%edi
0x000e1cfd:  mov    %ebx,%ebp
0x000e1cff:  add    0x8(%eax),%edi
0x000e1d02:  adc    0xc(%eax),%ebp
0x000e1d05:  mov    %edi,0x1c(%esp)
0x000e1d09:  mov    %ebp,0x20(%esp)
0x000e1d0d:  add    $0x14,%eax
0x000e1d10:  cmp    %ebp,0x18(%esp)
0x000e1d14:  jb     0xe1d25

----------------
IN: 
0x000e1d16:  ja     0xe1d22

----------------
IN: 
0x000e1d18:  mov    0x1c(%esp),%edi
0x000e1d1c:  cmp    %edi,0x14(%esp)
0x000e1d20:  jbe    0xe1d25

----------------
IN: 
0x000e1d22:  inc    %esi
0x000e1d23:  jmp    0xe1cea

----------------
IN: 
0x000e1cea:  cmp    %edx,%esi
0x000e1cec:  jge    0xe1dbf

----------------
IN: 
0x000eeb2f:  mov    0xf0bd8,%eax
0x000eeb34:  mov    %eax,0x4(%esp)
0x000eeb38:  movl   $0xf5c0d,(%esp)
0x000eeb3f:  call   0xf1787

----------------
IN: 
0x000f1469:  lea    0x1(%ebp),%ebx
0x000f146c:  movb   $0x20,0xb(%esp)
0x000f1471:  xor    %ecx,%ecx
0x000f1473:  movsbl (%ebx),%eax
0x000f1476:  lea    -0x30(%eax),%edx
0x000f1479:  cmp    $0x9,%dl
0x000f147c:  ja     0xf1499

----------------
IN: 
0x000f147e:  cmp    $0x30,%al
0x000f1480:  jne    0xf1486

----------------
IN: 
0x000f1482:  test   %ecx,%ecx
0x000f1484:  je     0xf148f

----------------
IN: 
0x000f148f:  movb   $0x30,0xb(%esp)
0x000f1494:  xor    %ecx,%ecx
0x000f1496:  inc    %ebx
0x000f1497:  jmp    0xf1473

----------------
IN: 
0x000f1473:  movsbl (%ebx),%eax
0x000f1476:  lea    -0x30(%eax),%edx
0x000f1479:  cmp    $0x9,%dl
0x000f147c:  ja     0xf1499

----------------
IN: 
0x000f1486:  imul   $0xa,%ecx,%edx
0x000f1489:  lea    -0x30(%edx,%eax,1),%ecx
0x000f148d:  jmp    0xf1496

----------------
IN: 
0x000f1496:  inc    %ebx
0x000f1497:  jmp    0xf1473

----------------
IN: 
0x000f1499:  mov    %ebx,%edx
0x000f149b:  xor    %edi,%edi
0x000f149d:  cmp    $0x6c,%al
0x000f149f:  jne    0xf14b6

----------------
IN: 
0x000f14b6:  cmp    $0x64,%al
0x000f14b8:  je     0xf1529

----------------
IN: 
0x000f14ba:  jg     0xf14e7

----------------
IN: 
0x000f14e7:  cmp    $0x73,%al
0x000f14e9:  je     0xf15f4

----------------
IN: 
0x000f14ef:  jg     0xf151c

----------------
IN: 
0x000f151c:  cmp    $0x75,%al
0x000f151e:  je     0xf1551

----------------
IN: 
0x000f1520:  cmp    $0x78,%al
0x000f1522:  je     0xf156f

----------------
IN: 
0x000f156f:  mov    (%esi),%ebp
0x000f1571:  mov    %edi,%eax
0x000f1573:  test   %al,%al
0x000f1575:  movsbl 0xb(%esp),%eax
0x000f157a:  je     0xf15a7

----------------
IN: 
0x000f15a7:  lea    0x4(%esi),%edi
0x000f15aa:  mov    %eax,(%esp)
0x000f15ad:  mov    %ebp,%edx
0x000f15af:  mov    0x4(%esp),%eax
0x000f15b3:  call   0xf0d13

----------------
IN: 
0x000f0d13:  push   %ebp
0x000f0d14:  push   %edi
0x000f0d15:  push   %esi
0x000f0d16:  push   %ebx
0x000f0d17:  push   %esi
0x000f0d18:  mov    %eax,%esi
0x000f0d1a:  mov    %edx,%edi
0x000f0d1c:  mov    0x18(%esp),%dl
0x000f0d20:  mov    %edi,%eax
0x000f0d22:  mov    $0x1,%ebx
0x000f0d27:  shr    $0x4,%eax
0x000f0d2a:  je     0xf0d2f

----------------
IN: 
0x000f0d2c:  inc    %ebx
0x000f0d2d:  jmp    0xf0d27

----------------
IN: 
0x000f0d27:  shr    $0x4,%eax
0x000f0d2a:  je     0xf0d2f

----------------
IN: 
0x000f0d2f:  sub    %ebx,%ecx
0x000f0d31:  mov    %ecx,%ebp
0x000f0d33:  movsbl %dl,%eax
0x000f0d36:  mov    %eax,(%esp)
0x000f0d39:  test   %ebp,%ebp
0x000f0d3b:  jle    0xf0d4a

----------------
IN: 
0x000f0d3d:  mov    (%esp),%edx
0x000f0d40:  mov    %esi,%eax
0x000f0d42:  call   0xf0c75

----------------
IN: 
0x000f0d47:  dec    %ebp
0x000f0d48:  jmp    0xf0d39

----------------
IN: 
0x000f0d39:  test   %ebp,%ebp
0x000f0d3b:  jle    0xf0d4a

----------------
IN: 
0x000f0d4a:  mov    %ebx,%ecx
0x000f0d4c:  mov    %edi,%edx
0x000f0d4e:  mov    %esi,%eax
0x000f0d50:  pop    %ebx
0x000f0d51:  pop    %ebx
0x000f0d52:  pop    %esi
0x000f0d53:  pop    %edi
0x000f0d54:  pop    %ebp
0x000f0d55:  jmp    0xf0c90

----------------
IN: 
0x000f0c90:  push   %esi
0x000f0c91:  push   %ebx
0x000f0c92:  mov    %eax,%ebx
0x000f0c94:  mov    %edx,%esi
0x000f0c96:  dec    %ecx
0x000f0c97:  cmp    $0x6,%ecx
0x000f0c9a:  ja     0xf0ca3

----------------
IN: 
0x000f0c9c:  jmp    *0xf3df0(,%ecx,4)

----------------
IN: 
0x000f0cab:  mov    %esi,%edx
0x000f0cad:  shr    $0x18,%edx
0x000f0cb0:  and    $0xf,%edx
0x000f0cb3:  mov    %ebx,%eax
0x000f0cb5:  call   0xf0c7d

----------------
IN: 
0x000f0c7d:  lea    0x57(%edx),%ecx
0x000f0c80:  cmp    $0x9,%edx
0x000f0c83:  ja     0xf0c88

----------------
IN: 
0x000f0c85:  lea    0x30(%edx),%ecx
0x000f0c88:  movsbl %cl,%edx
0x000f0c8b:  jmp    0xf0c75

----------------
IN: 
0x000f0cba:  mov    %esi,%edx
0x000f0cbc:  shr    $0x14,%edx
0x000f0cbf:  and    $0xf,%edx
0x000f0cc2:  mov    %ebx,%eax
0x000f0cc4:  call   0xf0c7d

----------------
IN: 
0x000f0cc9:  mov    %esi,%edx
0x000f0ccb:  shr    $0x10,%edx
0x000f0cce:  and    $0xf,%edx
0x000f0cd1:  mov    %ebx,%eax
0x000f0cd3:  call   0xf0c7d

----------------
IN: 
0x000f0cd8:  mov    %esi,%edx
0x000f0cda:  shr    $0xc,%edx
0x000f0cdd:  and    $0xf,%edx
0x000f0ce0:  mov    %ebx,%eax
0x000f0ce2:  call   0xf0c7d

----------------
IN: 
0x000f0ce7:  mov    %esi,%edx
0x000f0ce9:  shr    $0x8,%edx
0x000f0cec:  and    $0xf,%edx
0x000f0cef:  mov    %ebx,%eax
0x000f0cf1:  call   0xf0c7d

----------------
IN: 
0x000f0cf6:  mov    %esi,%edx
0x000f0cf8:  shr    $0x4,%edx
0x000f0cfb:  and    $0xf,%edx
0x000f0cfe:  mov    %ebx,%eax
0x000f0d00:  call   0xf0c7d

----------------
IN: 
0x000f0d05:  and    $0xf,%esi
0x000f0d08:  mov    %esi,%edx
0x000f0d0a:  mov    %ebx,%eax
0x000f0d0c:  pop    %ebx
0x000f0d0d:  pop    %esi
0x000f0d0e:  jmp    0xf0c7d

----------------
IN: 
0x000f15b8:  jmp    0xf161f

----------------
IN: 
0x000f161f:  mov    %edi,%esi
0x000f1621:  lea    0x1(%ebx),%ebp
0x000f1624:  jmp    0xf1454

----------------
IN: 
0x000eeb44:  movl   $0xffffffff,0x8(%esp)
0x000eeb4c:  movl   $0x50000,(%esp)
0x000eeb53:  movl   $0x0,0x4(%esp)
0x000eeb5b:  mov    $0xa0000,%eax
0x000eeb60:  xor    %edx,%edx
0x000eeb62:  call   0xe1ca6

----------------
IN: 
0x000e1d25:  cmp    %ebx,0x18(%esp)
0x000e1d29:  jb     0xe1dbf

----------------
IN: 
0x000e1d2f:  ja     0xe1d3b

----------------
IN: 
0x000e1d31:  cmp    %ecx,0x14(%esp)
0x000e1d35:  jbe    0xe1dbf

----------------
IN: 
0x000e1d3b:  mov    0x30(%esp),%eax
0x000e1d3f:  mov    0x10(%eax),%eax
0x000e1d42:  mov    %eax,%edi
0x000e1d44:  cmp    %eax,0x2c(%esp)
0x000e1d48:  jne    0xe1d68

----------------
IN: 
0x000e1d68:  mov    0x14(%esp),%eax
0x000e1d6c:  mov    0x18(%esp),%edx
0x000e1d70:  sub    %ecx,%eax
0x000e1d72:  sbb    %ebx,%edx
0x000e1d74:  mov    0x30(%esp),%ebx
0x000e1d78:  mov    %eax,0x8(%ebx)
0x000e1d7b:  mov    %edx,0xc(%ebx)
0x000e1d7e:  inc    %esi
0x000e1d7f:  mov    0x10(%esp),%eax
0x000e1d83:  cmp    %eax,0x20(%esp)
0x000e1d87:  jb     0xe1dbf

----------------
IN: 
0x000e1d89:  ja     0xe1d95

----------------
IN: 
0x000e1d8b:  mov    0xc(%esp),%eax
0x000e1d8f:  cmp    %eax,0x1c(%esp)
0x000e1d93:  jbe    0xe1dbf

----------------
IN: 
0x000e1d95:  mov    %edi,0x8(%esp)
0x000e1d99:  mov    0x1c(%esp),%eax
0x000e1d9d:  mov    0x20(%esp),%edx
0x000e1da1:  mov    0xc(%esp),%ecx
0x000e1da5:  mov    0x10(%esp),%ebx
0x000e1da9:  sub    %ecx,%eax
0x000e1dab:  sbb    %ebx,%edx
0x000e1dad:  mov    %eax,(%esp)
0x000e1db0:  mov    %edx,0x4(%esp)
0x000e1db4:  mov    %ecx,%edx
0x000e1db6:  mov    %ebx,%ecx
0x000e1db8:  mov    %esi,%eax
0x000e1dba:  call   0xe1c12

----------------
IN: 
0x000e0abe:  lea    0x0(%ebp,%esi,1),%edi
0x000e0ac2:  mov    0x1(%edx,%ebx,1),%al
0x000e0ac6:  mov    %al,0x1(%edi,%ebx,1)
0x000e0aca:  jmp    0xe0ab8

----------------
IN: 
0x000e0ab8:  dec    %ebx
0x000e0ab9:  cmp    $0xffffffff,%ebx
0x000e0abc:  je     0xe0acc

----------------
IN: 
0x000e1dca:  lea    0xf6078(%ebx),%ecx
0x000e1dd0:  mov    0xf6078(%ebx),%eax
0x000e1dd6:  mov    0xf607c(%ebx),%edx
0x000e1ddc:  cmp    %edx,0x10(%esp)
0x000e1de0:  jb     0xe1e36

----------------
IN: 
0x000e1de2:  ja     0xe1dea

----------------
IN: 
0x000e1de4:  cmp    %eax,0xc(%esp)
0x000e1de8:  jb     0xe1e36

----------------
IN: 
0x000e1dea:  add    0x8(%ecx),%eax
0x000e1ded:  adc    0xc(%ecx),%edx
0x000e1df0:  cmp    %edx,0x10(%esp)
0x000e1df4:  jb     0xe1e07

----------------
IN: 
0x000e1df6:  ja     0xe1dfe

----------------
IN: 
0x000e1df8:  cmp    %eax,0xc(%esp)
0x000e1dfc:  jb     0xe1e07

----------------
IN: 
0x000e1e07:  mov    0xc(%esp),%edi
0x000e1e0b:  mov    0x10(%esp),%ebp
0x000e1e0f:  mov    %edi,(%ecx)
0x000e1e11:  mov    %ebp,0x4(%ecx)
0x000e1e14:  sub    %edi,%eax
0x000e1e16:  sbb    %ebp,%edx
0x000e1e18:  mov    %eax,0x8(%ecx)
0x000e1e1b:  mov    %edx,0xc(%ecx)
0x000e1e1e:  mov    0x2c(%esp),%ebx
0x000e1e22:  cmp    0x10(%ecx),%ebx
0x000e1e25:  jne    0xe1e36

----------------
IN: 
0x000e1e69:  add    $0x34,%esp
0x000e1e6c:  pop    %ebx
0x000e1e6d:  pop    %esi
0x000e1e6e:  pop    %edi
0x000e1e6f:  pop    %ebp
0x000e1e70:  ret    

----------------
IN: 
0x000eeb67:  movl   $0x2,0x8(%esp)
0x000eeb6f:  movl   $0x10000,(%esp)
0x000eeb76:  movl   $0x0,0x4(%esp)
0x000eeb7e:  mov    $0xf0000,%eax
0x000eeb83:  xor    %edx,%edx
0x000eeb85:  call   0xe1ca6

----------------
IN: 
0x000eeb8a:  mov    0xf6074,%esi
0x000eeb90:  lea    -0x1(%esi),%eax
0x000eeb93:  mov    %eax,0x10(%esp)
0x000eeb97:  imul   $0x14,%esi,%esi
0x000eeb9a:  add    $0xf6078,%esi
0x000eeba0:  xor    %ebx,%ebx
0x000eeba2:  cmpl   $0x0,0x10(%esp)
0x000eeba7:  js     0xeebc6

----------------
IN: 
0x000eeba9:  mov    -0x14(%esi),%eax
0x000eebac:  mov    -0x10(%esi),%edx
0x000eebaf:  mov    %eax,%edi
0x000eebb1:  mov    %edx,%ebp
0x000eebb3:  add    -0xc(%esi),%edi
0x000eebb6:  adc    -0x8(%esi),%ebp
0x000eebb9:  cmp    $0x0,%ebp
0x000eebbc:  ja     0xeec12

----------------
IN: 
0x000eec12:  cmpl   $0x1,-0x4(%esi)
0x000eec16:  jne    0xeec44

----------------
IN: 
0x000eec44:  decl   0x10(%esp)
0x000eec48:  sub    $0x14,%esi
0x000eec4b:  jmp    0xeeba2

----------------
IN: 
0x000eeba2:  cmpl   $0x0,0x10(%esp)
0x000eeba7:  js     0xeebc6

----------------
IN: 
0x000eebbe:  cmp    $0xfffff,%edi
0x000eebc4:  ja     0xeec12

----------------
IN: 
0x000eec18:  cmp    $0x0,%ebp
0x000eec1b:  ja     0xeec44

----------------
IN: 
0x000eec1d:  mov    %eax,%edx
0x000eec1f:  mov    %edi,%ecx
0x000eec21:  test   %ebx,%ebx
0x000eec23:  jne    0xeec3a

----------------
IN: 
0x000eec25:  lea    -0x10000(%edi),%ebp
0x000eec2b:  and    $0xfffffff0,%ebp
0x000eec2e:  cmp    %eax,%ebp
0x000eec30:  jb     0xeec3a

----------------
IN: 
0x000eec32:  cmp    %edi,%ebp
0x000eec34:  ja     0xeec3a

----------------
IN: 
0x000eec36:  mov    %ebp,%ebx
0x000eec38:  mov    %ebp,%ecx
0x000eec3a:  mov    $0xf0b58,%eax
0x000eec3f:  call   0xe1f08

----------------
IN: 
0x000e1f08:  push   %ebp
0x000e1f09:  push   %edi
0x000e1f0a:  push   %esi
0x000e1f0b:  push   %ebx
0x000e1f0c:  sub    $0x30,%esp
0x000e1f0f:  mov    %edx,%ebx
0x000e1f11:  mov    %eax,%edx
0x000e1f13:  mov    (%eax),%eax
0x000e1f15:  test   %eax,%eax
0x000e1f17:  jne    0xe1f53

----------------
IN: 
0x000e1f19:  mov    %ebx,0x24(%esp)
0x000e1f1d:  mov    %ebx,0x20(%esp)
0x000e1f21:  mov    %ecx,0x28(%esp)
0x000e1f25:  lea    0x18(%esp),%esi
0x000e1f29:  mov    %esi,%eax
0x000e1f2b:  call   0xdfe3f

----------------
IN: 
0x000dfe3f:  mov    (%edx),%ecx
0x000dfe41:  mov    %edx,0x4(%eax)
0x000dfe44:  mov    %ecx,(%eax)
0x000dfe46:  test   %ecx,%ecx
0x000dfe48:  je     0xdfe4d

----------------
IN: 
0x000dfe4d:  mov    %eax,(%edx)
0x000dfe4f:  ret    

----------------
IN: 
0x000e1f30:  movl   $0x0,(%esp)
0x000e1f37:  mov    $0x10,%ecx
0x000e1f3c:  mov    $0x2c,%edx
0x000e1f41:  mov    $0xf0b58,%eax
0x000e1f46:  call   0xe017f

----------------
IN: 
0x000e017f:  push   %edi
0x000e0180:  push   %esi
0x000e0181:  push   %ebx
0x000e0182:  mov    0x10(%esp),%edi
0x000e0186:  mov    (%eax),%esi
0x000e0188:  neg    %ecx
0x000e018a:  test   %esi,%esi
0x000e018c:  je     0xe01c6

----------------
IN: 
0x000e018e:  mov    0x10(%esi),%eax
0x000e0191:  mov    %eax,%ebx
0x000e0193:  sub    %edx,%ebx
0x000e0195:  and    %ecx,%ebx
0x000e0197:  cmp    %eax,%ebx
0x000e0199:  ja     0xe01c2

----------------
IN: 
0x000e019b:  cmp    0xc(%esi),%ebx
0x000e019e:  jb     0xe01c2

----------------
IN: 
0x000e01a0:  test   %edi,%edi
0x000e01a2:  jne    0xe01a6

----------------
IN: 
0x000e01a4:  mov    %ebx,%edi
0x000e01a6:  mov    %ebx,0x8(%edi)
0x000e01a9:  add    %ebx,%edx
0x000e01ab:  mov    %edx,0xc(%edi)
0x000e01ae:  mov    %eax,0x10(%edi)
0x000e01b1:  mov    %ebx,0x10(%esi)
0x000e01b4:  mov    0x4(%esi),%edx
0x000e01b7:  mov    %edi,%eax
0x000e01b9:  call   0xdfe3f

----------------
IN: 
0x000dfe4a:  mov    %eax,0x4(%ecx)
0x000dfe4d:  mov    %eax,(%edx)
0x000dfe4f:  ret    

----------------
IN: 
0x000e01be:  mov    %ebx,%eax
0x000e01c0:  jmp    0xe01c8

----------------
IN: 
0x000e01c8:  pop    %ebx
0x000e01c9:  pop    %esi
0x000e01ca:  pop    %edi
0x000e01cb:  ret    

----------------
IN: 
0x000e1f4b:  mov    %eax,%ebx
0x000e1f4d:  test   %eax,%eax
0x000e1f4f:  jne    0xe1f93

----------------
IN: 
0x000e1f93:  mov    0x1c(%esp),%ebp
0x000e1f97:  mov    %esi,%eax
0x000e1f99:  call   0xdfe30

----------------
IN: 
0x000dfe30:  mov    (%eax),%edx
0x000dfe32:  mov    0x4(%eax),%eax
0x000dfe35:  mov    %edx,(%eax)
0x000dfe37:  test   %edx,%edx
0x000dfe39:  je     0xdfe3e

----------------
IN: 
0x000dfe3e:  ret    

----------------
IN: 
0x000e1f9e:  lea    0x14(%ebx),%eax
0x000e1fa1:  mov    $0x5,%ecx
0x000e1fa6:  mov    %eax,%edi
0x000e1fa8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e1fa8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e1faa:  movl   $0xffffffff,0x28(%ebx)
0x000e1fb1:  mov    %ebp,%edx
0x000e1fb3:  call   0xdfe3f

----------------
IN: 
0x000e1fb8:  add    $0x30,%esp
0x000e1fbb:  pop    %ebx
0x000e1fbc:  pop    %esi
0x000e1fbd:  pop    %edi
0x000e1fbe:  pop    %ebp
0x000e1fbf:  ret    

----------------
IN: 
0x000eebc6:  mov    $0x90000,%ecx
0x000eebcb:  mov    $0x7000,%edx
0x000eebd0:  mov    $0xf0b5c,%eax
0x000eebd5:  call   0xe1f08

----------------
IN: 
0x000e01c2:  mov    (%esi),%esi
0x000e01c4:  jmp    0xe018a

----------------
IN: 
0x000e018a:  test   %esi,%esi
0x000e018c:  je     0xe01c6

----------------
IN: 
0x000eebda:  test   %ebx,%ebx
0x000eebdc:  je     0xeec50

----------------
IN: 
0x000eebde:  lea    0x10000(%ebx),%ecx
0x000eebe4:  mov    %ebx,%edx
0x000eebe6:  mov    $0xf0b64,%eax
0x000eebeb:  call   0xe1f08

----------------
IN: 
0x000eebf0:  mov    %ebx,%eax
0x000eebf2:  xor    %edx,%edx
0x000eebf4:  movl   $0x2,0x8(%esp)
0x000eebfc:  movl   $0x10000,(%esp)
0x000eec03:  movl   $0x0,0x4(%esp)
0x000eec0b:  call   0xe1ca6

----------------
IN: 
0x000eec10:  jmp    0xeec50

----------------
IN: 
0x000eec50:  mov    $0xdfe29,%esi
0x000eec55:  mov    $0xf0bf5,%ebx
0x000eec5a:  sub    %esi,%ebx
0x000eec5c:  mov    %ebx,%edx
0x000eec5e:  mov    $0x10,%eax
0x000eec63:  call   0xe125a

----------------
IN: 
0x000e125a:  push   %esi
0x000e125b:  push   %ebx
0x000e125c:  push   %ecx
0x000e125d:  mov    %eax,%esi
0x000e125f:  mov    %edx,%ebx
0x000e1261:  mov    %eax,(%esp)
0x000e1264:  mov    %edx,%ecx
0x000e1266:  or     $0xffffffff,%edx
0x000e1269:  mov    $0xf0b58,%eax
0x000e126e:  call   0xe01e5

----------------
IN: 
0x000e01e5:  push   %ebp
0x000e01e6:  push   %edi
0x000e01e7:  push   %esi
0x000e01e8:  push   %ebx
0x000e01e9:  push   %ebx
0x000e01ea:  mov    %ecx,%esi
0x000e01ec:  test   %ecx,%ecx
0x000e01ee:  je     0xe0254

----------------
IN: 
0x000e01f0:  mov    %eax,%ebp
0x000e01f2:  mov    %edx,%edi
0x000e01f4:  movl   $0x0,(%esp)
0x000e01fb:  mov    $0x10,%ecx
0x000e0200:  mov    $0x2c,%edx
0x000e0205:  mov    $0xf0b58,%eax
0x000e020a:  call   0xe017f

----------------
IN: 
0x000e020f:  mov    %eax,%ebx
0x000e0211:  test   %eax,%eax
0x000e0213:  jne    0xe0236

----------------
IN: 
0x000e0236:  lea    0x14(%ebx),%eax
0x000e0239:  mov    %eax,(%esp)
0x000e023c:  mov    0x18(%esp),%ecx
0x000e0240:  mov    %esi,%edx
0x000e0242:  mov    %ebp,%eax
0x000e0244:  call   0xe017f

----------------
IN: 
0x000e01a6:  mov    %ebx,0x8(%edi)
0x000e01a9:  add    %ebx,%edx
0x000e01ab:  mov    %edx,0xc(%edi)
0x000e01ae:  mov    %eax,0x10(%edi)
0x000e01b1:  mov    %ebx,0x10(%esi)
0x000e01b4:  mov    0x4(%esi),%edx
0x000e01b7:  mov    %edi,%eax
0x000e01b9:  call   0xdfe3f

----------------
IN: 
0x000e0249:  test   %eax,%eax
0x000e024b:  jne    0xe0258

----------------
IN: 
0x000e0258:  mov    %edi,0x28(%ebx)
0x000e025b:  pop    %edx
0x000e025c:  pop    %ebx
0x000e025d:  pop    %esi
0x000e025e:  pop    %edi
0x000e025f:  pop    %ebp
0x000e0260:  ret    

----------------
IN: 
0x000e1273:  test   %eax,%eax
0x000e1275:  jne    0xe1289

----------------
IN: 
0x000e1289:  pop    %edx
0x000e128a:  pop    %ebx
0x000e128b:  pop    %esi
0x000e128c:  ret    

----------------
IN: 
0x000eec68:  mov    %eax,%ebp
0x000eec6a:  test   %eax,%eax
0x000eec6c:  jne    0xeec7a

----------------
IN: 
0x000eec7a:  mov    %ebx,0xc(%esp)
0x000eec7e:  mov    %eax,0x8(%esp)
0x000eec82:  movl   $0xdfe29,0x4(%esp)
0x000eec8a:  movl   $0xf5c44,(%esp)
0x000eec91:  call   0xf1787

----------------
IN: 
0x000f14f1:  cmp    $0x70,%al
0x000f14f3:  jne    0xf160d

----------------
IN: 
0x000f14f9:  lea    0x4(%esi),%edi
0x000f14fc:  mov    (%esi),%ebp
0x000f14fe:  mov    $0x30,%edx
0x000f1503:  mov    0x4(%esp),%esi
0x000f1507:  mov    %esi,%eax
0x000f1509:  call   0xf0c75

----------------
IN: 
0x000f150e:  mov    $0x78,%edx
0x000f1513:  mov    %esi,%eax
0x000f1515:  call   0xf0c75

----------------
IN: 
0x000f151a:  jmp    0xf1597

----------------
IN: 
0x000f1597:  mov    $0x8,%ecx
0x000f159c:  mov    %ebp,%edx
0x000f159e:  mov    %esi,%eax
0x000f15a0:  call   0xf0c90

----------------
IN: 
0x000f0ca3:  shr    $0x1c,%edx
0x000f0ca6:  call   0xf0c7d

----------------
IN: 
0x000f0c88:  movsbl %cl,%edx
0x000f0c8b:  jmp    0xf0c75

----------------
IN: 
0x000f15a5:  jmp    0xf161f

----------------
IN: 
0x000f1529:  mov    (%esi),%ebp
0x000f152b:  mov    %edi,%eax
0x000f152d:  test   %al,%al
0x000f152f:  jne    0xf1536

----------------
IN: 
0x000f1531:  add    $0x4,%esi
0x000f1534:  jmp    0xf1539

----------------
IN: 
0x000f1539:  test   %ebp,%ebp
0x000f153b:  jns    0xf154d

----------------
IN: 
0x000f154d:  mov    %ebp,%edx
0x000f154f:  jmp    0xf1561

----------------
IN: 
0x000f1561:  mov    0x4(%esp),%eax
0x000f1565:  call   0xf13fc

----------------
IN: 
0x000f13fc:  push   %esi
0x000f13fd:  push   %ebx
0x000f13fe:  sub    $0xc,%esp
0x000f1401:  mov    %eax,%esi
0x000f1403:  movb   $0x0,0xb(%esp)
0x000f1408:  lea    0xa(%esp),%ebx
0x000f140c:  mov    $0xa,%ecx
0x000f1411:  mov    %edx,%eax
0x000f1413:  xor    %edx,%edx
0x000f1415:  div    %ecx
0x000f1417:  add    $0x30,%edx
0x000f141a:  mov    %dl,(%ebx)
0x000f141c:  mov    %eax,%edx
0x000f141e:  test   %eax,%eax
0x000f1420:  je     0xf1425

----------------
IN: 
0x000f1422:  dec    %ebx
0x000f1423:  jmp    0xf1411

----------------
IN: 
0x000f1411:  mov    %edx,%eax
0x000f1413:  xor    %edx,%edx
0x000f1415:  div    %ecx
0x000f1417:  add    $0x30,%edx
0x000f141a:  mov    %dl,(%ebx)
0x000f141c:  mov    %eax,%edx
0x000f141e:  test   %eax,%eax
0x000f1420:  je     0xf1425

----------------
IN: 
0x000f1425:  test   %ebx,%ebx
0x000f1427:  jne    0xf142e

----------------
IN: 
0x000f142e:  movsbl (%ebx),%edx
0x000f1431:  test   %dl,%dl
0x000f1433:  je     0xf143f

----------------
IN: 
0x000f1435:  mov    %esi,%eax
0x000f1437:  call   0xf0c75

----------------
IN: 
0x000f143c:  inc    %ebx
0x000f143d:  jmp    0xf142e

----------------
IN: 
0x000f143f:  add    $0xc,%esp
0x000f1442:  pop    %ebx
0x000f1443:  pop    %esi
0x000f1444:  ret    

----------------
IN: 
0x000f156a:  jmp    0xf1621

----------------
IN: 
0x000eec96:  mov    %ebp,%eax
0x000eec98:  sub    $0xdfe29,%eax
0x000eec9d:  mov    %ebp,%edi
0x000eec9f:  mov    %ebx,%ecx
0x000eeca1:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000eeca1:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000eeca3:  mov    $0xde768,%edx
0x000eeca8:  cmp    $0xded74,%edx
0x000eecae:  jae    0xeecbb

----------------
IN: 
0x000eecb0:  mov    (%edx),%ecx
0x000eecb2:  add    %ebp,%ecx
0x000eecb4:  add    %eax,(%ecx)
0x000eecb6:  add    $0x4,%edx
0x000eecb9:  jmp    0xeeca8

----------------
IN: 
0x000eeca8:  cmp    $0xded74,%edx
0x000eecae:  jae    0xeecbb

----------------
IN: 
0x000eecbb:  mov    %eax,%ebx
0x000eecbd:  neg    %ebx
0x000eecbf:  mov    $0xded74,%edx
0x000eecc4:  cmp    $0xdf5b4,%edx
0x000eecca:  jae    0xeecd7

----------------
IN: 
0x000eeccc:  mov    (%edx),%ecx
0x000eecce:  add    %ebp,%ecx
0x000eecd0:  add    %ebx,(%ecx)
0x000eecd2:  add    $0x4,%edx
0x000eecd5:  jmp    0xeecc4

----------------
IN: 
0x000eecc4:  cmp    $0xdf5b4,%edx
0x000eecca:  jae    0xeecd7

----------------
IN: 
0x000eecd7:  mov    $0xdf5b4,%edx
0x000eecdc:  cmp    $0xdf5c0,%edx
0x000eece2:  jae    0xeecf1

----------------
IN: 
0x000eece4:  mov    (%edx),%ecx
0x000eece6:  add    %eax,0xde768(%ecx)
0x000eecec:  add    $0x4,%edx
0x000eecef:  jmp    0xeecdc

----------------
IN: 
0x000eecdc:  cmp    $0xdf5c0,%edx
0x000eece2:  jae    0xeecf1

----------------
IN: 
0x000eecf1:  mov    $0xebc74,%edx
0x000eecf6:  cmp    $0xdfe29,%edx
0x000eecfc:  jb     0xeed08

----------------
IN: 
0x000eecfe:  cmp    $0xf0bf5,%edx
0x000eed04:  jae    0xeed08

----------------
IN: 
0x000eed06:  add    %eax,%edx
0x000eed08:  xor    %eax,%eax
0x000eed0a:  call   *%edx

----------------
IN: 
0x07feafbb:  xor    %eax,%eax
0x07feafbd:  mov    0x7fefe8b(,%eax,4),%ecx
0x07feafc4:  mov    (%ecx),%edx
0x07feafc6:  test   %edx,%edx
0x07feafc8:  je     0x7feafcd

----------------
IN: 
0x07feafca:  mov    %ecx,0x4(%edx)
0x07feafcd:  inc    %eax
0x07feafce:  cmp    $0x5,%eax
0x07feafd1:  jne    0x7feafbd

----------------
IN: 
0x07feafbd:  mov    0x7fefe8b(,%eax,4),%ecx
0x07feafc4:  mov    (%ecx),%edx
0x07feafc6:  test   %edx,%edx
0x07feafc8:  je     0x7feafcd

----------------
IN: 
0x07feafcd:  inc    %eax
0x07feafce:  cmp    $0x5,%eax
0x07feafd1:  jne    0x7feafbd

----------------
IN: 
0x07feafd3:  push   %ebp
0x07feafd4:  push   %edi
0x07feafd5:  push   %esi
0x07feafd6:  push   %ebx
0x07feafd7:  sub    $0x18c,%esp
0x07feafdd:  mov    $0xdfe29,%ecx
0x07feafe2:  sub    $0xdf5c0,%ecx
0x07feafe8:  mov    $0xdf5c0,%edx
0x07feafed:  mov    $0xef790,%eax
0x07feaff2:  call   0x7fdfddf

----------------
IN: 
0x07fdfddf:  push   %ebp
0x07fdfde0:  push   %edi
0x07fdfde1:  push   %esi
0x07fdfde2:  push   %ebx
0x07fdfde3:  cmp    %eax,%edx
0x07fdfde5:  jb     0x7fdfdef

----------------
IN: 
0x07fdfdef:  lea    -0x1(%ecx),%ebx
0x07fdfdf2:  lea    (%eax,%ebx,1),%ebp
0x07fdfdf5:  add    %ebx,%edx
0x07fdfdf7:  mov    %ecx,%ebx
0x07fdfdf9:  mov    %ecx,%esi
0x07fdfdfb:  neg    %esi
0x07fdfdfd:  add    %esi,%edx
0x07fdfdff:  dec    %ebx
0x07fdfe00:  cmp    $0xffffffff,%ebx
0x07fdfe03:  je     0x7fdfe13

----------------
IN: 
0x07fdfe05:  lea    0x0(%ebp,%esi,1),%edi
0x07fdfe09:  mov    0x1(%edx,%ebx,1),%al
0x07fdfe0d:  mov    %al,0x1(%edi,%ebx,1)
0x07fdfe11:  jmp    0x7fdfdff

----------------
IN: 
0x07fdfdff:  dec    %ebx
0x07fdfe00:  cmp    $0xffffffff,%ebx
0x07fdfe03:  je     0x7fdfe13

----------------
IN: 
0x07fdfe13:  mov    %ebp,%eax
0x07fdfe15:  sub    %ecx,%eax
0x07fdfe17:  pop    %ebx
0x07fdfe18:  pop    %esi
0x07fdfe19:  pop    %edi
0x07fdfe1a:  pop    %ebp
0x07fdfe1b:  ret    

----------------
IN: 
0x07feaff7:  mov    $0xef790,%ecx
0x07feaffc:  mov    $0xe0010,%edx
0x07feb001:  mov    $0x7fefeaf,%eax
0x07feb006:  call   0x7fe124f

----------------
IN: 
0x07fe124f:  push   %ebp
0x07fe1250:  push   %edi
0x07fe1251:  push   %esi
0x07fe1252:  push   %ebx
0x07fe1253:  sub    $0x30,%esp
0x07fe1256:  mov    %edx,%ebx
0x07fe1258:  mov    %eax,%edx
0x07fe125a:  mov    (%eax),%eax
0x07fe125c:  test   %eax,%eax
0x07fe125e:  jne    0x7fe129a

----------------
IN: 
0x07fe1260:  mov    %ebx,0x24(%esp)
0x07fe1264:  mov    %ebx,0x20(%esp)
0x07fe1268:  mov    %ecx,0x28(%esp)
0x07fe126c:  lea    0x18(%esp),%esi
0x07fe1270:  mov    %esi,%eax
0x07fe1272:  call   0x7fdf186

----------------
IN: 
0x07fdf186:  mov    (%edx),%ecx
0x07fdf188:  mov    %edx,0x4(%eax)
0x07fdf18b:  mov    %ecx,(%eax)
0x07fdf18d:  test   %ecx,%ecx
0x07fdf18f:  je     0x7fdf194

----------------
IN: 
0x07fdf194:  mov    %eax,(%edx)
0x07fdf196:  ret    

----------------
IN: 
0x07fe1277:  movl   $0x0,(%esp)
0x07fe127e:  mov    $0x10,%ecx
0x07fe1283:  mov    $0x2c,%edx
0x07fe1288:  mov    $0x7fefe9f,%eax
0x07fe128d:  call   0x7fdf4c6

----------------
IN: 
0x07fdf4c6:  push   %edi
0x07fdf4c7:  push   %esi
0x07fdf4c8:  push   %ebx
0x07fdf4c9:  mov    0x10(%esp),%edi
0x07fdf4cd:  mov    (%eax),%esi
0x07fdf4cf:  neg    %ecx
0x07fdf4d1:  test   %esi,%esi
0x07fdf4d3:  je     0x7fdf50d

----------------
IN: 
0x07fdf4d5:  mov    0x10(%esi),%eax
0x07fdf4d8:  mov    %eax,%ebx
0x07fdf4da:  sub    %edx,%ebx
0x07fdf4dc:  and    %ecx,%ebx
0x07fdf4de:  cmp    %eax,%ebx
0x07fdf4e0:  ja     0x7fdf509

----------------
IN: 
0x07fdf4e2:  cmp    0xc(%esi),%ebx
0x07fdf4e5:  jb     0x7fdf509

----------------
IN: 
0x07fdf509:  mov    (%esi),%esi
0x07fdf50b:  jmp    0x7fdf4d1

----------------
IN: 
0x07fdf4d1:  test   %esi,%esi
0x07fdf4d3:  je     0x7fdf50d

----------------
IN: 
0x07fdf4e7:  test   %edi,%edi
0x07fdf4e9:  jne    0x7fdf4ed

----------------
IN: 
0x07fdf4eb:  mov    %ebx,%edi
0x07fdf4ed:  mov    %ebx,0x8(%edi)
0x07fdf4f0:  add    %ebx,%edx
0x07fdf4f2:  mov    %edx,0xc(%edi)
0x07fdf4f5:  mov    %eax,0x10(%edi)
0x07fdf4f8:  mov    %ebx,0x10(%esi)
0x07fdf4fb:  mov    0x4(%esi),%edx
0x07fdf4fe:  mov    %edi,%eax
0x07fdf500:  call   0x7fdf186

----------------
IN: 
0x07fdf191:  mov    %eax,0x4(%ecx)
0x07fdf194:  mov    %eax,(%edx)
0x07fdf196:  ret    

----------------
IN: 
0x07fdf505:  mov    %ebx,%eax
0x07fdf507:  jmp    0x7fdf50f

----------------
IN: 
0x07fdf50f:  pop    %ebx
0x07fdf510:  pop    %esi
0x07fdf511:  pop    %edi
0x07fdf512:  ret    

----------------
IN: 
0x07fe1292:  mov    %eax,%ebx
0x07fe1294:  test   %eax,%eax
0x07fe1296:  jne    0x7fe12da

----------------
IN: 
0x07fe12da:  mov    0x1c(%esp),%ebp
0x07fe12de:  mov    %esi,%eax
0x07fe12e0:  call   0x7fdf177

----------------
IN: 
0x07fdf177:  mov    (%eax),%edx
0x07fdf179:  mov    0x4(%eax),%eax
0x07fdf17c:  mov    %edx,(%eax)
0x07fdf17e:  test   %edx,%edx
0x07fdf180:  je     0x7fdf185

----------------
IN: 
0x07fdf185:  ret    

----------------
IN: 
0x07fe12e5:  lea    0x14(%ebx),%eax
0x07fe12e8:  mov    $0x5,%ecx
0x07fe12ed:  mov    %eax,%edi
0x07fe12ef:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe12ef:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe12f1:  movl   $0xffffffff,0x28(%ebx)
0x07fe12f8:  mov    %ebp,%edx
0x07fe12fa:  call   0x7fdf186

----------------
IN: 
0x07fe12ff:  add    $0x30,%esp
0x07fe1302:  pop    %ebx
0x07fe1303:  pop    %esi
0x07fe1304:  pop    %edi
0x07fe1305:  pop    %ebp
0x07fe1306:  ret    

----------------
IN: 
0x07feb00b:  mov    0x7fefeaf,%eax
0x07feb010:  xor    %edx,%edx
0x07feb012:  test   %eax,%eax
0x07feb014:  je     0x7feb01c

----------------
IN: 
0x07feb016:  mov    %eax,%edx
0x07feb018:  mov    (%eax),%eax
0x07feb01a:  jmp    0x7feb012

----------------
IN: 
0x07feb012:  test   %eax,%eax
0x07feb014:  je     0x7feb01c

----------------
IN: 
0x07feb01c:  mov    %edx,0xf5fc8
0x07feb022:  mov    $0xf0c00,%ecx
0x07feb027:  sub    $0xf0000,%ecx
0x07feb02d:  xor    %edx,%edx
0x07feb02f:  mov    $0xf0000,%eax
0x07feb034:  call   0xf0d7a

----------------
IN: 
0x000f0d7a:  test   %ecx,%ecx
0x000f0d7c:  je     0xf0d84

----------------
IN: 
0x000f0d7e:  dec    %ecx
0x000f0d7f:  mov    %dl,(%eax,%ecx,1)
0x000f0d82:  jmp    0xf0d7a

----------------
IN: 
0x000f0d84:  ret    

----------------
IN: 
0x07feb039:  mov    $0xf0c00,%ecx
0x07feb03e:  mov    $0xf0000,%edx
0x07feb043:  mov    $0x7fefea7,%eax
0x07feb048:  call   0x7fe124f

----------------
IN: 
0x07feb04d:  call   0x7fdf770

----------------
IN: 
0x07fdf770:  push   %esi
0x07fdf771:  push   %ebx
0x07fdf772:  mov    0xf6074,%ecx
0x07fdf778:  lea    -0x1(%ecx),%ebx
0x07fdf77b:  imul   $0x14,%ecx,%ecx
0x07fdf77e:  add    $0xf6078,%ecx
0x07fdf784:  test   %ebx,%ebx
0x07fdf786:  js     0x7fdf7a8

----------------
IN: 
0x07fdf788:  mov    -0xc(%ecx),%eax
0x07fdf78b:  mov    -0x8(%ecx),%edx
0x07fdf78e:  add    -0x14(%ecx),%eax
0x07fdf791:  adc    -0x10(%ecx),%edx
0x07fdf794:  mov    -0x4(%ecx),%esi
0x07fdf797:  cmp    $0x0,%edx
0x07fdf79a:  ja     0x7fdf7a2

----------------
IN: 
0x07fdf7a2:  dec    %ebx
0x07fdf7a3:  sub    $0x14,%ecx
0x07fdf7a6:  jmp    0x7fdf784

----------------
IN: 
0x07fdf784:  test   %ebx,%ebx
0x07fdf786:  js     0x7fdf7a8

----------------
IN: 
0x07fdf79c:  and    $0xfffffffd,%esi
0x07fdf79f:  dec    %esi
0x07fdf7a0:  je     0x7fdf7aa

----------------
IN: 
0x07fdf7aa:  cmp    $0x100000,%eax
0x07fdf7af:  jae    0x7fdf7b6

----------------
IN: 
0x07fdf7b6:  mov    %eax,0xf6070
0x07fdf7bb:  pop    %ebx
0x07fdf7bc:  pop    %esi
0x07fdf7bd:  ret    

----------------
IN: 
0x07feb052:  mov    $0x510,%edx
0x07feb057:  xor    %eax,%eax
0x07feb059:  out    %ax,(%dx)
0x07feb05b:  mov    $0xf504c,%ecx
0x07feb060:  mov    $0x11,%dl
0x07feb062:  mov    $0x511,%ebx
0x07feb067:  in     (%dx),%al
0x07feb068:  movzbl %al,%eax
0x07feb06b:  movsbl (%ecx),%esi
0x07feb06e:  cmp    %esi,%eax
0x07feb070:  jne    0x7feb58c

----------------
IN: 
0x07feb076:  inc    %ecx
0x07feb077:  cmp    $0xf5050,%ecx
0x07feb07d:  jne    0x7feb062

----------------
IN: 
0x07feb062:  mov    $0x511,%ebx
0x07feb067:  in     (%dx),%al
0x07feb068:  movzbl %al,%eax
0x07feb06b:  movsbl (%ecx),%esi
0x07feb06e:  cmp    %esi,%eax
0x07feb070:  jne    0x7feb58c

----------------
IN: 
0x07feb07f:  movl   $0xf5717,(%esp)
0x07feb086:  call   0xf1787

----------------
IN: 
0x07feb08b:  movl   $0x2,(%esp)
0x07feb092:  xor    %ecx,%ecx
0x07feb094:  mov    $0xe,%edx
0x07feb099:  mov    $0xf572a,%eax
0x07feb09e:  call   0x7fe0e01

----------------
IN: 
0x07fe0e01:  push   %ebp
0x07fe0e02:  push   %edi
0x07fe0e03:  push   %esi
0x07fe0e04:  push   %ebx
0x07fe0e05:  push   %ebx
0x07fe0e06:  mov    %eax,(%esp)
0x07fe0e09:  mov    %edx,%edi
0x07fe0e0b:  mov    %ecx,%esi
0x07fe0e0d:  mov    0x18(%esp),%ebp
0x07fe0e11:  mov    $0x94,%eax
0x07fe0e16:  call   0x7fe0529

----------------
IN: 
0x07fe0529:  push   %ebx
0x07fe052a:  push   %ecx
0x07fe052b:  mov    %eax,%ebx
0x07fe052d:  call   0x7fdf625

----------------
IN: 
0x07fdf625:  push   %edx
0x07fdf626:  movl   $0x10,(%esp)
0x07fdf62d:  mov    %eax,%ecx
0x07fdf62f:  or     $0xffffffff,%edx
0x07fdf632:  mov    $0x7fefe9f,%eax
0x07fdf637:  call   0x7fdf52c

----------------
IN: 
0x07fdf52c:  push   %ebp
0x07fdf52d:  push   %edi
0x07fdf52e:  push   %esi
0x07fdf52f:  push   %ebx
0x07fdf530:  push   %ebx
0x07fdf531:  mov    %ecx,%esi
0x07fdf533:  test   %ecx,%ecx
0x07fdf535:  je     0x7fdf59b

----------------
IN: 
0x07fdf537:  mov    %eax,%ebp
0x07fdf539:  mov    %edx,%edi
0x07fdf53b:  movl   $0x0,(%esp)
0x07fdf542:  mov    $0x10,%ecx
0x07fdf547:  mov    $0x2c,%edx
0x07fdf54c:  mov    $0x7fefe9f,%eax
0x07fdf551:  call   0x7fdf4c6

----------------
IN: 
0x07fdf556:  mov    %eax,%ebx
0x07fdf558:  test   %eax,%eax
0x07fdf55a:  jne    0x7fdf57d

----------------
IN: 
0x07fdf57d:  lea    0x14(%ebx),%eax
0x07fdf580:  mov    %eax,(%esp)
0x07fdf583:  mov    0x18(%esp),%ecx
0x07fdf587:  mov    %esi,%edx
0x07fdf589:  mov    %ebp,%eax
0x07fdf58b:  call   0x7fdf4c6

----------------
IN: 
0x07fdf4ed:  mov    %ebx,0x8(%edi)
0x07fdf4f0:  add    %ebx,%edx
0x07fdf4f2:  mov    %edx,0xc(%edi)
0x07fdf4f5:  mov    %eax,0x10(%edi)
0x07fdf4f8:  mov    %ebx,0x10(%esi)
0x07fdf4fb:  mov    0x4(%esi),%edx
0x07fdf4fe:  mov    %edi,%eax
0x07fdf500:  call   0x7fdf186

----------------
IN: 
0x07fdf590:  test   %eax,%eax
0x07fdf592:  jne    0x7fdf59f

----------------
IN: 
0x07fdf59f:  mov    %edi,0x28(%ebx)
0x07fdf5a2:  pop    %edx
0x07fdf5a3:  pop    %ebx
0x07fdf5a4:  pop    %esi
0x07fdf5a5:  pop    %edi
0x07fdf5a6:  pop    %ebp
0x07fdf5a7:  ret    

----------------
IN: 
0x07fdf63c:  pop    %ecx
0x07fdf63d:  ret    

----------------
IN: 
0x07fe0532:  test   %eax,%eax
0x07fe0534:  jne    0x7fe054c

----------------
IN: 
0x07fe054c:  pop    %edx
0x07fe054d:  pop    %ebx
0x07fe054e:  ret    

----------------
IN: 
0x07fe0e1b:  mov    %eax,%ebx
0x07fe0e1d:  test   %eax,%eax
0x07fe0e1f:  jne    0x7fe0e35

----------------
IN: 
0x07fe0e35:  mov    $0x94,%ecx
0x07fe0e3a:  xor    %edx,%edx
0x07fe0e3c:  call   0xf0d7a

----------------
IN: 
0x07fe0e41:  lea    0x4(%ebx),%eax
0x07fe0e44:  mov    $0x80,%ecx
0x07fe0e49:  mov    (%esp),%edx
0x07fe0e4c:  call   0x7fdf1d4

----------------
IN: 
0x07fdf1d4:  push   %esi
0x07fdf1d5:  push   %ebx
0x07fdf1d6:  lea    0x1(%edx),%esi
0x07fdf1d9:  add    %ecx,%edx
0x07fdf1db:  mov    %eax,%ebx
0x07fdf1dd:  cmp    %edx,%esi
0x07fdf1df:  je     0x7fdf1ef

----------------
IN: 
0x07fdf1e1:  inc    %esi
0x07fdf1e2:  mov    -0x2(%esi),%cl
0x07fdf1e5:  test   %cl,%cl
0x07fdf1e7:  je     0x7fdf1ef

----------------
IN: 
0x07fdf1e9:  inc    %ebx
0x07fdf1ea:  mov    %cl,-0x1(%ebx)
0x07fdf1ed:  jmp    0x7fdf1dd

----------------
IN: 
0x07fdf1dd:  cmp    %edx,%esi
0x07fdf1df:  je     0x7fdf1ef

----------------
IN: 
0x07fdf1ef:  movb   $0x0,(%ebx)
0x07fdf1f2:  pop    %ebx
0x07fdf1f3:  pop    %esi
0x07fdf1f4:  ret    

----------------
IN: 
0x07fe0e51:  mov    %ebp,0x84(%ebx)
0x07fe0e57:  mov    %edi,0x8c(%ebx)
0x07fe0e5d:  mov    %esi,0x90(%ebx)
0x07fe0e63:  movl   $0x7fe072f,0x88(%ebx)
0x07fe0e6d:  mov    0x7fefe83,%eax
0x07fe0e72:  mov    %eax,(%ebx)
0x07fe0e74:  mov    %ebx,0x7fefe83
0x07fe0e7a:  pop    %eax
0x07fe0e7b:  pop    %ebx
0x07fe0e7c:  pop    %esi
0x07fe0e7d:  pop    %edi
0x07fe0e7e:  pop    %ebp
0x07fe0e7f:  ret    

----------------
IN: 
0x07feb0a3:  movl   $0x1,(%esp)
0x07feb0aa:  xor    %ecx,%ecx
0x07feb0ac:  mov    $0x8002,%edx
0x07feb0b1:  mov    $0xf4901,%eax
0x07feb0b6:  call   0x7fe0e01

----------------
IN: 
0x07feb0bb:  movl   $0x2,(%esp)
0x07feb0c2:  xor    %ecx,%ecx
0x07feb0c4:  mov    $0xf,%edx
0x07feb0c9:  mov    $0xf4c55,%eax
0x07feb0ce:  call   0x7fe0e01

----------------
IN: 
0x07feb0d3:  mov    $0x510,%esi
0x07feb0d8:  mov    $0xd,%eax
0x07feb0dd:  mov    %esi,%edx
0x07feb0df:  out    %ax,(%dx)
0x07feb0e1:  mov    $0x8,%ecx
0x07feb0e6:  lea    0xe4(%esp),%edi
0x07feb0ed:  mov    %ebx,%edx
0x07feb0ef:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb0ef:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb0f1:  xor    %edx,%edx
0x07feb0f3:  xor    %ecx,%ecx
0x07feb0f5:  mov    $0xf4c55,%eax
0x07feb0fa:  call   0x7fe081e

----------------
IN: 
0x07fe081e:  push   %ebp
0x07fe081f:  mov    %esp,%ebp
0x07fe0821:  push   %edi
0x07fe0822:  push   %esi
0x07fe0823:  push   %ebx
0x07fe0824:  sub    $0x8,%esp
0x07fe0827:  mov    %edx,%esi
0x07fe0829:  mov    %ecx,%edi
0x07fe082b:  call   0x7fe07e9

----------------
IN: 
0x07fe07e9:  push   %edi
0x07fe07ea:  push   %esi
0x07fe07eb:  push   %ebx
0x07fe07ec:  mov    %eax,%esi
0x07fe07ee:  call   0x7fdf1a5

----------------
IN: 
0x07fdf1a5:  mov    %eax,%edx
0x07fdf1a7:  cmpb   $0x0,(%edx)
0x07fdf1aa:  je     0x7fdf1af

----------------
IN: 
0x07fdf1ac:  inc    %edx
0x07fdf1ad:  jmp    0x7fdf1a7

----------------
IN: 
0x07fdf1a7:  cmpb   $0x0,(%edx)
0x07fdf1aa:  je     0x7fdf1af

----------------
IN: 
0x07fdf1af:  sub    %eax,%edx
0x07fdf1b1:  mov    %edx,%eax
0x07fdf1b3:  ret    

----------------
IN: 
0x07fe07f3:  lea    0x1(%eax),%edi
0x07fe07f6:  mov    0x7fefe83,%ebx
0x07fe07fc:  test   %ebx,%ebx
0x07fe07fe:  je     0x7fe0814

----------------
IN: 
0x07fe0800:  lea    0x4(%ebx),%edx
0x07fe0803:  mov    %edi,%ecx
0x07fe0805:  mov    %esi,%eax
0x07fe0807:  call   0x7fdf1b4

----------------
IN: 
0x07fdf1b4:  push   %esi
0x07fdf1b5:  push   %ebx
0x07fdf1b6:  mov    %edx,%esi
0x07fdf1b8:  xor    %ebx,%ebx
0x07fdf1ba:  cmp    %ecx,%ebx
0x07fdf1bc:  je     0x7fdf1cf

----------------
IN: 
0x07fdf1be:  mov    (%eax,%ebx,1),%dl
0x07fdf1c1:  inc    %ebx
0x07fdf1c2:  cmp    -0x1(%esi,%ebx,1),%dl
0x07fdf1c6:  je     0x7fdf1ba

----------------
IN: 
0x07fdf1ba:  cmp    %ecx,%ebx
0x07fdf1bc:  je     0x7fdf1cf

----------------
IN: 
0x07fdf1cf:  xor    %eax,%eax
0x07fdf1d1:  pop    %ebx
0x07fdf1d2:  pop    %esi
0x07fdf1d3:  ret    

----------------
IN: 
0x07fe080c:  test   %eax,%eax
0x07fe080e:  je     0x7fe0818

----------------
IN: 
0x07fe0818:  mov    %ebx,%eax
0x07fe081a:  pop    %ebx
0x07fe081b:  pop    %esi
0x07fe081c:  pop    %edi
0x07fe081d:  ret    

----------------
IN: 
0x07fe0830:  mov    %eax,%ebx
0x07fe0832:  test   %eax,%eax
0x07fe0834:  jne    0x7fe083c

----------------
IN: 
0x07fe083c:  mov    0x84(%eax),%eax
0x07fe0842:  lea    -0x1(%eax),%edx
0x07fe0845:  cmp    $0x7,%edx
0x07fe0848:  ja     0x7fe0836

----------------
IN: 
0x07fe084a:  test   %eax,%edx
0x07fe084c:  jne    0x7fe0836

----------------
IN: 
0x07fe084e:  movl   $0x0,(%esp)
0x07fe0855:  movl   $0x0,0x4(%esp)
0x07fe085d:  mov    $0x8,%ecx
0x07fe0862:  mov    %esp,%edx
0x07fe0864:  mov    %ebx,%eax
0x07fe0866:  call   *0x88(%ebx)

----------------
IN: 
0x07fe072f:  push   %ebp
0x07fe0730:  push   %edi
0x07fe0731:  push   %esi
0x07fe0732:  push   %ebx
0x07fe0733:  mov    %eax,%ebx
0x07fe0735:  mov    0x84(%eax),%ebp
0x07fe073b:  cmp    %ecx,%ebp
0x07fe073d:  ja     0x7fe0771

----------------
IN: 
0x07fe073f:  mov    %edx,%edi
0x07fe0741:  movzwl 0x8c(%eax),%eax
0x07fe0748:  mov    $0x510,%edx
0x07fe074d:  out    %ax,(%dx)
0x07fe074f:  mov    0x90(%ebx),%esi
0x07fe0755:  mov    $0x11,%dl
0x07fe0757:  dec    %esi
0x07fe0758:  cmp    $0xffffffff,%esi
0x07fe075b:  je     0x7fe0760

----------------
IN: 
0x07fe0760:  mov    %ebp,%ecx
0x07fe0762:  mov    $0x511,%edx
0x07fe0767:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe0767:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe0769:  mov    0x84(%ebx),%eax
0x07fe076f:  jmp    0x7fe0774

----------------
IN: 
0x07fe0774:  pop    %ebx
0x07fe0775:  pop    %esi
0x07fe0776:  pop    %edi
0x07fe0777:  pop    %ebp
0x07fe0778:  ret    

----------------
IN: 
0x07fe086c:  test   %eax,%eax
0x07fe086e:  js     0x7fe0836

----------------
IN: 
0x07fe0870:  mov    (%esp),%eax
0x07fe0873:  mov    0x4(%esp),%edx
0x07fe0877:  pop    %ecx
0x07fe0878:  pop    %ebx
0x07fe0879:  pop    %ebx
0x07fe087a:  pop    %esi
0x07fe087b:  pop    %edi
0x07fe087c:  pop    %ebp
0x07fe087d:  ret    

----------------
IN: 
0x07feb0ff:  lea    0x0(,%eax,8),%edi
0x07feb106:  mov    %edi,(%esp)
0x07feb109:  mov    $0x8,%ecx
0x07feb10e:  mov    $0xd,%edx
0x07feb113:  mov    $0xf4922,%eax
0x07feb118:  call   0x7fe0e01

----------------
IN: 
0x07feb11d:  lea    0x8(%edi),%ecx
0x07feb120:  mov    0xe4(%esp),%eax
0x07feb127:  shl    $0x3,%eax
0x07feb12a:  mov    %eax,(%esp)
0x07feb12d:  mov    $0xd,%edx
0x07feb132:  mov    $0xf4913,%eax
0x07feb137:  call   0x7fe0e01

----------------
IN: 
0x07feb13c:  mov    $0xffff8000,%eax
0x07feb141:  mov    %esi,%edx
0x07feb143:  out    %ax,(%dx)
0x07feb145:  mov    $0x2,%ecx
0x07feb14a:  lea    0xd8(%esp),%edi
0x07feb151:  mov    %ebx,%edx
0x07feb153:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb153:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb155:  mov    $0x2,%eax
0x07feb15a:  xor    %ebx,%ebx
0x07feb15c:  lea    0x10c(%esp),%esi
0x07feb163:  movzwl 0xd8(%esp),%edx
0x07feb16b:  cmp    %edx,%ebx
0x07feb16d:  jge    0x7feb1e2

----------------
IN: 
0x07feb1e2:  mov    $0x510,%edx
0x07feb1e7:  mov    $0xffff8001,%eax
0x07feb1ec:  out    %ax,(%dx)
0x07feb1ee:  mov    $0x2,%ecx
0x07feb1f3:  lea    0xd8(%esp),%edi
0x07feb1fa:  mov    $0x11,%dl
0x07feb1fc:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb1fc:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb1fe:  mov    $0x2,%ebx
0x07feb203:  xor    %ebp,%ebp
0x07feb205:  lea    0x10c(%esp),%esi
0x07feb20c:  movzwl 0xd8(%esp),%eax
0x07feb214:  cmp    %eax,%ebp
0x07feb216:  jge    0x7feb2d7

----------------
IN: 
0x07feb21c:  mov    $0x6,%ecx
0x07feb221:  lea    0xdc(%esp),%edi
0x07feb228:  mov    $0x511,%edx
0x07feb22d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb22d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb22f:  cmpb   $0x0,0xde(%esp)
0x07feb237:  movzbl 0xdf(%esp),%eax
0x07feb23f:  jne    0x7feb279

----------------
IN: 
0x07feb241:  movzwl 0xe0(%esp),%edx
0x07feb249:  mov    %edx,0x10(%esp)
0x07feb24d:  mov    %eax,0xc(%esp)
0x07feb251:  movl   $0xf46d6,0x8(%esp)
0x07feb259:  movl   $0x80,0x4(%esp)
0x07feb261:  mov    %esi,(%esp)
0x07feb264:  call   0x7fe46d2

----------------
IN: 
0x07fe46d2:  push   %ebx
0x07fe46d3:  sub    $0xc,%esp
0x07fe46d6:  mov    0x14(%esp),%ebx
0x07fe46da:  mov    0x18(%esp),%edx
0x07fe46de:  xor    %eax,%eax
0x07fe46e0:  test   %edx,%edx
0x07fe46e2:  je     0x7fe4718

----------------
IN: 
0x07fe46e4:  movl   $0x7fdf197,(%esp)
0x07fe46eb:  mov    %ebx,0x4(%esp)
0x07fe46ef:  add    %ebx,%edx
0x07fe46f1:  mov    %edx,0x8(%esp)
0x07fe46f5:  lea    0x20(%esp),%ecx
0x07fe46f9:  mov    0x1c(%esp),%edx
0x07fe46fd:  mov    %esp,%eax
0x07fe46ff:  call   0xf1445

----------------
IN: 
0x07fdf197:  mov    0x4(%eax),%ecx
0x07fdf19a:  cmp    0x8(%eax),%ecx
0x07fdf19d:  jae    0x7fdf1a4

----------------
IN: 
0x07fdf19f:  mov    %dl,(%ecx)
0x07fdf1a1:  incl   0x4(%eax)
0x07fdf1a4:  ret    

----------------
IN: 
0x07fe4704:  mov    0x4(%esp),%eax
0x07fe4708:  mov    0x8(%esp),%edx
0x07fe470c:  cmp    %edx,%eax
0x07fe470e:  jb     0x7fe4713

----------------
IN: 
0x07fe4713:  movb   $0x0,(%eax)
0x07fe4716:  sub    %ebx,%eax
0x07fe4718:  add    $0xc,%esp
0x07fe471b:  pop    %ebx
0x07fe471c:  ret    

----------------
IN: 
0x07feb269:  lea    0x6(%ebx),%ecx
0x07feb26c:  movzwl 0xdc(%esp),%eax
0x07feb274:  sub    $0x6,%eax
0x07feb277:  jmp    0x7feb2a7

----------------
IN: 
0x07feb2a7:  mov    %eax,(%esp)
0x07feb2aa:  mov    $0x8001,%edx
0x07feb2af:  mov    %esi,%eax
0x07feb2b1:  call   0x7fe0e01

----------------
IN: 
0x07feb2b6:  movzwl 0xdc(%esp),%edi
0x07feb2be:  lea    -0x6(%edi),%ecx
0x07feb2c1:  mov    $0x511,%edx
0x07feb2c6:  dec    %ecx
0x07feb2c7:  cmp    $0xffffffff,%ecx
0x07feb2ca:  je     0x7feb2cf

----------------
IN: 
0x07feb2cc:  in     (%dx),%al
0x07feb2cd:  jmp    0x7feb2c6

----------------
IN: 
0x07feb2c6:  dec    %ecx
0x07feb2c7:  cmp    $0xffffffff,%ecx
0x07feb2ca:  je     0x7feb2cf

----------------
IN: 
0x07feb2cf:  add    %edi,%ebx
0x07feb2d1:  inc    %ebp
0x07feb2d2:  jmp    0x7feb20c

----------------
IN: 
0x07feb20c:  movzwl 0xd8(%esp),%eax
0x07feb214:  cmp    %eax,%ebp
0x07feb216:  jge    0x7feb2d7

----------------
IN: 
0x07feb2d7:  mov    $0x510,%edx
0x07feb2dc:  mov    $0x19,%eax
0x07feb2e1:  out    %ax,(%dx)
0x07feb2e3:  mov    $0x4,%ecx
0x07feb2e8:  lea    0xd8(%esp),%edi
0x07feb2ef:  mov    $0x11,%dl
0x07feb2f1:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb2f1:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb2f3:  mov    0xd8(%esp),%eax
0x07feb2fa:  call   0x7fe0526

----------------
IN: 
0x07fe0526:  bswap  %eax
0x07fe0528:  ret    

----------------
IN: 
0x07feb2ff:  mov    %eax,0xd8(%esp)
0x07feb306:  xor    %ebx,%ebx
0x07feb308:  cmp    0xd8(%esp),%ebx
0x07feb30f:  jae    0x7feb350

----------------
IN: 
0x07feb311:  mov    $0x40,%ecx
0x07feb316:  lea    0x10c(%esp),%edi
0x07feb31d:  mov    $0x511,%edx
0x07feb322:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb322:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb324:  mov    0x10c(%esp),%eax
0x07feb32b:  call   0x7fe0526

----------------
IN: 
0x07feb330:  mov    0x110(%esp),%edx
0x07feb337:  xchg   %dh,%dl
0x07feb339:  movzwl %dx,%edx
0x07feb33c:  mov    %eax,(%esp)
0x07feb33f:  xor    %ecx,%ecx
0x07feb341:  lea    0x114(%esp),%eax
0x07feb348:  call   0x7fe0e01

----------------
IN: 
0x07feb34d:  inc    %ebx
0x07feb34e:  jmp    0x7feb308

----------------
IN: 
0x07feb308:  cmp    0xd8(%esp),%ebx
0x07feb30f:  jae    0x7feb350

----------------
IN: 
0x07feb350:  lea    0xdc(%esp),%edx
0x07feb357:  mov    $0xf575c,%eax
0x07feb35c:  call   0x7fe0c72

----------------
IN: 
0x07fe0c72:  push   %ebp
0x07fe0c73:  push   %edi
0x07fe0c74:  push   %esi
0x07fe0c75:  push   %ebx
0x07fe0c76:  mov    %edx,%ebp
0x07fe0c78:  call   0x7fe07e9

----------------
IN: 
0x07fdf1c8:  sbb    %eax,%eax
0x07fdf1ca:  or     $0x1,%eax
0x07fdf1cd:  jmp    0x7fdf1d1

----------------
IN: 
0x07fdf1d1:  pop    %ebx
0x07fdf1d2:  pop    %esi
0x07fdf1d3:  ret    

----------------
IN: 
0x07fe0810:  mov    (%ebx),%ebx
0x07fe0812:  jmp    0x7fe07fc

----------------
IN: 
0x07fe07fc:  test   %ebx,%ebx
0x07fe07fe:  je     0x7fe0814

----------------
IN: 
0x07fe0c7d:  mov    %eax,%edi
0x07fe0c7f:  test   %eax,%eax
0x07fe0c81:  je     0x7fe0cd4

----------------
IN: 
0x07fe0c83:  mov    0x84(%eax),%esi
0x07fe0c89:  test   %esi,%esi
0x07fe0c8b:  je     0x7fe0cd4

----------------
IN: 
0x07fe0c8d:  lea    0x1(%esi),%eax
0x07fe0c90:  call   0x7fdf625

----------------
IN: 
0x07fe0c95:  mov    %eax,%ebx
0x07fe0c97:  test   %eax,%eax
0x07fe0c99:  jne    0x7fe0cac

----------------
IN: 
0x07fe0cac:  mov    %esi,%ecx
0x07fe0cae:  mov    %eax,%edx
0x07fe0cb0:  mov    %edi,%eax
0x07fe0cb2:  call   *0x88(%edi)

----------------
IN: 
0x07fe0cb8:  test   %eax,%eax
0x07fe0cba:  jns    0x7fe0cc5

----------------
IN: 
0x07fe0cc5:  test   %ebp,%ebp
0x07fe0cc7:  je     0x7fe0ccc

----------------
IN: 
0x07fe0cc9:  mov    %esi,0x0(%ebp)
0x07fe0ccc:  movb   $0x0,(%ebx,%esi,1)
0x07fe0cd0:  mov    %ebx,%eax
0x07fe0cd2:  jmp    0x7fe0cd6

----------------
IN: 
0x07fe0cd6:  pop    %ebx
0x07fe0cd7:  pop    %esi
0x07fe0cd8:  pop    %edi
0x07fe0cd9:  pop    %ebp
0x07fe0cda:  ret    

----------------
IN: 
0x07feb361:  test   %eax,%eax
0x07feb363:  je     0x7feb47f

----------------
IN: 
0x07feb369:  mov    %eax,%esi
0x07feb36b:  movl   $0x0,0x30(%esp)
0x07feb373:  mov    0xdc(%esp),%eax
0x07feb37a:  mov    $0x14,%ecx
0x07feb37f:  xor    %edx,%edx
0x07feb381:  div    %ecx
0x07feb383:  cmp    %eax,0x30(%esp)
0x07feb387:  jae    0x7feb58c

----------------
IN: 
0x07feb38d:  mov    0x10(%esi),%eax
0x07feb390:  cmp    $0x1,%eax
0x07feb393:  je     0x7feb3a3

----------------
IN: 
0x07feb3a3:  mov    0x8(%esi),%eax
0x07feb3a6:  mov    0xc(%esi),%edx
0x07feb3a9:  mov    %eax,0xc(%esp)
0x07feb3ad:  mov    %edx,0x10(%esp)
0x07feb3b1:  mov    (%esi),%eax
0x07feb3b3:  mov    0x4(%esi),%edx
0x07feb3b6:  mov    %eax,0x4(%esp)
0x07feb3ba:  mov    %edx,0x8(%esp)
0x07feb3be:  movl   $0xf5765,(%esp)
0x07feb3c5:  call   0xf1787

----------------
IN: 
0x000f14a1:  mov    0x1(%ebx),%al
0x000f14a4:  cmp    $0x6c,%al
0x000f14a6:  je     0xf14ab

----------------
IN: 
0x000f14ab:  add    $0x2,%ebx
0x000f14ae:  mov    0x2(%edx),%al
0x000f14b1:  mov    $0x1,%edi
0x000f14b6:  cmp    $0x64,%al
0x000f14b8:  je     0xf1529

----------------
IN: 
0x000f157c:  lea    0x8(%esi),%edi
0x000f157f:  mov    0x4(%esi),%edx
0x000f1582:  test   %edx,%edx
0x000f1584:  je     0xf15aa

----------------
IN: 
0x000f15aa:  mov    %eax,(%esp)
0x000f15ad:  mov    %ebp,%edx
0x000f15af:  mov    0x4(%esp),%eax
0x000f15b3:  call   0xf0d13

----------------
IN: 
0x07feb3ca:  mov    (%esi),%eax
0x07feb3cc:  mov    0x4(%esi),%edx
0x07feb3cf:  mov    0x7feff1f,%edi
0x07feb3d5:  xor    %ebp,%ebp
0x07feb3d7:  mov    %edi,0x28(%esp)
0x07feb3db:  mov    %ebp,0x2c(%esp)
0x07feb3df:  cmp    $0x0,%edx
0x07feb3e2:  ja     0x7feb3ee

----------------
IN: 
0x07feb3e4:  cmp    0x28(%esp),%eax
0x07feb3e8:  jb     0x7feb473

----------------
IN: 
0x07feb473:  incl   0x30(%esp)
0x07feb477:  add    $0x14,%esi
0x07feb47a:  jmp    0x7feb373

----------------
IN: 
0x07feb373:  mov    0xdc(%esp),%eax
0x07feb37a:  mov    $0x14,%ecx
0x07feb37f:  xor    %edx,%edx
0x07feb381:  div    %ecx
0x07feb383:  cmp    %eax,0x30(%esp)
0x07feb387:  jae    0x7feb58c

----------------
IN: 
0x07feb58c:  movl   $0x1,0xf6574
0x07feb596:  mov    $0x8f,%al
0x07feb598:  out    %al,$0x70
0x07feb59a:  xor    %eax,%eax
0x07feb59c:  out    %al,$0x71
0x07feb59e:  xor    %eax,%eax
0x07feb5a0:  mov    $0xfff53,%edx
0x07feb5a5:  mov    %dx,0x0(,%eax,4)
0x07feb5ad:  movw   $0xf000,0x2(,%eax,4)
0x07feb5b7:  inc    %eax
0x07feb5b8:  cmp    $0x100,%eax
0x07feb5bd:  jne    0x7feb5a5

----------------
IN: 
0x07feb5a5:  mov    %dx,0x0(,%eax,4)
0x07feb5ad:  movw   $0xf000,0x2(,%eax,4)
0x07feb5b7:  inc    %eax
0x07feb5b8:  cmp    $0x100,%eax
0x07feb5bd:  jne    0x7feb5a5

----------------
IN: 
0x07feb5bf:  mov    $0x8,%ax
0x07feb5c3:  mov    $0xfd5df,%edx
0x07feb5c8:  mov    %dx,0x0(,%eax,4)
0x07feb5d0:  movw   $0xf000,0x2(,%eax,4)
0x07feb5da:  inc    %eax
0x07feb5db:  cmp    $0x10,%eax
0x07feb5de:  jne    0x7feb5c8

----------------
IN: 
0x07feb5c8:  mov    %dx,0x0(,%eax,4)
0x07feb5d0:  movw   $0xf000,0x2(,%eax,4)
0x07feb5da:  inc    %eax
0x07feb5db:  cmp    $0x10,%eax
0x07feb5de:  jne    0x7feb5c8

----------------
IN: 
0x07feb5e0:  mov    $0x70,%al
0x07feb5e2:  mov    $0xfd5e8,%edx
0x07feb5e7:  mov    %dx,0x0(,%eax,4)
0x07feb5ef:  movw   $0xf000,0x2(,%eax,4)
0x07feb5f9:  inc    %eax
0x07feb5fa:  cmp    $0x78,%eax
0x07feb5fd:  jne    0x7feb5e7

----------------
IN: 
0x07feb5e7:  mov    %dx,0x0(,%eax,4)
0x07feb5ef:  movw   $0xf000,0x2(,%eax,4)
0x07feb5f9:  inc    %eax
0x07feb5fa:  cmp    $0x78,%eax
0x07feb5fd:  jne    0x7feb5e7

----------------
IN: 
0x07feb5ff:  mov    $0xfe2c3,%eax
0x07feb604:  mov    %ax,0x8
0x07feb60a:  movw   $0xf000,0xa
0x07feb613:  mov    $0xff065,%eax
0x07feb618:  mov    %ax,0x40
0x07feb61e:  movw   $0xf000,0x42
0x07feb627:  mov    $0xff84d,%eax
0x07feb62c:  mov    %ax,0x44
0x07feb632:  movw   $0xf000,0x46
0x07feb63b:  mov    $0xff841,%eax
0x07feb640:  mov    %ax,0x48
0x07feb646:  movw   $0xf000,0x4a
0x07feb64f:  mov    $0xfe3fe,%eax
0x07feb654:  mov    %ax,0x4c
0x07feb65a:  movw   $0xf000,0x4e
0x07feb663:  mov    $0xfe739,%eax
0x07feb668:  mov    %ax,0x50
0x07feb66e:  movw   $0xf000,0x52
0x07feb677:  mov    $0xff859,%eax
0x07feb67c:  mov    %ax,0x54
0x07feb682:  movw   $0xf000,0x56
0x07feb68b:  mov    $0xfe82e,%eax
0x07feb690:  mov    %ax,0x58
0x07feb696:  movw   $0xf000,0x5a
0x07feb69f:  mov    $0xfefd2,%eax
0x07feb6a4:  mov    %ax,0x5c
0x07feb6aa:  movw   $0xf000,0x5e
0x07feb6b3:  mov    $0xfd604,%eax
0x07feb6b8:  mov    %ax,0x60
0x07feb6be:  movw   $0xf000,0x62
0x07feb6c7:  mov    $0xfe6f2,%eax
0x07feb6cc:  mov    %ax,0x64
0x07feb6d2:  movw   $0xf000,0x66
0x07feb6db:  mov    $0xffe6e,%eax
0x07feb6e0:  mov    %ax,0x68
0x07feb6e6:  movw   $0xf000,0x6a
0x07feb6ef:  mov    $0xfec59,%eax
0x07feb6f4:  mov    %ax,0x100
0x07feb6fa:  movw   $0xf000,0x102
0x07feb703:  mov    $0x60,%eax
0x07feb708:  movw   $0x0,0x0(,%eax,4)
0x07feb712:  movw   $0x0,0x2(,%eax,4)
0x07feb71c:  inc    %eax
0x07feb71d:  cmp    $0x67,%eax
0x07feb720:  jne    0x7feb708

----------------
IN: 
0x07feb708:  movw   $0x0,0x0(,%eax,4)
0x07feb712:  movw   $0x0,0x2(,%eax,4)
0x07feb71c:  inc    %eax
0x07feb71d:  cmp    $0x67,%eax
0x07feb720:  jne    0x7feb708

----------------
IN: 
0x07feb722:  movw   $0x0,0x1e4
0x07feb72b:  movw   $0x0,0x1e6
0x07feb734:  mov    $0x100,%ecx
0x07feb739:  xor    %edx,%edx
0x07feb73b:  mov    $0x400,%ax
0x07feb73f:  call   0xf0d7a

----------------
IN: 
0x07feb744:  movw   $0x9fc0,0x40e
0x07feb74d:  movw   $0x27f,0x413
0x07feb756:  mov    $0x121,%ecx
0x07feb75b:  xor    %edx,%edx
0x07feb75d:  mov    $0x9fc00,%eax
0x07feb762:  call   0xf0d7a

----------------
IN: 
0x07feb767:  movb   $0x1,0x9fc00
0x07feb76e:  movl   $0x2,0x8(%esp)
0x07feb776:  movl   $0x400,(%esp)
0x07feb77d:  movl   $0x0,0x4(%esp)
0x07feb785:  mov    $0x9fc00,%eax
0x07feb78a:  xor    %edx,%edx
0x07feb78c:  call   0x7fe11b8

----------------
IN: 
0x07fe11b8:  push   %edi
0x07fe11b9:  push   %esi
0x07fe11ba:  push   %ebx
0x07fe11bb:  mov    0x10(%esp),%ebx
0x07fe11bf:  mov    0x14(%esp),%ecx
0x07fe11c3:  mov    %ecx,%edi
0x07fe11c5:  or     %ebx,%edi
0x07fe11c7:  je     0x7fe11d1

----------------
IN: 
0x07fe11c9:  pop    %ebx
0x07fe11ca:  pop    %esi
0x07fe11cb:  pop    %edi
0x07fe11cc:  jmp    0x7fe0fed

----------------
IN: 
0x07fe0fed:  push   %ebp
0x07fe0fee:  push   %edi
0x07fe0fef:  push   %esi
0x07fe0ff0:  push   %ebx
0x07fe0ff1:  sub    $0x34,%esp
0x07fe0ff4:  mov    %eax,0x14(%esp)
0x07fe0ff8:  mov    %edx,0x18(%esp)
0x07fe0ffc:  mov    0x48(%esp),%ebx
0x07fe1000:  mov    0x4c(%esp),%esi
0x07fe1004:  mov    %esi,%edi
0x07fe1006:  mov    %ebx,%esi
0x07fe1008:  mov    %ebx,0x24(%esp)
0x07fe100c:  mov    %edi,0x28(%esp)
0x07fe1010:  mov    0x50(%esp),%ebx
0x07fe1014:  mov    %ebx,0x2c(%esp)
0x07fe1018:  add    %esi,%eax
0x07fe101a:  adc    %edi,%edx
0x07fe101c:  mov    %eax,0xc(%esp)
0x07fe1020:  mov    %edx,0x10(%esp)
0x07fe1024:  mov    0xf6074,%edx
0x07fe102a:  mov    $0xf6078,%eax
0x07fe102f:  xor    %esi,%esi
0x07fe1031:  cmp    %edx,%esi
0x07fe1033:  jge    0x7fe1106

----------------
IN: 
0x07fe1039:  mov    %eax,0x30(%esp)
0x07fe103d:  mov    (%eax),%ecx
0x07fe103f:  mov    0x4(%eax),%ebx
0x07fe1042:  mov    %ecx,%edi
0x07fe1044:  mov    %ebx,%ebp
0x07fe1046:  add    0x8(%eax),%edi
0x07fe1049:  adc    0xc(%eax),%ebp
0x07fe104c:  mov    %edi,0x1c(%esp)
0x07fe1050:  mov    %ebp,0x20(%esp)
0x07fe1054:  add    $0x14,%eax
0x07fe1057:  cmp    %ebp,0x18(%esp)
0x07fe105b:  jb     0x7fe106c

----------------
IN: 
0x07fe105d:  ja     0x7fe1069

----------------
IN: 
0x07fe105f:  mov    0x1c(%esp),%edi
0x07fe1063:  cmp    %edi,0x14(%esp)
0x07fe1067:  jbe    0x7fe106c

----------------
IN: 
0x07fe106c:  cmp    %ebx,0x18(%esp)
0x07fe1070:  jb     0x7fe1106

----------------
IN: 
0x07fe1076:  ja     0x7fe1082

----------------
IN: 
0x07fe1078:  cmp    %ecx,0x14(%esp)
0x07fe107c:  jbe    0x7fe1106

----------------
IN: 
0x07fe1082:  mov    0x30(%esp),%eax
0x07fe1086:  mov    0x10(%eax),%eax
0x07fe1089:  mov    %eax,%edi
0x07fe108b:  cmp    %eax,0x2c(%esp)
0x07fe108f:  jne    0x7fe10af

----------------
IN: 
0x07fe10af:  mov    0x14(%esp),%eax
0x07fe10b3:  mov    0x18(%esp),%edx
0x07fe10b7:  sub    %ecx,%eax
0x07fe10b9:  sbb    %ebx,%edx
0x07fe10bb:  mov    0x30(%esp),%ebx
0x07fe10bf:  mov    %eax,0x8(%ebx)
0x07fe10c2:  mov    %edx,0xc(%ebx)
0x07fe10c5:  inc    %esi
0x07fe10c6:  mov    0x10(%esp),%eax
0x07fe10ca:  cmp    %eax,0x20(%esp)
0x07fe10ce:  jb     0x7fe1106

----------------
IN: 
0x07fe10d0:  ja     0x7fe10dc

----------------
IN: 
0x07fe10d2:  mov    0xc(%esp),%eax
0x07fe10d6:  cmp    %eax,0x1c(%esp)
0x07fe10da:  jbe    0x7fe1106

----------------
IN: 
0x07fe1106:  imul   $0x14,%esi,%ebx
0x07fe1109:  cmp    0xf6074,%esi
0x07fe110f:  jge    0x7fe117d

----------------
IN: 
0x07fe1111:  lea    0xf6078(%ebx),%ecx
0x07fe1117:  mov    0xf6078(%ebx),%eax
0x07fe111d:  mov    0xf607c(%ebx),%edx
0x07fe1123:  cmp    %edx,0x10(%esp)
0x07fe1127:  jb     0x7fe117d

----------------
IN: 
0x07fe1129:  ja     0x7fe1131

----------------
IN: 
0x07fe112b:  cmp    %eax,0xc(%esp)
0x07fe112f:  jb     0x7fe117d

----------------
IN: 
0x07fe117d:  mov    0x2c(%esp),%eax
0x07fe1181:  cmp    $0xffffffff,%eax
0x07fe1184:  je     0x7fe11b0

----------------
IN: 
0x07fe1186:  mov    %eax,0x50(%esp)
0x07fe118a:  mov    0x24(%esp),%eax
0x07fe118e:  mov    0x28(%esp),%edx
0x07fe1192:  mov    %eax,0x48(%esp)
0x07fe1196:  mov    %edx,0x4c(%esp)
0x07fe119a:  mov    0x14(%esp),%edx
0x07fe119e:  mov    0x18(%esp),%ecx
0x07fe11a2:  mov    %esi,%eax
0x07fe11a4:  add    $0x34,%esp
0x07fe11a7:  pop    %ebx
0x07fe11a8:  pop    %esi
0x07fe11a9:  pop    %edi
0x07fe11aa:  pop    %ebp
0x07fe11ab:  jmp    0x7fe0f59

----------------
IN: 
0x07fe0f59:  push   %ebp
0x07fe0f5a:  push   %edi
0x07fe0f5b:  push   %esi
0x07fe0f5c:  push   %ebx
0x07fe0f5d:  sub    $0xc,%esp
0x07fe0f60:  mov    %edx,(%esp)
0x07fe0f63:  mov    %ecx,0x4(%esp)
0x07fe0f67:  mov    0x20(%esp),%edi
0x07fe0f6b:  mov    0x24(%esp),%ebp
0x07fe0f6f:  mov    0x28(%esp),%esi
0x07fe0f73:  mov    %esi,0x8(%esp)
0x07fe0f77:  mov    0xf6074,%ecx
0x07fe0f7d:  cmp    $0x1f,%ecx
0x07fe0f80:  jle    0x7fe0f98

----------------
IN: 
0x07fe0f98:  imul   $0x14,%eax,%esi
0x07fe0f9b:  lea    0xf6078(%esi),%ebx
0x07fe0fa1:  sub    %eax,%ecx
0x07fe0fa3:  imul   $0x14,%ecx,%ecx
0x07fe0fa6:  inc    %eax
0x07fe0fa7:  imul   $0x14,%eax,%eax
0x07fe0faa:  add    $0xf6078,%eax
0x07fe0faf:  mov    %ebx,%edx
0x07fe0fb1:  call   0x7fdfddf

----------------
IN: 
0x07fe0fb6:  incl   0xf6074
0x07fe0fbc:  mov    (%esp),%eax
0x07fe0fbf:  mov    0x4(%esp),%edx
0x07fe0fc3:  mov    %eax,0xf6078(%esi)
0x07fe0fc9:  mov    %edx,0xf607c(%esi)
0x07fe0fcf:  mov    %edi,0xf6080(%esi)
0x07fe0fd5:  mov    %ebp,0xf6084(%esi)
0x07fe0fdb:  mov    0x8(%esp),%eax
0x07fe0fdf:  mov    %eax,0xf6088(%esi)
0x07fe0fe5:  add    $0xc,%esp
0x07fe0fe8:  pop    %ebx
0x07fe0fe9:  pop    %esi
0x07fe0fea:  pop    %edi
0x07fe0feb:  pop    %ebp
0x07fe0fec:  ret    

----------------
IN: 
0x07feb791:  mov    $0xefff8,%eax
0x07feb796:  sub    $0xe0000,%eax
0x07feb79b:  mov    %eax,0xef7f0
0x07feb7a0:  mov    $0xb8,%al
0x07feb7a2:  out    %al,$0x70
0x07feb7a4:  in     $0x71,%al
0x07feb7a6:  test   $0x1,%al
0x07feb7a8:  je     0x7feb7b4

----------------
IN: 
0x07feb7b4:  mov    $0xbd,%al
0x07feb7b6:  out    %al,$0x70
0x07feb7b8:  in     $0x71,%al
0x07feb7ba:  movzbl %al,%edx
0x07feb7bd:  mov    $0xb8,%al
0x07feb7bf:  out    %al,$0x70
0x07feb7c1:  in     $0x71,%al
0x07feb7c3:  mov    %eax,%ecx
0x07feb7c5:  and    $0xf0,%ecx
0x07feb7cb:  shl    $0x4,%ecx
0x07feb7ce:  or     %edx,%ecx
0x07feb7d0:  mov    $0x270f,%edi
0x07feb7d5:  mov    $0x270f,%esi
0x07feb7da:  mov    $0x270f,%ebx
0x07feb7df:  mov    $0x270f,%ebp
0x07feb7e4:  mov    $0x65,%edx
0x07feb7e9:  mov    %ecx,%eax
0x07feb7eb:  and    $0xf,%eax
0x07feb7ee:  shr    $0x4,%ecx
0x07feb7f1:  cmp    $0x2,%eax
0x07feb7f4:  je     0x7feb80d

----------------
IN: 
0x07feb80d:  mov    %edx,%edi
0x07feb80f:  jmp    0x7feb813

----------------
IN: 
0x07feb813:  inc    %edx
0x07feb814:  cmp    $0x68,%edx
0x07feb817:  jne    0x7feb7e9

----------------
IN: 
0x07feb7e9:  mov    %ecx,%eax
0x07feb7eb:  and    $0xf,%eax
0x07feb7ee:  shr    $0x4,%ecx
0x07feb7f1:  cmp    $0x2,%eax
0x07feb7f4:  je     0x7feb80d

----------------
IN: 
0x07feb7f6:  ja     0x7feb7ff

----------------
IN: 
0x07feb7f8:  dec    %eax
0x07feb7f9:  jne    0x7feb813

----------------
IN: 
0x07feb7fb:  mov    %edx,%ebp
0x07feb7fd:  jmp    0x7feb813

----------------
IN: 
0x07feb7ff:  cmp    $0x3,%eax
0x07feb802:  je     0x7feb811

----------------
IN: 
0x07feb811:  mov    %edx,%esi
0x07feb813:  inc    %edx
0x07feb814:  cmp    $0x68,%edx
0x07feb817:  jne    0x7feb7e9

----------------
IN: 
0x07feb819:  mov    %ebp,0x7fefe7b
0x07feb81f:  mov    %edi,0x7fefe73
0x07feb825:  mov    %esi,0x7fefe77
0x07feb82b:  mov    %ebx,0x7fefe6f
0x07feb831:  mov    $0xea60,%edx
0x07feb836:  xor    %ecx,%ecx
0x07feb838:  mov    $0xf57b5,%eax
0x07feb83d:  call   0x7fe081e

----------------
IN: 
0x07feb842:  mov    %eax,0xf5fb4
0x07feb847:  xor    %edx,%edx
0x07feb849:  mov    $0xf57c8,%eax
0x07feb84e:  call   0x7fe0c72

----------------
IN: 
0x07fe0cd4:  xor    %eax,%eax
0x07fe0cd6:  pop    %ebx
0x07fe0cd7:  pop    %esi
0x07fe0cd8:  pop    %edi
0x07fe0cd9:  pop    %ebp
0x07fe0cda:  ret    

----------------
IN: 
0x07feb853:  mov    %eax,%ebx
0x07feb855:  mov    %eax,%ecx
0x07feb857:  mov    $0x1,%eax
0x07feb85c:  test   %ebx,%ebx
0x07feb85e:  je     0x7feb900

----------------
IN: 
0x07feb900:  movl   $0xfd427,0xf6534
0x07feb90a:  mov    0xf653a,%bl
0x07feb910:  mov    $0x10,%edx
0x07feb915:  mov    $0xf6530,%eax
0x07feb91a:  call   0xf10c1

----------------
IN: 
0x000f10c1:  push   %ebx
0x000f10c2:  xor    %ebx,%ebx
0x000f10c4:  xor    %ecx,%ecx
0x000f10c6:  cmp    %edx,%ecx
0x000f10c8:  je     0xf10d0

----------------
IN: 
0x000f10ca:  add    (%eax,%ecx,1),%bl
0x000f10cd:  inc    %ecx
0x000f10ce:  jmp    0xf10c6

----------------
IN: 
0x000f10c6:  cmp    %edx,%ecx
0x000f10c8:  je     0xf10d0

----------------
IN: 
0x000f10d0:  mov    %bl,%al
0x000f10d2:  pop    %ebx
0x000f10d3:  ret    

----------------
IN: 
0x07feb91f:  sub    %eax,%ebx
0x07feb921:  mov    %bl,0xf653a
0x07feb927:  mov    $0xfd2cb,%eax
0x07feb92c:  mov    %ax,0xf6067
0x07feb932:  movw   $0xf000,0xf6069
0x07feb93b:  mov    0xf6066,%bl
0x07feb941:  mov    $0x10,%edx
0x07feb946:  mov    $0xf6060,%eax
0x07feb94b:  call   0xf10c1

----------------
IN: 
0x07feb950:  sub    %eax,%ebx
0x07feb952:  mov    %bl,0xf6066
0x07feb958:  mov    $0xfd318,%eax
0x07feb95d:  mov    %ax,0xf655d
0x07feb963:  mov    $0xfd314,%eax
0x07feb968:  mov    %ax,0xf6561
0x07feb96e:  mov    0xf6558,%bl
0x07feb974:  mov    $0x21,%edx
0x07feb979:  mov    $0xf6550,%eax
0x07feb97e:  call   0xf10c1

----------------
IN: 
0x07feb983:  sub    %eax,%ebx
0x07feb985:  mov    %bl,0xf6558
0x07feb98b:  movb   $0x10,0x496
0x07feb992:  movw   $0x1e,0x41a
0x07feb99b:  movw   $0x1e,0x41c
0x07feb9a4:  movw   $0x1e,0x480
0x07feb9ad:  movw   $0x3e,0x482
0x07feb9b6:  orw    $0x4,0x410
0x07feb9be:  call   0x7fe657d

----------------
IN: 
0x07fe657d:  push   %ebp
0x07fe657e:  push   %edi
0x07fe657f:  push   %esi
0x07fe6580:  push   %ebx
0x07fe6581:  sub    $0x88,%esp
0x07fe6587:  mov    %cr0,%eax
0x07fe658a:  and    $0x9fffffff,%eax
0x07fe658f:  mov    %eax,%cr0

----------------
IN: 
0x07fe6592:  xor    %edx,%edx
0x07fe6594:  mov    %dl,%al
0x07fe6596:  out    %al,$0xd
0x07fe6598:  out    %al,$0xda
0x07fe659a:  mov    $0xc0,%al
0x07fe659c:  out    %al,$0xd6
0x07fe659e:  mov    %dl,%al
0x07fe65a0:  out    %al,$0xd4
0x07fe65a2:  call   0xf115e

----------------
IN: 
0x000f115e:  mov    $0x11,%al
0x000f1160:  out    %al,$0x20
0x000f1162:  out    %al,$0xa0
0x000f1164:  mov    $0x8,%al
0x000f1166:  out    %al,$0x21
0x000f1168:  mov    $0x70,%al
0x000f116a:  out    %al,$0xa1
0x000f116c:  mov    $0x4,%al
0x000f116e:  out    %al,$0x21
0x000f1170:  mov    $0x2,%al
0x000f1172:  out    %al,$0xa1
0x000f1174:  mov    $0x1,%al
0x000f1176:  out    %al,$0x21
0x000f1178:  out    %al,$0xa1
0x000f117a:  mov    $0xfb,%al
0x000f117c:  out    %al,$0x21
0x000f117e:  mov    $0xff,%al
0x000f1180:  out    %al,$0xa1
0x000f1182:  ret    

----------------
IN: 
0x07fe65a7:  orw    $0x2,0x410
0x07fe65af:  mov    $0x2000,%eax
0x07fe65b4:  call   0x7fe04e5

----------------
IN: 
0x07fe04e5:  mov    %eax,%ecx
0x07fe04e7:  in     $0x21,%al
0x07fe04e9:  mov    %cl,%dl
0x07fe04eb:  not    %edx
0x07fe04ed:  and    %edx,%eax
0x07fe04ef:  out    %al,$0x21
0x07fe04f1:  in     $0xa1,%al
0x07fe04f3:  shr    $0x8,%cx
0x07fe04f7:  not    %ecx
0x07fe04f9:  and    %ecx,%eax
0x07fe04fb:  out    %al,$0xa1
0x07fe04fd:  ret    

----------------
IN: 
0x07fe65b9:  mov    $0xfd5d6,%eax
0x07fe65be:  mov    %ax,0x1d4
0x07fe65c4:  movw   $0xf000,0x1d6
0x07fe65cd:  cmpw   $0x0,0xf6370
0x07fe65d5:  jne    0x7fe670b

----------------
IN: 
0x07fe65db:  movl   $0x0,0x78(%esp)
0x07fe65e3:  lea    0x6c(%esp),%eax
0x07fe65e7:  mov    %eax,0x4(%esp)
0x07fe65eb:  lea    0x68(%esp),%ebx
0x07fe65ef:  mov    %ebx,(%esp)
0x07fe65f2:  lea    0x64(%esp),%ecx
0x07fe65f6:  lea    0x60(%esp),%edx
0x07fe65fa:  xor    %eax,%eax
0x07fe65fc:  call   0xf0d85

----------------
IN: 
0x07fe6601:  cmpl   $0x0,0x60(%esp)
0x07fe6606:  je     0x7fe6625

----------------
IN: 
0x07fe6608:  lea    0x78(%esp),%eax
0x07fe660c:  mov    %eax,0x4(%esp)
0x07fe6610:  mov    %ebx,(%esp)
0x07fe6613:  lea    0x64(%esp),%ecx
0x07fe6617:  lea    0x60(%esp),%edx
0x07fe661b:  mov    $0x1,%eax
0x07fe6620:  call   0xf0d85

----------------
IN: 
0x07fe6625:  testb  $0x10,0x78(%esp)
0x07fe662a:  jne    0x7fe6644

----------------
IN: 
0x07fe6644:  in     $0x61,%al
0x07fe6646:  mov    %al,%bl
0x07fe6648:  and    $0xfffffffc,%eax
0x07fe664b:  or     $0x1,%eax
0x07fe664e:  out    %al,$0x61
0x07fe6650:  mov    $0xb0,%al
0x07fe6652:  out    %al,$0x43
0x07fe6654:  xor    %eax,%eax
0x07fe6656:  out    %al,$0x42
0x07fe6658:  mov    $0x8,%al
0x07fe665a:  out    %al,$0x42
0x07fe665c:  rdtsc  
0x07fe665e:  mov    %eax,0x20(%esp)
0x07fe6662:  mov    %edx,0x24(%esp)
0x07fe6666:  in     $0x61,%al
0x07fe6668:  test   $0x20,%al
0x07fe666a:  je     0x7fe6666

----------------
IN: 
0x07fe6666:  in     $0x61,%al
0x07fe6668:  test   $0x20,%al
0x07fe666a:  je     0x7fe6666

----------------
IN: 
0x07fe666c:  rdtsc  
0x07fe666e:  mov    %eax,0x18(%esp)
0x07fe6672:  mov    %edx,0x1c(%esp)
0x07fe6676:  mov    %bl,%al
0x07fe6678:  out    %al,$0x61
0x07fe667a:  mov    0x20(%esp),%eax
0x07fe667e:  mov    0x24(%esp),%edx
0x07fe6682:  sub    %eax,0x18(%esp)
0x07fe6686:  sbb    %edx,0x1c(%esp)
0x07fe668a:  mov    0x18(%esp),%eax
0x07fe668e:  mov    0x1c(%esp),%edx
0x07fe6692:  imul   $0x369e99,%edx,%ebx
0x07fe6698:  mov    $0x369e99,%ecx
0x07fe669d:  mul    %ecx
0x07fe669f:  add    %ebx,%edx
0x07fe66a1:  add    $0x7ff,%eax
0x07fe66a6:  adc    $0x0,%edx
0x07fe66a9:  shrd   $0xb,%edx,%eax
0x07fe66ad:  shr    $0xb,%edx
0x07fe66b0:  mov    0xf636e,%bl
0x07fe66b6:  lea    0x1(%ebx),%ecx
0x07fe66b9:  cmp    $0x0,%edx
0x07fe66bc:  jbe    0x7fe66ce

----------------
IN: 
0x07fe66be:  add    $0x1,%eax
0x07fe66c1:  adc    $0x0,%edx
0x07fe66c4:  shrd   $0x1,%edx,%eax
0x07fe66c8:  shr    %edx
0x07fe66ca:  mov    %cl,%bl
0x07fe66cc:  jmp    0x7fe66b6

----------------
IN: 
0x07fe66b6:  lea    0x1(%ebx),%ecx
0x07fe66b9:  cmp    $0x0,%edx
0x07fe66bc:  jbe    0x7fe66ce

----------------
IN: 
0x07fe66ce:  cmp    $0xffffff,%eax
0x07fe66d3:  ja     0x7fe66be

----------------
IN: 
0x07fe66d5:  mov    %bl,0xf636e
0x07fe66db:  add    $0xbb7,%eax
0x07fe66e0:  mov    $0xbb8,%ecx
0x07fe66e5:  xor    %edx,%edx
0x07fe66e7:  div    %ecx
0x07fe66e9:  mov    %eax,0xf6374
0x07fe66ee:  mov    %bl,%cl
0x07fe66f0:  shl    %cl,%eax
0x07fe66f2:  mov    $0x3e8,%ecx
0x07fe66f7:  xor    %edx,%edx
0x07fe66f9:  div    %ecx
0x07fe66fb:  mov    %eax,0x4(%esp)
0x07fe66ff:  movl   $0xf4957,(%esp)
0x07fe6706:  call   0xf1787

----------------
IN: 
0x000f1551:  mov    (%esi),%edx
0x000f1553:  mov    %edi,%eax
0x000f1555:  test   %al,%al
0x000f1557:  jne    0xf155e

----------------
IN: 
0x000f1559:  add    $0x4,%esi
0x000f155c:  jmp    0xf1561

----------------
IN: 
0x07fe670b:  mov    $0x34,%al
0x07fe670d:  out    %al,$0x43
0x07fe670f:  xor    %eax,%eax
0x07fe6711:  out    %al,$0x40
0x07fe6713:  out    %al,$0x40
0x07fe6715:  mov    $0x8a,%cl
0x07fe6717:  mov    %cl,%al
0x07fe6719:  out    %al,$0x70
0x07fe671b:  mov    $0x26,%al
0x07fe671d:  out    %al,$0x71
0x07fe671f:  mov    $0xb,%al
0x07fe6721:  out    %al,$0x70
0x07fe6723:  in     $0x71,%al
0x07fe6725:  and    $0x1,%eax
0x07fe6728:  or     $0x2,%eax
0x07fe672b:  out    %al,$0x71
0x07fe672d:  mov    $0x8c,%al
0x07fe672f:  out    %al,$0x70
0x07fe6731:  in     $0x71,%al
0x07fe6733:  mov    $0x8d,%al
0x07fe6735:  out    %al,$0x70
0x07fe6737:  in     $0x71,%al
0x07fe6739:  mov    %cl,%al
0x07fe673b:  out    %al,$0x70
0x07fe673d:  in     $0x71,%al
0x07fe673f:  test   %al,%al
0x07fe6741:  jns    0x7fe676b

----------------
IN: 
0x07fe676b:  mov    $0x80,%al
0x07fe676d:  out    %al,$0x70
0x07fe676f:  in     $0x71,%al
0x07fe6771:  mov    %al,%dl
0x07fe6773:  mov    $0x82,%al
0x07fe6775:  out    %al,$0x70
0x07fe6777:  in     $0x71,%al
0x07fe6779:  mov    %al,%bl
0x07fe677b:  mov    $0x84,%al
0x07fe677d:  out    %al,$0x70
0x07fe677f:  in     $0x71,%al
0x07fe6781:  mov    %eax,%ebp
0x07fe6783:  and    $0xf,%ebp
0x07fe6786:  shr    $0x4,%al
0x07fe6789:  movzbl %al,%ecx
0x07fe678c:  imul   $0xa,%ecx,%ecx
0x07fe678f:  lea    0x0(%ebp,%ecx,1),%eax
0x07fe6793:  imul   $0x3c,%eax,%eax
0x07fe6796:  mov    %ebx,%ecx
0x07fe6798:  and    $0xf,%ecx
0x07fe679b:  shr    $0x4,%bl
0x07fe679e:  movzbl %bl,%ebx
0x07fe67a1:  imul   $0xa,%ebx,%ebx
0x07fe67a4:  add    %ebx,%ecx
0x07fe67a6:  add    %eax,%ecx
0x07fe67a8:  imul   $0x3c,%ecx,%ecx
0x07fe67ab:  mov    %edx,%eax
0x07fe67ad:  and    $0xf,%eax
0x07fe67b0:  shr    $0x4,%dl
0x07fe67b3:  movzbl %dl,%edx
0x07fe67b6:  imul   $0xa,%edx,%edx
0x07fe67b9:  add    %edx,%eax
0x07fe67bb:  add    %ecx,%eax
0x07fe67bd:  imul   $0x3e8,%eax,%eax
0x07fe67c3:  mov    $0x369e99,%edx
0x07fe67c8:  mul    %edx
0x07fe67ca:  add    $0xffff,%eax
0x07fe67cf:  adc    $0x0,%edx
0x07fe67d2:  shrd   $0x10,%edx,%eax
0x07fe67d6:  shr    $0x10,%edx
0x07fe67d9:  add    $0xbb7,%eax
0x07fe67de:  mov    $0xbb8,%ecx
0x07fe67e3:  xor    %edx,%edx
0x07fe67e5:  div    %ecx
0x07fe67e7:  mov    $0x1800b0,%ecx
0x07fe67ec:  xor    %edx,%edx
0x07fe67ee:  div    %ecx
0x07fe67f0:  mov    %edx,0x46c
0x07fe67f6:  mov    $0xb2,%al
0x07fe67f8:  out    %al,$0x70
0x07fe67fa:  in     $0x71,%al
0x07fe67fc:  mov    %al,0xef7ad
0x07fe6801:  mov    $0x1,%eax
0x07fe6806:  call   0x7fe04e5

----------------
IN: 
0x07fe680b:  mov    $0xffea5,%eax
0x07fe6810:  mov    %ax,0x20
0x07fe6816:  movw   $0xf000,0x22
0x07fe681f:  mov    $0x100,%eax
0x07fe6824:  call   0x7fe04e5

----------------
IN: 
0x07fe6829:  mov    $0xfd5c4,%eax
0x07fe682e:  mov    %ax,0x1c0
0x07fe6834:  movw   $0xf000,0x1c2
0x07fe683d:  testb  $0x2,0xf6058
0x07fe6844:  je     0x7fe6bf1

----------------
IN: 
0x07fe6bf1:  movl   $0xf4a73,(%esp)
0x07fe6bf8:  call   0xf1787

----------------
IN: 
0x07fe6bfd:  mov    $0xcf8,%edx
0x07fe6c02:  mov    $0x80000000,%eax
0x07fe6c07:  out    %eax,(%dx)
0x07fe6c08:  in     (%dx),%eax
0x07fe6c09:  cmp    $0x80000000,%eax
0x07fe6c0e:  je     0x7fe8105

----------------
IN: 
0x07fe8105:  movb   $0x0,0x78(%esp)
0x07fe810a:  lea    0x78(%esp),%edx
0x07fe810e:  xor    %eax,%eax
0x07fe8110:  call   0x7fe27c9

----------------
IN: 
0x07fe27c9:  push   %ebp
0x07fe27ca:  push   %edi
0x07fe27cb:  push   %esi
0x07fe27cc:  push   %ebx
0x07fe27cd:  sub    $0x18,%esp
0x07fe27d0:  mov    %eax,%ebx
0x07fe27d2:  mov    %eax,0xc(%esp)
0x07fe27d6:  mov    %edx,%esi
0x07fe27d8:  mov    %eax,0x8(%esp)
0x07fe27dc:  movl   $0x7fee2db,0x4(%esp)
0x07fe27e4:  movl   $0xf416f,(%esp)
0x07fe27eb:  call   0xf1787

----------------
IN: 
0x000f15f4:  lea    0x4(%esi),%edi
0x000f15f7:  mov    (%esi),%ebp
0x000f15f9:  movsbl 0x0(%ebp),%edx
0x000f15fd:  test   %dl,%dl
0x000f15ff:  je     0xf161f

----------------
IN: 
0x000f1601:  mov    0x4(%esp),%eax
0x000f1605:  call   0xf0c75

----------------
IN: 
0x000f160a:  inc    %ebp
0x000f160b:  jmp    0xf15f9

----------------
IN: 
0x000f15f9:  movsbl 0x0(%ebp),%edx
0x000f15fd:  test   %dl,%dl
0x000f15ff:  je     0xf161f

----------------
IN: 
0x07fe27f0:  mov    %ebx,%ebp
0x07fe27f2:  shl    $0x8,%ebp
0x07fe27f5:  movzwl %bp,%ebp
0x07fe27f8:  dec    %ebp
0x07fe27f9:  mov    %ebx,%edx
0x07fe27fb:  mov    %ebp,%eax
0x07fe27fd:  call   0xf1183

----------------
IN: 
0x000f1183:  push   %ebp
0x000f1184:  push   %edi
0x000f1185:  push   %esi
0x000f1186:  push   %ebx
0x000f1187:  mov    %eax,%ebx
0x000f1189:  mov    %edx,%esi
0x000f118b:  movzwl %ax,%eax
0x000f118e:  test   $0x7,%al
0x000f1190:  jne    0xf11a5

----------------
IN: 
0x000f11a5:  lea    0x1(%ebx),%ecx
0x000f11a8:  mov    $0xcf8,%edi
0x000f11ad:  mov    $0xcfc,%ebp
0x000f11b2:  movzwl %cx,%ebx
0x000f11b5:  mov    %ebx,%eax
0x000f11b7:  shr    $0x8,%eax
0x000f11ba:  cmp    %esi,%eax
0x000f11bc:  jne    0xf11e3

----------------
IN: 
0x000f11be:  mov    %ebx,%eax
0x000f11c0:  shl    $0x8,%eax
0x000f11c3:  or     $0x80000000,%eax
0x000f11c8:  mov    %edi,%edx
0x000f11ca:  out    %eax,(%dx)
0x000f11cb:  mov    %ebp,%edx
0x000f11cd:  in     (%dx),%ax
0x000f11cf:  dec    %eax
0x000f11d0:  cmp    $0xfffffffd,%ax
0x000f11d4:  jbe    0xf11e8

----------------
IN: 
0x000f11e8:  mov    %ecx,%eax
0x000f11ea:  pop    %ebx
0x000f11eb:  pop    %esi
0x000f11ec:  pop    %edi
0x000f11ed:  pop    %ebp
0x000f11ee:  ret    

----------------
IN: 
0x07fe2802:  mov    %eax,%ebx
0x07fe2804:  test   %eax,%eax
0x07fe2806:  js     0x7fe284c

----------------
IN: 
0x07fe2808:  movzwl %bx,%edi
0x07fe280b:  mov    %edi,%eax
0x07fe280d:  shl    $0x8,%eax
0x07fe2810:  or     $0x80000008,%eax
0x07fe2815:  mov    $0xcf8,%edx
0x07fe281a:  out    %eax,(%dx)
0x07fe281b:  mov    $0xfe,%dl
0x07fe281d:  in     (%dx),%ax
0x07fe281f:  cmp    $0x604,%ax
0x07fe2823:  jne    0x7fe2844

----------------
IN: 
0x07fe2844:  mov    0xc(%esp),%edx
0x07fe2848:  mov    %ebx,%eax
0x07fe284a:  jmp    0x7fe27fd

----------------
IN: 
0x07fe27fd:  call   0xf1183

----------------
IN: 
0x000f1192:  mov    $0xe,%edx
0x000f1197:  call   0xf0e59

----------------
IN: 
0x000f0e59:  push   %ebx
0x000f0e5a:  mov    %edx,%ebx
0x000f0e5c:  mov    %edx,%ecx
0x000f0e5e:  and    $0xfc,%ecx
0x000f0e64:  or     $0x80000000,%ecx
0x000f0e6a:  movzwl %ax,%eax
0x000f0e6d:  shl    $0x8,%eax
0x000f0e70:  or     %eax,%ecx
0x000f0e72:  mov    $0xcf8,%edx
0x000f0e77:  mov    %ecx,%eax
0x000f0e79:  out    %eax,(%dx)
0x000f0e7a:  and    $0x3,%ebx
0x000f0e7d:  lea    0xcfc(%ebx),%edx
0x000f0e83:  in     (%dx),%al
0x000f0e84:  pop    %ebx
0x000f0e85:  ret    

----------------
IN: 
0x000f119c:  test   %al,%al
0x000f119e:  js     0xf11a5

----------------
IN: 
0x000f11a0:  lea    0x8(%ebx),%ecx
0x000f11a3:  jmp    0xf11a8

----------------
IN: 
0x000f11a8:  mov    $0xcf8,%edi
0x000f11ad:  mov    $0xcfc,%ebp
0x000f11b2:  movzwl %cx,%ebx
0x000f11b5:  mov    %ebx,%eax
0x000f11b7:  shr    $0x8,%eax
0x000f11ba:  cmp    %esi,%eax
0x000f11bc:  jne    0xf11e3

----------------
IN: 
0x000f11d6:  and    $0x7,%bl
0x000f11d9:  jne    0xf11e0

----------------
IN: 
0x000f11e0:  inc    %ecx
0x000f11e1:  jmp    0xf11b2

----------------
IN: 
0x000f11b2:  movzwl %cx,%ebx
0x000f11b5:  mov    %ebx,%eax
0x000f11b7:  shr    $0x8,%eax
0x000f11ba:  cmp    %esi,%eax
0x000f11bc:  jne    0xf11e3

----------------
IN: 
0x000f11db:  add    $0x8,%ecx
0x000f11de:  jmp    0xf11b2

----------------
IN: 
0x000f11e3:  or     $0xffffffff,%eax
0x000f11e6:  jmp    0xf11ea

----------------
IN: 
0x000f11ea:  pop    %ebx
0x000f11eb:  pop    %esi
0x000f11ec:  pop    %edi
0x000f11ed:  pop    %ebp
0x000f11ee:  ret    

----------------
IN: 
0x07fe284c:  mov    0xc(%esp),%edi
0x07fe2850:  mov    %edi,%edx
0x07fe2852:  mov    %ebp,%eax
0x07fe2854:  call   0xf1183

----------------
IN: 
0x07fe2859:  mov    %eax,%ebp
0x07fe285b:  mov    %edi,%eax
0x07fe285d:  movzbl %al,%eax
0x07fe2860:  mov    %eax,0x14(%esp)
0x07fe2864:  test   %ebp,%ebp
0x07fe2866:  js     0x7fe29d0

----------------
IN: 
0x07fe286c:  movzwl %bp,%edi
0x07fe286f:  mov    %edi,%eax
0x07fe2871:  shl    $0x8,%eax
0x07fe2874:  or     $0x80000008,%eax
0x07fe2879:  mov    $0xcf8,%edx
0x07fe287e:  out    %eax,(%dx)
0x07fe287f:  mov    $0xfe,%dl
0x07fe2881:  in     (%dx),%ax
0x07fe2883:  cmp    $0x604,%ax
0x07fe2887:  jne    0x7fe29be

----------------
IN: 
0x07fe29be:  mov    0xc(%esp),%edx
0x07fe29c2:  mov    %ebp,%eax
0x07fe29c4:  call   0xf1183

----------------
IN: 
0x07fe29c9:  mov    %eax,%ebp
0x07fe29cb:  jmp    0x7fe2864

----------------
IN: 
0x07fe2864:  test   %ebp,%ebp
0x07fe2866:  js     0x7fe29d0

----------------
IN: 
0x07fe29d0:  add    $0x18,%esp
0x07fe29d3:  pop    %ebx
0x07fe29d4:  pop    %esi
0x07fe29d5:  pop    %edi
0x07fe29d6:  pop    %ebp
0x07fe29d7:  ret    

----------------
IN: 
0x07fe8115:  movl   $0xf4cef,(%esp)
0x07fe811c:  call   0xf1787

----------------
IN: 
0x07fe8121:  call   0x7fe1d21

----------------
IN: 
0x07fe1d21:  push   %ebp
0x07fe1d22:  push   %edi
0x07fe1d23:  push   %esi
0x07fe1d24:  push   %ebx
0x07fe1d25:  sub    $0x420,%esp
0x07fe1d2b:  mov    $0x400,%ecx
0x07fe1d30:  xor    %edx,%edx
0x07fe1d32:  lea    0x20(%esp),%eax
0x07fe1d36:  call   0xf0d7a

----------------
IN: 
0x07fe1d3b:  xor    %edx,%edx
0x07fe1d3d:  xor    %ecx,%ecx
0x07fe1d3f:  mov    $0xf3eb3,%eax
0x07fe1d44:  call   0x7fe081e

----------------
IN: 
0x07fe0814:  xor    %eax,%eax
0x07fe0816:  jmp    0x7fe081a

----------------
IN: 
0x07fe081a:  pop    %ebx
0x07fe081b:  pop    %esi
0x07fe081c:  pop    %edi
0x07fe081d:  ret    

----------------
IN: 
0x07fe0836:  mov    %esi,%eax
0x07fe0838:  mov    %edi,%edx
0x07fe083a:  jmp    0x7fe0877

----------------
IN: 
0x07fe0877:  pop    %ecx
0x07fe0878:  pop    %ebx
0x07fe0879:  pop    %ebx
0x07fe087a:  pop    %esi
0x07fe087b:  pop    %edi
0x07fe087c:  pop    %ebp
0x07fe087d:  ret    

----------------
IN: 
0x07fe1d49:  mov    %eax,0x18(%esp)
0x07fe1d4d:  movl   $0x0,0x14(%esp)
0x07fe1d55:  movl   $0x0,0xc(%esp)
0x07fe1d5d:  movl   $0x0,0x10(%esp)
0x07fe1d65:  or     $0xffffffff,%ebx
0x07fe1d68:  mov    $0x7fefee3,%ebp
0x07fe1d6d:  cmp    0xf6378,%ebx
0x07fe1d73:  jge    0x7fe1ead

----------------
IN: 
0x07fe1d79:  inc    %ebx
0x07fe1d7a:  mov    %ebx,%eax
0x07fe1d7c:  shl    $0x8,%eax
0x07fe1d7f:  dec    %eax
0x07fe1d80:  mov    %ebx,%edx
0x07fe1d82:  call   0xf1183

----------------
IN: 
0x07fe1d87:  mov    %eax,%edi
0x07fe1d89:  test   %edi,%edi
0x07fe1d8b:  js     0x7fe1e9f

----------------
IN: 
0x07fe1d91:  mov    $0x20,%eax
0x07fe1d96:  call   0x7fe0529

----------------
IN: 
0x07fe1d9b:  mov    %eax,%esi
0x07fe1d9d:  test   %eax,%eax
0x07fe1d9f:  jne    0x7fe1db5

----------------
IN: 
0x07fe1db5:  mov    $0x20,%ecx
0x07fe1dba:  xor    %edx,%edx
0x07fe1dbc:  call   0xf0d7a

----------------
IN: 
0x07fe1dc1:  lea    0x4(%esi),%eax
0x07fe1dc4:  mov    %eax,0x1c(%esp)
0x07fe1dc8:  mov    %ebp,%edx
0x07fe1dca:  call   0x7fdf186

----------------
IN: 
0x07fe1dcf:  incl   0x14(%esp)
0x07fe1dd3:  mov    0x20(%esp,%ebx,4),%edx
0x07fe1dd7:  test   %edx,%edx
0x07fe1dd9:  jne    0x7fe1df8

----------------
IN: 
0x07fe1ddb:  xor    %eax,%eax
0x07fe1ddd:  cmp    0x10(%esp),%ebx
0x07fe1de1:  setne  %al
0x07fe1de4:  add    %eax,0xc(%esp)
0x07fe1de8:  cmp    0xf6378,%ebx
0x07fe1dee:  jle    0x7fe1dfe

----------------
IN: 
0x07fe1dfe:  mov    0xc(%esp),%eax
0x07fe1e02:  mov    %ebx,0x10(%esp)
0x07fe1e06:  mov    %di,(%esi)
0x07fe1e09:  mov    %edx,0xc(%esi)
0x07fe1e0c:  mov    %al,0x2(%esi)
0x07fe1e0f:  movzwl %di,%ebp
0x07fe1e12:  xor    %edx,%edx
0x07fe1e14:  mov    %ebp,%eax
0x07fe1e16:  call   0xf0e37

----------------
IN: 
0x000f0e37:  mov    %edx,%ecx
0x000f0e39:  and    $0xfc,%ecx
0x000f0e3f:  or     $0x80000000,%ecx
0x000f0e45:  movzwl %ax,%eax
0x000f0e48:  shl    $0x8,%eax
0x000f0e4b:  or     %eax,%ecx
0x000f0e4d:  mov    $0xcf8,%edx
0x000f0e52:  mov    %ecx,%eax
0x000f0e54:  out    %eax,(%dx)
0x000f0e55:  mov    $0xfc,%dl
0x000f0e57:  in     (%dx),%eax
0x000f0e58:  ret    

----------------
IN: 
0x07fe1e1b:  mov    %ax,0x10(%esi)
0x07fe1e1f:  shr    $0x10,%eax
0x07fe1e22:  mov    %ax,0x12(%esi)
0x07fe1e26:  mov    $0x8,%edx
0x07fe1e2b:  mov    %ebp,%eax
0x07fe1e2d:  call   0xf0e37

----------------
IN: 
0x07fe1e32:  mov    %eax,%edx
0x07fe1e34:  shr    $0x10,%edx
0x07fe1e37:  mov    %dx,0x14(%esi)
0x07fe1e3b:  mov    %eax,%edx
0x07fe1e3d:  shr    $0x8,%edx
0x07fe1e40:  mov    %dl,0x16(%esi)
0x07fe1e43:  mov    %al,0x17(%esi)
0x07fe1e46:  mov    $0xe,%edx
0x07fe1e4b:  mov    %ebp,%eax
0x07fe1e4d:  call   0xf0e59

----------------
IN: 
0x07fe1e52:  mov    %al,0x18(%esi)
0x07fe1e55:  and    $0x7f,%eax
0x07fe1e58:  dec    %eax
0x07fe1e59:  cmp    $0x1,%al
0x07fe1e5b:  ja     0x7fe1e8b

----------------
IN: 
0x07fe1e8b:  mov    %ebx,%edx
0x07fe1e8d:  mov    %edi,%eax
0x07fe1e8f:  call   0xf1183

----------------
IN: 
0x07fe1e94:  mov    %eax,%edi
0x07fe1e96:  mov    0x1c(%esp),%ebp
0x07fe1e9a:  jmp    0x7fe1d89

----------------
IN: 
0x07fe1d89:  test   %edi,%edi
0x07fe1d8b:  js     0x7fe1e9f

----------------
IN: 
0x07fe1e9f:  cmp    $0xff,%ebx
0x07fe1ea5:  jne    0x7fe1d6d

----------------
IN: 
0x07fe1d6d:  cmp    0xf6378,%ebx
0x07fe1d73:  jge    0x7fe1ead

----------------
IN: 
0x07fe1ead:  mov    0x18(%esp),%eax
0x07fe1eb1:  cmp    %eax,0xc(%esp)
0x07fe1eb5:  jl     0x7fe1d79

----------------
IN: 
0x07fe1ebb:  mov    0xf6378,%eax
0x07fe1ec0:  mov    %eax,0x8(%esp)
0x07fe1ec4:  mov    0x14(%esp),%eax
0x07fe1ec8:  mov    %eax,0x4(%esp)
0x07fe1ecc:  movl   $0xf3ec7,(%esp)
0x07fe1ed3:  call   0xf1787

----------------
IN: 
0x07fe1ed8:  add    $0x420,%esp
0x07fe1ede:  pop    %ebx
0x07fe1edf:  pop    %esi
0x07fe1ee0:  pop    %edi
0x07fe1ee1:  pop    %ebp
0x07fe1ee2:  ret    

----------------
IN: 
0x07fe8126:  mov    0x7feff1f,%eax
0x07fe812b:  mov    %eax,0x7fefe17
0x07fe8130:  movl   $0x0,0x7fefe1b
0x07fe813a:  mov    0x7fefee3,%eax
0x07fe813f:  lea    -0x4(%eax),%ebx
0x07fe8142:  cmp    $0xfffffffc,%ebx
0x07fe8145:  je     0x7fe6d4e

----------------
IN: 
0x07fe814b:  xor    %ecx,%ecx
0x07fe814d:  mov    %ebx,%edx
0x07fe814f:  mov    $0x7fefaa3,%eax
0x07fe8154:  call   0x7fdf286

----------------
IN: 
0x07fdf286:  push   %esi
0x07fdf287:  push   %ebx
0x07fdf288:  mov    %edx,%ebx
0x07fdf28a:  mov    %ecx,%edx
0x07fdf28c:  mov    (%eax),%esi
0x07fdf28e:  test   %esi,%esi
0x07fdf290:  je     0x7fdf2cd

----------------
IN: 
0x07fdf292:  cmp    $0xffffffff,%esi
0x07fdf295:  je     0x7fdf29f

----------------
IN: 
0x07fdf297:  movzwl 0x10(%ebx),%ecx
0x07fdf29b:  cmp    %ecx,%esi
0x07fdf29d:  jne    0x7fdf2c8

----------------
IN: 
0x07fdf29f:  mov    0x4(%eax),%esi
0x07fdf2a2:  cmp    $0xffffffff,%esi
0x07fdf2a5:  je     0x7fdf2af

----------------
IN: 
0x07fdf2a7:  movzwl 0x12(%ebx),%ecx
0x07fdf2ab:  cmp    %ecx,%esi
0x07fdf2ad:  jne    0x7fdf2c8

----------------
IN: 
0x07fdf2af:  movzwl 0x14(%ebx),%esi
0x07fdf2b3:  xor    0x8(%eax),%esi
0x07fdf2b6:  test   %esi,0xc(%eax)
0x07fdf2b9:  jne    0x7fdf2c8

----------------
IN: 
0x07fdf2bb:  mov    0x10(%eax),%esi
0x07fdf2be:  test   %esi,%esi
0x07fdf2c0:  je     0x7fdf2d8

----------------
IN: 
0x07fdf2c2:  mov    %ebx,%eax
0x07fdf2c4:  call   *%esi

----------------
IN: 
0x07fdfc3b:  mov    0x7feff1f,%eax
0x07fdfc40:  cmp    $0x80000000,%eax
0x07fdfc45:  ja     0x7fdfc53

----------------
IN: 
0x07fdfc47:  movl   $0x80000000,0x7fefe17
0x07fdfc51:  jmp    0x7fdfc64

----------------
IN: 
0x07fdfc64:  movl   $0x0,0x7fefe1b
0x07fdfc6e:  movl   $0x7fdfb7e,0x7fefdff
0x07fdfc78:  ret    

----------------
IN: 
0x07fdf2c6:  jmp    0x7fdf2d8

----------------
IN: 
0x07fdf2d8:  xor    %eax,%eax
0x07fdf2da:  pop    %ebx
0x07fdf2db:  pop    %esi
0x07fdf2dc:  ret    

----------------
IN: 
0x07fe8159:  mov    0x4(%ebx),%ebx
0x07fe815c:  sub    $0x4,%ebx
0x07fe815f:  jmp    0x7fe8142

----------------
IN: 
0x07fe8142:  cmp    $0xfffffffc,%ebx
0x07fe8145:  je     0x7fe6d4e

----------------
IN: 
0x07fdf2c8:  add    $0x14,%eax
0x07fdf2cb:  jmp    0x7fdf28c

----------------
IN: 
0x07fdf28c:  mov    (%eax),%esi
0x07fdf28e:  test   %esi,%esi
0x07fdf290:  je     0x7fdf2cd

----------------
IN: 
0x07fdf2cd:  cmpl   $0x0,0xc(%eax)
0x07fdf2d1:  jne    0x7fdf297

----------------
IN: 
0x07fdf2d3:  or     $0xffffffff,%eax
0x07fdf2d6:  jmp    0x7fdf2da

----------------
IN: 
0x07fdf2da:  pop    %ebx
0x07fdf2db:  pop    %esi
0x07fdf2dc:  ret    

----------------
IN: 
0x07fe6d4e:  movl   $0xf4aab,(%esp)
0x07fe6d55:  call   0xf1787

----------------
IN: 
0x07fe6d5a:  mov    0xf6378,%eax
0x07fe6d5f:  inc    %eax
0x07fe6d60:  imul   $0x28,%eax,%eax
0x07fe6d63:  call   0x7fe0529

----------------
IN: 
0x07fe6d68:  mov    %eax,0x18(%esp)
0x07fe6d6c:  test   %eax,%eax
0x07fe6d6e:  jne    0x7fe6c20

----------------
IN: 
0x07fe6c20:  mov    0xf6378,%eax
0x07fe6c25:  lea    0x1(%eax),%ecx
0x07fe6c28:  imul   $0x28,%ecx,%ecx
0x07fe6c2b:  xor    %edx,%edx
0x07fe6c2d:  mov    0x18(%esp),%eax
0x07fe6c31:  call   0xf0d7a

----------------
IN: 
0x07fe6c36:  movl   $0xf4acf,(%esp)
0x07fe6c3d:  call   0xf1787

----------------
IN: 
0x07fe6c42:  mov    0x7fefee3,%eax
0x07fe6c47:  lea    -0x4(%eax),%ebx
0x07fe6c4a:  cmp    $0xfffffffc,%ebx
0x07fe6c4d:  jne    0x7fe8161

----------------
IN: 
0x07fe8161:  cmpw   $0x604,0x14(%ebx)
0x07fe8167:  jne    0x7fe8178

----------------
IN: 
0x07fe8178:  mov    (%ebx),%eax
0x07fe817a:  movzbl %ah,%eax
0x07fe817d:  imul   $0x28,%eax,%eax
0x07fe8180:  add    0x18(%esp),%eax
0x07fe8184:  mov    %eax,0x58(%esp)
0x07fe8188:  movl   $0x0,0x20(%esp)
0x07fe8190:  cmpw   $0x604,0x14(%ebx)
0x07fe8196:  jne    0x7fe81a8

----------------
IN: 
0x07fe81a8:  mov    0x20(%esp),%eax
0x07fe81ac:  cmp    $0x6,%eax
0x07fe81af:  je     0x7fe81ba

----------------
IN: 
0x07fe81b1:  lea    0x10(,%eax,4),%eax
0x07fe81b8:  jmp    0x7fe81cf

----------------
IN: 
0x07fe81cf:  mov    %eax,0x28(%esp)
0x07fe81d3:  movzwl (%ebx),%eax
0x07fe81d6:  mov    %eax,0x30(%esp)
0x07fe81da:  mov    0x28(%esp),%edx
0x07fe81de:  call   0xf0e37

----------------
IN: 
0x07fe81e3:  mov    %eax,0x48(%esp)
0x07fe81e7:  cmpl   $0x6,0x20(%esp)
0x07fe81ec:  jne    0x7fe821a

----------------
IN: 
0x07fe821a:  testb  $0x1,0x48(%esp)
0x07fe821f:  jne    0x7fe8254

----------------
IN: 
0x07fe8221:  mov    0x48(%esp),%ecx
0x07fe8225:  mov    %ecx,%eax
0x07fe8227:  and    $0x8,%eax
0x07fe822a:  cmp    $0x1,%eax
0x07fe822d:  sbb    %eax,%eax
0x07fe822f:  mov    %eax,0x38(%esp)
0x07fe8233:  addl   $0x2,0x38(%esp)
0x07fe8238:  mov    %ecx,%eax
0x07fe823a:  and    $0x6,%eax
0x07fe823d:  cmp    $0x4,%eax
0x07fe8240:  sete   %al
0x07fe8243:  movzbl %al,%eax
0x07fe8246:  mov    %eax,0x40(%esp)
0x07fe824a:  movl   $0xfffffff0,0x44(%esp)
0x07fe8252:  jmp    0x7fe826c

----------------
IN: 
0x07fe826c:  or     $0xffffffff,%ecx
0x07fe826f:  mov    0x28(%esp),%edx
0x07fe8273:  mov    0x30(%esp),%eax
0x07fe8277:  call   0xf0dde

----------------
IN: 
0x000f0dde:  push   %ebx
0x000f0ddf:  mov    %edx,%ebx
0x000f0de1:  and    $0xfc,%ebx
0x000f0de7:  or     $0x80000000,%ebx
0x000f0ded:  movzwl %ax,%edx
0x000f0df0:  shl    $0x8,%edx
0x000f0df3:  or     %edx,%ebx
0x000f0df5:  mov    $0xcf8,%edx
0x000f0dfa:  mov    %ebx,%eax
0x000f0dfc:  out    %eax,(%dx)
0x000f0dfd:  mov    $0xfc,%dl
0x000f0dff:  mov    %ecx,%eax
0x000f0e01:  out    %eax,(%dx)
0x000f0e02:  pop    %ebx
0x000f0e03:  ret    

----------------
IN: 
0x07fe827c:  mov    0x28(%esp),%edx
0x07fe8280:  mov    0x30(%esp),%ebp
0x07fe8284:  mov    %ebp,%eax
0x07fe8286:  call   0xf0e37

----------------
IN: 
0x07fe828b:  mov    %eax,0x4c(%esp)
0x07fe828f:  mov    0x48(%esp),%ecx
0x07fe8293:  mov    0x28(%esp),%edx
0x07fe8297:  mov    %ebp,%eax
0x07fe8299:  call   0xf0dde

----------------
IN: 
0x07fe829e:  cmpl   $0x0,0x40(%esp)
0x07fe82a3:  je     0x7fe8304

----------------
IN: 
0x07fe8304:  mov    0x4c(%esp),%eax
0x07fe8308:  and    0x44(%esp),%eax
0x07fe830c:  neg    %eax
0x07fe830e:  mov    %eax,%esi
0x07fe8310:  xor    %edi,%edi
0x07fe8312:  mov    %edi,%eax
0x07fe8314:  or     %esi,%eax
0x07fe8316:  je     0x7fe8371

----------------
IN: 
0x07fe8371:  incl   0x20(%esp)
0x07fe8375:  cmpl   $0x6,0x20(%esp)
0x07fe837a:  jle    0x7fe8190

----------------
IN: 
0x07fe8190:  cmpw   $0x604,0x14(%ebx)
0x07fe8196:  jne    0x7fe81a8

----------------
IN: 
0x07fe81ba:  mov    0x18(%ebx),%al
0x07fe81bd:  and    $0x7f,%eax
0x07fe81c0:  dec    %al
0x07fe81c2:  sete   %al
0x07fe81c5:  movzbl %al,%eax
0x07fe81c8:  lea    0x30(,%eax,8),%eax
0x07fe81cf:  mov    %eax,0x28(%esp)
0x07fe81d3:  movzwl (%ebx),%eax
0x07fe81d6:  mov    %eax,0x30(%esp)
0x07fe81da:  mov    0x28(%esp),%edx
0x07fe81de:  call   0xf0e37

----------------
IN: 
0x07fe81ee:  mov    $0xfffff800,%ecx
0x07fe81f3:  mov    0x28(%esp),%edx
0x07fe81f7:  mov    0x30(%esp),%eax
0x07fe81fb:  call   0xf0dde

----------------
IN: 
0x07fe8200:  movl   $0xfffff800,0x44(%esp)
0x07fe8208:  movl   $0x1,0x38(%esp)
0x07fe8210:  movl   $0x0,0x40(%esp)
0x07fe8218:  jmp    0x7fe827c

----------------
IN: 
0x07fe8380:  mov    0x4(%ebx),%eax
0x07fe8383:  jmp    0x7fe6c47

----------------
IN: 
0x07fe6c47:  lea    -0x4(%eax),%ebx
0x07fe6c4a:  cmp    $0xfffffffc,%ebx
0x07fe6c4d:  jne    0x7fe8161

----------------
IN: 
0x07fe8254:  movl   $0xfffffffc,0x44(%esp)
0x07fe825c:  movl   $0x0,0x38(%esp)
0x07fe8264:  movl   $0x0,0x40(%esp)
0x07fe826c:  or     $0xffffffff,%ecx
0x07fe826f:  mov    0x28(%esp),%edx
0x07fe8273:  mov    0x30(%esp),%eax
0x07fe8277:  call   0xf0dde

----------------
IN: 
0x07fe8318:  cmpl   $0x0,0x38(%esp)
0x07fe831d:  je     0x7fe8333

----------------
IN: 
0x07fe8333:  mov    0x40(%esp),%ebp
0x07fe8337:  mov    %ebp,0x14(%esp)
0x07fe833b:  mov    0x38(%esp),%ecx
0x07fe833f:  mov    %ecx,0x10(%esp)
0x07fe8343:  mov    %esi,0x8(%esp)
0x07fe8347:  mov    %edi,0xc(%esp)
0x07fe834b:  mov    %esi,(%esp)
0x07fe834e:  mov    %edi,0x4(%esp)
0x07fe8352:  mov    0x20(%esp),%ecx
0x07fe8356:  mov    %ebx,%edx
0x07fe8358:  mov    0x58(%esp),%eax
0x07fe835c:  call   0x7fe0e80

----------------
IN: 
0x07fe0e80:  push   %ebp
0x07fe0e81:  push   %edi
0x07fe0e82:  push   %esi
0x07fe0e83:  push   %ebx
0x07fe0e84:  sub    $0x10,%esp
0x07fe0e87:  mov    %eax,%esi
0x07fe0e89:  mov    %edx,0x8(%esp)
0x07fe0e8d:  mov    %ecx,0xc(%esp)
0x07fe0e91:  mov    0x24(%esp),%edi
0x07fe0e95:  mov    0x28(%esp),%ebp
0x07fe0e99:  mov    0x2c(%esp),%eax
0x07fe0e9d:  mov    %eax,(%esp)
0x07fe0ea0:  mov    0x30(%esp),%eax
0x07fe0ea4:  mov    %eax,0x4(%esp)
0x07fe0ea8:  mov    $0x28,%eax
0x07fe0ead:  call   0x7fe0529

----------------
IN: 
0x07fe0eb2:  mov    %eax,%ebx
0x07fe0eb4:  test   %eax,%eax
0x07fe0eb6:  jne    0x7fe0ece

----------------
IN: 
0x07fe0ece:  mov    $0x28,%ecx
0x07fe0ed3:  xor    %edx,%edx
0x07fe0ed5:  call   0xf0d7a

----------------
IN: 
0x07fe0eda:  mov    0x8(%esp),%eax
0x07fe0ede:  mov    %eax,(%ebx)
0x07fe0ee0:  mov    0xc(%esp),%eax
0x07fe0ee4:  mov    %eax,0x4(%ebx)
0x07fe0ee7:  mov    %edi,0x8(%ebx)
0x07fe0eea:  mov    %ebp,0xc(%ebx)
0x07fe0eed:  mov    (%esp),%eax
0x07fe0ef0:  mov    %eax,0x10(%ebx)
0x07fe0ef3:  mov    0x4(%esp),%eax
0x07fe0ef7:  mov    %eax,0x14(%ebx)
0x07fe0efa:  mov    0x38(%esp),%eax
0x07fe0efe:  mov    %eax,0x18(%ebx)
0x07fe0f01:  mov    0x34(%esp),%eax
0x07fe0f05:  mov    %eax,0x1c(%ebx)
0x07fe0f08:  imul   $0xc,%eax,%eax
0x07fe0f0b:  lea    0x8(%esi,%eax,1),%edx
0x07fe0f0f:  mov    (%edx),%eax
0x07fe0f11:  test   %eax,%eax
0x07fe0f13:  jne    0x7fe0f21

----------------
IN: 
0x07fe0f15:  lea    0x20(%ebx),%eax
0x07fe0f18:  call   0x7fdf186

----------------
IN: 
0x07fe0f1d:  mov    %ebx,%eax
0x07fe0f1f:  jmp    0x7fe0f51

----------------
IN: 
0x07fe0f51:  add    $0x10,%esp
0x07fe0f54:  pop    %ebx
0x07fe0f55:  pop    %esi
0x07fe0f56:  pop    %edi
0x07fe0f57:  pop    %ebp
0x07fe0f58:  ret    

----------------
IN: 
0x07fe8361:  test   %eax,%eax
0x07fe8363:  je     0x7fe6d82

----------------
IN: 
0x07fe8369:  cmp    $0x1,%ebp
0x07fe836c:  sbbl   $0xffffffff,0x20(%esp)
0x07fe8371:  incl   0x20(%esp)
0x07fe8375:  cmpl   $0x6,0x20(%esp)
0x07fe837a:  jle    0x7fe8190

----------------
IN: 
0x07fe831f:  cmp    $0x0,%edi
0x07fe8322:  ja     0x7fe8333

----------------
IN: 
0x07fe8324:  cmp    $0xfff,%esi
0x07fe832a:  ja     0x7fe8333

----------------
IN: 
0x07fe0f21:  mov    -0x10(%eax),%ecx
0x07fe0f24:  mov    -0xc(%eax),%esi
0x07fe0f27:  cmp    0x4(%esp),%esi
0x07fe0f2b:  jb     0x7fe0f15

----------------
IN: 
0x07fe0f2d:  jbe    0x7fe0f4a

----------------
IN: 
0x07fe0f4a:  cmp    (%esp),%ecx
0x07fe0f4d:  jb     0x7fe0f15

----------------
IN: 
0x07fe6c53:  mov    0xf6378,%eax
0x07fe6c58:  mov    %eax,0x30(%esp)
0x07fe6c5c:  imul   $0x28,%eax,%edi
0x07fe6c5f:  add    0x18(%esp),%edi
0x07fe6c63:  cmpl   $0x0,0x30(%esp)
0x07fe6c68:  jg     0x7fe8388

----------------
IN: 
0x07fe6c6e:  movl   $0xf4d0b,(%esp)
0x07fe6c75:  call   0xf1787

----------------
IN: 
0x07fe6c7a:  movl   $0xfec00000,0xc(%esp)
0x07fe6c82:  movl   $0x0,0x10(%esp)
0x07fe6c8a:  mov    0x7fefe17,%eax
0x07fe6c8f:  mov    0x7fefe1b,%edx
0x07fe6c95:  mov    %eax,0x4(%esp)
0x07fe6c99:  mov    %edx,0x8(%esp)
0x07fe6c9d:  movl   $0xf4d2f,(%esp)
0x07fe6ca4:  call   0xf1787

----------------
IN: 
0x07fe6ca9:  mov    0x18(%esp),%eax
0x07fe6cad:  call   0x7fe05d4

----------------
IN: 
0x07fe05d4:  push   %ebp
0x07fe05d5:  push   %edi
0x07fe05d6:  push   %esi
0x07fe05d7:  push   %ebx
0x07fe05d8:  sub    $0x10,%esp
0x07fe05db:  movl   $0xc000,(%eax)
0x07fe05e1:  movl   $0x0,0x4(%eax)
0x07fe05e8:  lea    0x18(%eax),%esi
0x07fe05eb:  lea    0xc(%eax),%edi
0x07fe05ee:  mov    0x14(%eax),%edx
0x07fe05f1:  test   %edx,%edx
0x07fe05f3:  je     0x7fe05fd

----------------
IN: 
0x07fe05f5:  mov    -0x10(%edx),%ecx
0x07fe05f8:  mov    -0xc(%edx),%edx
0x07fe05fb:  jmp    0x7fe0604

----------------
IN: 
0x07fe0604:  mov    0x20(%eax),%eax
0x07fe0607:  test   %eax,%eax
0x07fe0609:  je     0x7fe0617

----------------
IN: 
0x07fe060b:  mov    -0x10(%eax),%ebx
0x07fe060e:  mov    -0xc(%eax),%eax
0x07fe0611:  cmp    %eax,%edx
0x07fe0613:  jb     0x7fe062c

----------------
IN: 
0x07fe0615:  jmp    0x7fe061e

----------------
IN: 
0x07fe061e:  cmp    %eax,%edx
0x07fe0620:  ja     0x7fe0626

----------------
IN: 
0x07fe0622:  cmp    %ebx,%ecx
0x07fe0624:  jb     0x7fe062c

----------------
IN: 
0x07fe062c:  mov    %edi,%eax
0x07fe062e:  call   0x7fdfc79

----------------
IN: 
0x07fdfc79:  push   %ebp
0x07fdfc7a:  mov    %esp,%ebp
0x07fdfc7c:  mov    0x8(%eax),%ecx
0x07fdfc7f:  sub    $0x20,%ecx
0x07fdfc82:  xor    %eax,%eax
0x07fdfc84:  xor    %edx,%edx
0x07fdfc86:  cmp    $0xffffffe0,%ecx
0x07fdfc89:  je     0x7fdfc99

----------------
IN: 
0x07fdfc8b:  add    0x8(%ecx),%eax
0x07fdfc8e:  adc    0xc(%ecx),%edx
0x07fdfc91:  mov    0x20(%ecx),%ecx
0x07fdfc94:  sub    $0x20,%ecx
0x07fdfc97:  jmp    0x7fdfc86

----------------
IN: 
0x07fdfc86:  cmp    $0xffffffe0,%ecx
0x07fdfc89:  je     0x7fdfc99

----------------
IN: 
0x07fdfc99:  pop    %ebp
0x07fdfc9a:  ret    

----------------
IN: 
0x07fe0633:  mov    0x8(%edi),%ecx
0x07fe0636:  test   %ecx,%ecx
0x07fe0638:  je     0x7fe0642

----------------
IN: 
0x07fe063a:  mov    -0xc(%ecx),%ebx
0x07fe063d:  mov    -0x10(%ecx),%ecx
0x07fe0640:  jmp    0x7fe0649

----------------
IN: 
0x07fe0649:  neg    %ecx
0x07fe064b:  adc    $0x0,%ebx
0x07fe064e:  neg    %ebx
0x07fe0650:  mov    %ecx,0x8(%esp)
0x07fe0654:  mov    %ebx,0xc(%esp)
0x07fe0658:  mov    $0xfec00000,%ecx
0x07fe065d:  xor    %ebx,%ebx
0x07fe065f:  sub    %eax,%ecx
0x07fe0661:  sbb    %edx,%ebx
0x07fe0663:  mov    0x8(%esp),%eax
0x07fe0667:  mov    0xc(%esp),%edx
0x07fe066b:  mov    %eax,%ebp
0x07fe066d:  and    %ecx,%ebp
0x07fe066f:  mov    %ebp,(%esp)
0x07fe0672:  and    %edx,%ebx
0x07fe0674:  mov    %ebx,0x4(%esp)
0x07fe0678:  mov    (%esp),%eax
0x07fe067b:  mov    0x4(%esp),%edx
0x07fe067f:  mov    %eax,(%edi)
0x07fe0681:  mov    %edx,0x4(%edi)
0x07fe0684:  mov    %esi,%eax
0x07fe0686:  call   0x7fdfc79

----------------
IN: 
0x07fe068b:  mov    0x8(%esi),%ecx
0x07fe068e:  test   %ecx,%ecx
0x07fe0690:  je     0x7fe069a

----------------
IN: 
0x07fe0692:  mov    -0xc(%ecx),%ebx
0x07fe0695:  mov    -0x10(%ecx),%ecx
0x07fe0698:  jmp    0x7fe06a1

----------------
IN: 
0x07fe06a1:  neg    %ecx
0x07fe06a3:  adc    $0x0,%ebx
0x07fe06a6:  neg    %ebx
0x07fe06a8:  mov    (%esp),%edi
0x07fe06ab:  mov    0x4(%esp),%ebp
0x07fe06af:  sub    %eax,%edi
0x07fe06b1:  sbb    %edx,%ebp
0x07fe06b3:  mov    %ebp,%edx
0x07fe06b5:  and    %edi,%ecx
0x07fe06b7:  and    %ebx,%edx
0x07fe06b9:  mov    %ecx,(%esi)
0x07fe06bb:  mov    %edx,0x4(%esi)
0x07fe06be:  cmp    0x7fefe1b,%edx
0x07fe06c4:  jb     0x7fe06e9

----------------
IN: 
0x07fe06c6:  ja     0x7fe06d0

----------------
IN: 
0x07fe06c8:  cmp    0x7fefe17,%ecx
0x07fe06ce:  jb     0x7fe06e9

----------------
IN: 
0x07fe06d0:  mov    $0x1,%eax
0x07fe06d5:  cmp    $0x0,%edx
0x07fe06d8:  ja     0x7fe06e5

----------------
IN: 
0x07fe06da:  xor    %eax,%eax
0x07fe06dc:  cmp    $0xfec00000,%ecx
0x07fe06e2:  seta   %al
0x07fe06e5:  neg    %eax
0x07fe06e7:  jmp    0x7fe06ec

----------------
IN: 
0x07fe06ec:  add    $0x10,%esp
0x07fe06ef:  pop    %ebx
0x07fe06f0:  pop    %esi
0x07fe06f1:  pop    %edi
0x07fe06f2:  pop    %ebp
0x07fe06f3:  ret    

----------------
IN: 
0x07fe6cb2:  test   %eax,%eax
0x07fe6cb4:  je     0x7fe86ed

----------------
IN: 
0x07fe86ed:  movl   $0x0,0x7fefe0f
0x07fe86f7:  movl   $0x0,0x7fefe13
0x07fe8701:  jmp    0x7fe86e5

----------------
IN: 
0x07fe86e5:  mov    0x18(%esp),%ebx
0x07fe86e9:  xor    %esi,%esi
0x07fe86eb:  jmp    0x7fe8703

----------------
IN: 
0x07fe8703:  cmp    0xf6378,%esi
0x07fe8709:  jg     0x7fe6d04

----------------
IN: 
0x07fe870f:  mov    %ebx,%edx
0x07fe8711:  mov    0x18(%esp),%edi
0x07fe8715:  mov    %edi,%eax
0x07fe8717:  call   0x7fe29d8

----------------
IN: 
0x07fe29d8:  push   %ebp
0x07fe29d9:  push   %edi
0x07fe29da:  push   %esi
0x07fe29db:  push   %ebx
0x07fe29dc:  sub    $0x48,%esp
0x07fe29df:  mov    %eax,0x44(%esp)
0x07fe29e3:  mov    %edx,%ebp
0x07fe29e5:  mov    0x8(%edx),%eax
0x07fe29e8:  lea    -0x20(%eax),%esi
0x07fe29eb:  cmp    $0xffffffe0,%esi
0x07fe29ee:  je     0x7fe2c53

----------------
IN: 
0x07fe29f4:  mov    0x20(%esi),%eax
0x07fe29f7:  mov    %eax,0x38(%esp)
0x07fe29fb:  mov    0x0(%ebp),%eax
0x07fe29fe:  mov    0x4(%ebp),%edx
0x07fe2a01:  mov    %eax,0x28(%esp)
0x07fe2a05:  mov    %edx,0x2c(%esp)
0x07fe2a09:  mov    0x8(%esi),%eax
0x07fe2a0c:  mov    0xc(%esi),%edx
0x07fe2a0f:  mov    %eax,0x30(%esp)
0x07fe2a13:  mov    %edx,0x34(%esp)
0x07fe2a17:  mov    %eax,%ecx
0x07fe2a19:  mov    %edx,%ebx
0x07fe2a1b:  add    0x28(%esp),%ecx
0x07fe2a1f:  adc    0x2c(%esp),%ebx
0x07fe2a23:  mov    %ecx,0x3c(%esp)
0x07fe2a27:  mov    %ebx,0x40(%esp)
0x07fe2a2b:  mov    %ecx,0x0(%ebp)
0x07fe2a2e:  mov    %ebx,0x4(%ebp)
0x07fe2a31:  mov    0x4(%esi),%eax
0x07fe2a34:  cmp    $0xffffffff,%eax
0x07fe2a37:  jne    0x7fe2a59

----------------
IN: 
0x07fe2a59:  mov    (%esi),%edx
0x07fe2a5b:  movzwl (%edx),%edi
0x07fe2a5e:  test   %eax,%eax
0x07fe2a60:  js     0x7fe2b1a

----------------
IN: 
0x07fe2a66:  mov    0x1c(%esi),%edx
0x07fe2a69:  mov    0x7fefbe7(,%edx,4),%edx
0x07fe2a70:  mov    %edx,0x24(%esp)
0x07fe2a74:  mov    0x30(%esp),%ecx
0x07fe2a78:  mov    0x34(%esp),%ebx
0x07fe2a7c:  mov    %ecx,0x1c(%esp)
0x07fe2a80:  mov    %ebx,0x20(%esp)
0x07fe2a84:  mov    0x28(%esp),%edx
0x07fe2a88:  mov    0x2c(%esp),%ecx
0x07fe2a8c:  mov    %edx,0x14(%esp)
0x07fe2a90:  mov    %ecx,0x18(%esp)
0x07fe2a94:  mov    %eax,0x10(%esp)
0x07fe2a98:  mov    %edi,%eax
0x07fe2a9a:  and    $0x7,%eax
0x07fe2a9d:  mov    %eax,0xc(%esp)
0x07fe2aa1:  mov    %edi,%eax
0x07fe2aa3:  shr    $0x3,%ax
0x07fe2aa7:  and    $0x1f,%eax
0x07fe2aaa:  mov    %eax,0x8(%esp)
0x07fe2aae:  mov    %edi,%eax
0x07fe2ab0:  movzbl %ah,%edi
0x07fe2ab3:  mov    %edi,0x4(%esp)
0x07fe2ab7:  movl   $0xf4251,(%esp)
0x07fe2abe:  call   0xf1787

----------------
IN: 
0x07fe2ac3:  mov    0x18(%esi),%eax
0x07fe2ac6:  mov    %eax,0x30(%esp)
0x07fe2aca:  mov    0x4(%esi),%eax
0x07fe2acd:  mov    (%esi),%ebx
0x07fe2acf:  cmp    $0x6,%eax
0x07fe2ad2:  je     0x7fe2add

----------------
IN: 
0x07fe2ad4:  lea    0x10(,%eax,4),%edi
0x07fe2adb:  jmp    0x7fe2af2

----------------
IN: 
0x07fe2af2:  movzwl (%ebx),%eax
0x07fe2af5:  mov    0x28(%esp),%ecx
0x07fe2af9:  mov    %edi,%edx
0x07fe2afb:  call   0xf0dde

----------------
IN: 
0x07fe2b00:  cmpl   $0x0,0x30(%esp)
0x07fe2b05:  je     0x7fe2c38

----------------
IN: 
0x07fe2c38:  lea    0x20(%esi),%eax
0x07fe2c3b:  call   0x7fdf177

----------------
IN: 
0x07fdf182:  mov    %eax,0x4(%edx)
0x07fdf185:  ret    

----------------
IN: 
0x07fe2c40:  mov    %esi,%eax
0x07fe2c42:  call   0x7fdf6b3

----------------
IN: 
0x07fdf6b3:  push   %ebx
0x07fdf6b4:  xor    %edx,%edx
0x07fdf6b6:  mov    0x7fefe8b(,%edx,4),%ecx
0x07fdf6bd:  mov    (%ecx),%ebx
0x07fdf6bf:  test   %ebx,%ebx
0x07fdf6c1:  je     0x7fdf6cc

----------------
IN: 
0x07fdf6c3:  cmp    %eax,0x8(%ebx)
0x07fdf6c6:  je     0x7fdf6d2

----------------
IN: 
0x07fdf6c8:  mov    (%ebx),%ebx
0x07fdf6ca:  jmp    0x7fdf6bf

----------------
IN: 
0x07fdf6bf:  test   %ebx,%ebx
0x07fdf6c1:  je     0x7fdf6cc

----------------
IN: 
0x07fdf6cc:  inc    %edx
0x07fdf6cd:  cmp    $0x5,%edx
0x07fdf6d0:  jne    0x7fdf6b6

----------------
IN: 
0x07fdf6b6:  mov    0x7fefe8b(,%edx,4),%ecx
0x07fdf6bd:  mov    (%ecx),%ebx
0x07fdf6bf:  test   %ebx,%ebx
0x07fdf6c1:  je     0x7fdf6cc

----------------
IN: 
0x07fdf6d2:  cmp    %ebx,%eax
0x07fdf6d4:  je     0x7fdf6f2

----------------
IN: 
0x07fdf6d6:  test   %ebx,%ebx
0x07fdf6d8:  je     0x7fdf6f2

----------------
IN: 
0x07fdf6da:  cmp    0xc(%ebx),%eax
0x07fdf6dd:  je     0x7fdf6f2

----------------
IN: 
0x07fdf6df:  mov    %ebx,%eax
0x07fdf6e1:  call   0x7fdf513

----------------
IN: 
0x07fdf513:  mov    (%eax),%edx
0x07fdf515:  test   %edx,%edx
0x07fdf517:  je     0x7fdf527

----------------
IN: 
0x07fdf519:  mov    0x8(%eax),%ecx
0x07fdf51c:  cmp    %ecx,0x10(%edx)
0x07fdf51f:  jne    0x7fdf527

----------------
IN: 
0x07fdf521:  mov    0x10(%eax),%ecx
0x07fdf524:  mov    %ecx,0x10(%edx)
0x07fdf527:  jmp    0x7fdf177

----------------
IN: 
0x07fdf6e6:  lea    -0x14(%ebx),%eax
0x07fdf6e9:  call   0x7fdf513

----------------
IN: 
0x07fdf6ee:  xor    %eax,%eax
0x07fdf6f0:  jmp    0x7fdf6f5

----------------
IN: 
0x07fdf6f5:  pop    %ebx
0x07fdf6f6:  ret    

----------------
IN: 
0x07fe2c47:  mov    0x38(%esp),%esi
0x07fe2c4b:  sub    $0x20,%esi
0x07fe2c4e:  jmp    0x7fe29eb

----------------
IN: 
0x07fe29eb:  cmp    $0xffffffe0,%esi
0x07fe29ee:  je     0x7fe2c53

----------------
IN: 
0x07fe2c53:  add    $0x48,%esp
0x07fe2c56:  pop    %ebx
0x07fe2c57:  pop    %esi
0x07fe2c58:  pop    %edi
0x07fe2c59:  pop    %ebp
0x07fe2c5a:  ret    

----------------
IN: 
0x07fe871c:  lea    0xc(%ebx),%edx
0x07fe871f:  mov    %edi,%eax
0x07fe8721:  call   0x7fe29d8

----------------
IN: 
0x07fe2add:  mov    0x18(%ebx),%al
0x07fe2ae0:  and    $0x7f,%eax
0x07fe2ae3:  dec    %al
0x07fe2ae5:  sete   %al
0x07fe2ae8:  movzbl %al,%eax
0x07fe2aeb:  lea    0x30(,%eax,8),%edi
0x07fe2af2:  movzwl (%ebx),%eax
0x07fe2af5:  mov    0x28(%esp),%ecx
0x07fe2af9:  mov    %edi,%edx
0x07fe2afb:  call   0xf0dde

----------------
IN: 
0x07fe8726:  lea    0x18(%ebx),%edx
0x07fe8729:  mov    %edi,%eax
0x07fe872b:  call   0x7fe29d8

----------------
IN: 
0x07fe8730:  inc    %esi
0x07fe8731:  add    $0x28,%ebx
0x07fe8734:  jmp    0x7fe8703

----------------
IN: 
0x07fe6d04:  mov    0x7fefee3,%eax
0x07fe6d09:  lea    -0x4(%eax),%ebx
0x07fe6d0c:  cmp    $0xfffffffc,%ebx
0x07fe6d0f:  jne    0x7fe8736

----------------
IN: 
0x07fe8736:  movzwl (%ebx),%esi
0x07fe8739:  movzwl 0x12(%ebx),%eax
0x07fe873d:  mov    %eax,0x14(%esp)
0x07fe8741:  movzwl 0x10(%ebx),%eax
0x07fe8745:  mov    %eax,0x10(%esp)
0x07fe8749:  mov    %esi,%eax
0x07fe874b:  and    $0x7,%eax
0x07fe874e:  mov    %eax,0xc(%esp)
0x07fe8752:  mov    %esi,%eax
0x07fe8754:  shr    $0x3,%ax
0x07fe8758:  and    $0x1f,%eax
0x07fe875b:  mov    %eax,0x8(%esp)
0x07fe875f:  mov    %esi,%eax
0x07fe8761:  movzbl %ah,%eax
0x07fe8764:  mov    %eax,0x4(%esp)
0x07fe8768:  movl   $0xf4b63,(%esp)
0x07fe876f:  call   0xf1787

----------------
IN: 
0x07fe8774:  mov    $0x3d,%edx
0x07fe8779:  mov    %esi,%eax
0x07fe877b:  call   0xf0e59

----------------
IN: 
0x07fe8780:  movzbl %al,%edx
0x07fe8783:  test   %edx,%edx
0x07fe8785:  je     0x7fe879e

----------------
IN: 
0x07fe879e:  xor    %ecx,%ecx
0x07fe87a0:  mov    %ebx,%edx
0x07fe87a2:  mov    $0x7fefadf,%eax
0x07fe87a7:  call   0x7fdf286

----------------
IN: 
0x07fe87ac:  mov    $0x103,%ecx
0x07fe87b1:  mov    $0x4,%edx
0x07fe87b6:  mov    %esi,%eax
0x07fe87b8:  call   0x7fe045c

----------------
IN: 
0x07fe045c:  push   %edi
0x07fe045d:  push   %esi
0x07fe045e:  push   %ebx
0x07fe045f:  mov    %edx,%esi
0x07fe0461:  movzwl %ax,%edi
0x07fe0464:  mov    %edx,%ebx
0x07fe0466:  and    $0xfc,%ebx
0x07fe046c:  or     $0x80000000,%ebx
0x07fe0472:  mov    %edi,%eax
0x07fe0474:  shl    $0x8,%eax
0x07fe0477:  or     %eax,%ebx
0x07fe0479:  mov    $0xcf8,%edx
0x07fe047e:  mov    %ebx,%eax
0x07fe0480:  out    %eax,(%dx)
0x07fe0481:  mov    %esi,%edx
0x07fe0483:  and    $0x2,%edx
0x07fe0486:  add    $0xcfc,%dx
0x07fe048b:  in     (%dx),%ax
0x07fe048d:  or     %ecx,%eax
0x07fe048f:  movzwl %ax,%ecx
0x07fe0492:  mov    %esi,%edx
0x07fe0494:  mov    %edi,%eax
0x07fe0496:  pop    %ebx
0x07fe0497:  pop    %esi
0x07fe0498:  pop    %edi
0x07fe0499:  jmp    0x7fdf22d

----------------
IN: 
0x07fdf22d:  push   %edi
0x07fdf22e:  push   %esi
0x07fdf22f:  push   %ebx
0x07fdf230:  mov    %edx,%edi
0x07fdf232:  mov    %edx,%ebx
0x07fdf234:  and    $0xfc,%ebx
0x07fdf23a:  or     $0x80000000,%ebx
0x07fdf240:  movzwl %ax,%esi
0x07fdf243:  shl    $0x8,%esi
0x07fdf246:  or     %esi,%ebx
0x07fdf248:  mov    $0xcf8,%edx
0x07fdf24d:  mov    %ebx,%eax
0x07fdf24f:  out    %eax,(%dx)
0x07fdf250:  and    $0x2,%edi
0x07fdf253:  lea    0xcfc(%edi),%edx
0x07fdf259:  mov    %ecx,%eax
0x07fdf25b:  out    %ax,(%dx)
0x07fdf25d:  pop    %ebx
0x07fdf25e:  pop    %esi
0x07fdf25f:  pop    %edi
0x07fdf260:  ret    

----------------
IN: 
0x07fe87bd:  mov    0x4(%ebx),%ebx
0x07fe87c0:  sub    $0x4,%ebx
0x07fe87c3:  jmp    0x7fe6d0c

----------------
IN: 
0x07fe6d0c:  cmp    $0xfffffffc,%ebx
0x07fe6d0f:  jne    0x7fe8736

----------------
IN: 
0x07fe2c5b:  push   %edi
0x07fe2c5c:  push   %esi
0x07fe2c5d:  push   %ebx
0x07fe2c5e:  sub    $0x10,%esp
0x07fe2c61:  mov    %eax,%esi
0x07fe2c63:  movb   $0x0,0xe(%esp)
0x07fe2c68:  movb   $0x0,0xf(%esp)
0x07fe2c6d:  mov    $0x60,%ebx
0x07fe2c72:  mov    0x7fefb83(%ebx),%dl
0x07fe2c78:  movzbl %dl,%edi
0x07fe2c7b:  mov    %edi,%eax
0x07fe2c7d:  sar    $0x3,%eax
0x07fe2c80:  mov    %dl,%cl
0x07fe2c82:  and    $0x7,%ecx
0x07fe2c85:  mov    $0x1,%edx
0x07fe2c8a:  shl    %cl,%edx
0x07fe2c8c:  or     %dl,0xe(%esp,%eax,1)
0x07fe2c90:  movzwl (%esi),%eax
0x07fe2c93:  mov    %edi,%ecx
0x07fe2c95:  mov    %ebx,%edx
0x07fe2c97:  call   0xf0e04

----------------
IN: 
0x000f0e04:  push   %edi
0x000f0e05:  push   %esi
0x000f0e06:  push   %ebx
0x000f0e07:  mov    %edx,%edi
0x000f0e09:  mov    %edx,%ebx
0x000f0e0b:  and    $0xfc,%ebx
0x000f0e11:  or     $0x80000000,%ebx
0x000f0e17:  movzwl %ax,%esi
0x000f0e1a:  shl    $0x8,%esi
0x000f0e1d:  or     %esi,%ebx
0x000f0e1f:  mov    $0xcf8,%edx
0x000f0e24:  mov    %ebx,%eax
0x000f0e26:  out    %eax,(%dx)
0x000f0e27:  and    $0x3,%edi
0x000f0e2a:  lea    0xcfc(%edi),%edx
0x000f0e30:  mov    %cl,%al
0x000f0e32:  out    %al,(%dx)
0x000f0e33:  pop    %ebx
0x000f0e34:  pop    %esi
0x000f0e35:  pop    %edi
0x000f0e36:  ret    

----------------
IN: 
0x07fe2c9c:  inc    %ebx
0x07fe2c9d:  cmp    $0x64,%ebx
0x07fe2ca0:  jne    0x7fe2c72

----------------
IN: 
0x07fe2c72:  mov    0x7fefb83(%ebx),%dl
0x07fe2c78:  movzbl %dl,%edi
0x07fe2c7b:  mov    %edi,%eax
0x07fe2c7d:  sar    $0x3,%eax
0x07fe2c80:  mov    %dl,%cl
0x07fe2c82:  and    $0x7,%ecx
0x07fe2c85:  mov    $0x1,%edx
0x07fe2c8a:  shl    %cl,%edx
0x07fe2c8c:  or     %dl,0xe(%esp,%eax,1)
0x07fe2c90:  movzwl (%esi),%eax
0x07fe2c93:  mov    %edi,%ecx
0x07fe2c95:  mov    %ebx,%edx
0x07fe2c97:  call   0xf0e04

----------------
IN: 
0x07fe2ca2:  movzbl 0xe(%esp),%ecx
0x07fe2ca7:  mov    $0x4d0,%edx
0x07fe2cac:  mov    %cl,%al
0x07fe2cae:  out    %al,(%dx)
0x07fe2caf:  movzbl 0xf(%esp),%eax
0x07fe2cb4:  mov    $0xd1,%dl
0x07fe2cb6:  out    %al,(%dx)
0x07fe2cb7:  mov    %eax,0x8(%esp)
0x07fe2cbb:  mov    %ecx,0x4(%esp)
0x07fe2cbf:  movl   $0xf429a,(%esp)
0x07fe2cc6:  call   0xf1787

----------------
IN: 
0x07fe2ccb:  add    $0x10,%esp
0x07fe2cce:  pop    %ebx
0x07fe2ccf:  pop    %esi
0x07fe2cd0:  pop    %edi
0x07fe2cd1:  ret    

----------------
IN: 
0x07fdfbed:  push   %ebx
0x07fdfbee:  movzwl (%eax),%ebx
0x07fdfbf1:  mov    $0x8000,%ecx
0x07fdfbf6:  mov    $0x40,%edx
0x07fdfbfb:  mov    %ebx,%eax
0x07fdfbfd:  call   0x7fdf22d

----------------
IN: 
0x07fdfc02:  mov    $0x8000,%ecx
0x07fdfc07:  mov    $0x42,%edx
0x07fdfc0c:  mov    %ebx,%eax
0x07fdfc0e:  pop    %ebx
0x07fdfc0f:  jmp    0x7fdf22d

----------------
IN: 
0x07fe8787:  mov    %ebx,%eax
0x07fe8789:  call   *0x7fefdff

----------------
IN: 
0x07fdfb7e:  push   %ebx
0x07fdfb7f:  xor    %ecx,%ecx
0x07fdfb81:  mov    0xc(%eax),%ebx
0x07fdfb84:  mov    (%eax),%eax
0x07fdfb86:  shr    $0x3,%ax
0x07fdfb8a:  and    $0x1f,%eax
0x07fdfb8d:  test   %ebx,%ebx
0x07fdfb8f:  je     0x7fdfb97

----------------
IN: 
0x07fdfb97:  lea    -0x1(%ecx,%eax,1),%eax
0x07fdfb9b:  lea    -0x1(%edx,%eax,1),%eax
0x07fdfb9f:  and    $0x3,%eax
0x07fdfba2:  movzbl 0x7fefbe3(%eax),%eax
0x07fdfba9:  pop    %ebx
0x07fdfbaa:  ret    

----------------
IN: 
0x07fe878f:  movzbl %al,%ecx
0x07fe8792:  mov    $0x3c,%edx
0x07fe8797:  mov    %esi,%eax
0x07fe8799:  call   0xf0e04

----------------
IN: 
0x07fe1f12:  push   %ebx
0x07fe1f13:  movzwl (%eax),%ebx
0x07fe1f16:  mov    $0x9,%ecx
0x07fe1f1b:  mov    $0x3c,%edx
0x07fe1f20:  mov    %ebx,%eax
0x07fe1f22:  call   0xf0e04

----------------
IN: 
0x07fe1f27:  mov    $0xb001,%ecx
0x07fe1f2c:  mov    $0x40,%edx
0x07fe1f31:  mov    %ebx,%eax
0x07fe1f33:  call   0xf0dde

----------------
IN: 
0x07fe1f38:  mov    $0x1,%ecx
0x07fe1f3d:  mov    $0x80,%edx
0x07fe1f42:  mov    %ebx,%eax
0x07fe1f44:  call   0xf0e04

----------------
IN: 
0x07fe1f49:  mov    $0xb101,%ecx
0x07fe1f4e:  mov    $0x90,%edx
0x07fe1f53:  mov    %ebx,%eax
0x07fe1f55:  call   0xf0dde

----------------
IN: 
0x07fe1f5a:  mov    $0x9,%ecx
0x07fe1f5f:  mov    $0xd2,%edx
0x07fe1f64:  mov    %ebx,%eax
0x07fe1f66:  call   0xf0e04

----------------
IN: 
0x07fe1f6b:  movl   $0xb004,0xf6054
0x07fe1f75:  mov    $0xb008,%eax
0x07fe1f7a:  pop    %ebx
0x07fe1f7b:  jmp    0x7fe1ee3

----------------
IN: 
0x07fe1ee3:  push   %ebx
0x07fe1ee4:  sub    $0x8,%esp
0x07fe1ee7:  mov    %eax,%ebx
0x07fe1ee9:  movzwl %ax,%eax
0x07fe1eec:  mov    %eax,0x4(%esp)
0x07fe1ef0:  movl   $0xf3ef3,(%esp)
0x07fe1ef7:  call   0xf1787

----------------
IN: 
0x07fe1efc:  mov    %bx,0xf6370
0x07fe1f03:  movl   $0xdfc,0xf6374
0x07fe1f0d:  add    $0x8,%esp
0x07fe1f10:  pop    %ebx
0x07fe1f11:  ret    

----------------
IN: 
0x07fe6d15:  mov    0x18(%esp),%eax
0x07fe6d19:  call   0x7fdf6b3

----------------
IN: 
0x07fe6d1e:  mov    0x7fefee3,%eax
0x07fe6d23:  lea    -0x4(%eax),%ebx
0x07fe6d26:  cmp    $0xfffffffc,%ebx
0x07fe6d29:  jne    0x7fe87c8

----------------
IN: 
0x07fe87c8:  mov    %ebx,%eax
0x07fe87ca:  call   0x7fe054f

----------------
IN: 
0x07fe054f:  push   %ebx
0x07fe0550:  mov    %eax,%ebx
0x07fe0552:  cmpw   $0x300,0x14(%eax)
0x07fe0558:  jne    0x7fe059b

----------------
IN: 
0x07fe059b:  xor    %ecx,%ecx
0x07fe059d:  mov    %ecx,%eax
0x07fe059f:  pop    %ebx
0x07fe05a0:  ret    

----------------
IN: 
0x07fe87cf:  test   %eax,%eax
0x07fe87d1:  je     0x7fe8803

----------------
IN: 
0x07fe8803:  mov    0x4(%ebx),%ebx
0x07fe8806:  sub    $0x4,%ebx
0x07fe8809:  jmp    0x7fe6d26

----------------
IN: 
0x07fe6d26:  cmp    $0xfffffffc,%ebx
0x07fe6d29:  jne    0x7fe87c8

----------------
IN: 
0x07fe055a:  movzwl (%eax),%eax
0x07fe055d:  shl    $0x8,%eax
0x07fe0560:  or     $0x80000004,%eax
0x07fe0565:  mov    $0xcf8,%edx
0x07fe056a:  out    %eax,(%dx)
0x07fe056b:  mov    $0xfc,%dl
0x07fe056d:  in     (%dx),%ax
0x07fe056f:  and    $0x3,%eax
0x07fe0572:  xor    %ecx,%ecx
0x07fe0574:  cmp    $0x3,%ax
0x07fe0578:  jne    0x7fe059d

----------------
IN: 
0x07fe057a:  mov    0xc(%ebx),%ebx
0x07fe057d:  test   %ebx,%ebx
0x07fe057f:  je     0x7fe0594

----------------
IN: 
0x07fe0594:  mov    $0x1,%ecx
0x07fe0599:  jmp    0x7fe059d

----------------
IN: 
0x07fe059d:  mov    %ecx,%eax
0x07fe059f:  pop    %ebx
0x07fe05a0:  ret    

----------------
IN: 
0x07fe87d3:  mov    (%ebx),%eax
0x07fe87d5:  mov    %eax,%edx
0x07fe87d7:  and    $0x7,%edx
0x07fe87da:  mov    %edx,0xc(%esp)
0x07fe87de:  mov    %eax,%edx
0x07fe87e0:  shr    $0x3,%dx
0x07fe87e4:  and    $0x1f,%edx
0x07fe87e7:  mov    %edx,0x8(%esp)
0x07fe87eb:  movzbl %ah,%eax
0x07fe87ee:  mov    %eax,0x4(%esp)
0x07fe87f2:  movl   $0xf4b8c,(%esp)
0x07fe87f9:  call   0xf1787

----------------
IN: 
0x07fe87fe:  jmp    0x7fe6d82

----------------
IN: 
0x07fe6d82:  mov    $0x7113,%edx
0x07fe6d87:  mov    $0x8086,%eax
0x07fe6d8c:  call   0x7fdf261

----------------
IN: 
0x07fdf261:  mov    0x7fefee3,%ecx
0x07fdf267:  sub    $0x4,%ecx
0x07fdf26a:  cmp    $0xfffffffc,%ecx
0x07fdf26d:  je     0x7fdf280

----------------
IN: 
0x07fdf26f:  cmp    %ax,0x10(%ecx)
0x07fdf273:  jne    0x7fdf27b

----------------
IN: 
0x07fdf275:  cmp    %dx,0x12(%ecx)
0x07fdf279:  je     0x7fdf283

----------------
IN: 
0x07fdf27b:  mov    0x4(%ecx),%ecx
0x07fdf27e:  jmp    0x7fdf267

----------------
IN: 
0x07fdf267:  sub    $0x4,%ecx
0x07fdf26a:  cmp    $0xfffffffc,%ecx
0x07fdf26d:  je     0x7fdf280

----------------
IN: 
0x07fdf283:  mov    %ecx,%eax
0x07fdf285:  ret    

----------------
IN: 
0x07fe6d91:  mov    %eax,%ebx
0x07fe6d93:  mov    $0x1237,%edx
0x07fe6d98:  mov    $0x8086,%eax
0x07fe6d9d:  call   0x7fdf261

----------------
IN: 
0x07fe6da2:  test   %eax,%eax
0x07fe6da4:  je     0x7fe6daa

----------------
IN: 
0x07fe6da6:  test   %ebx,%ebx
0x07fe6da8:  jne    0x7fe6dd2

----------------
IN: 
0x07fe6dd2:  movzwl (%ebx),%edx
0x07fe6dd5:  mov    %edx,0xf5ec8
0x07fe6ddb:  movzwl (%eax),%eax
0x07fe6dde:  mov    %eax,0xf5ec4
0x07fe6de3:  call   0xf11ef

----------------
IN: 
0x000f11ef:  push   %ebp
0x000f11f0:  push   %edi
0x000f11f1:  push   %esi
0x000f11f2:  push   %ebx
0x000f11f3:  mov    0xf5ec8,%ebx
0x000f11f9:  test   %ebx,%ebx
0x000f11fb:  js     0xf12c7

----------------
IN: 
0x000f1201:  movzwl %bx,%ebx
0x000f1204:  mov    %ebx,%eax
0x000f1206:  shl    $0x8,%eax
0x000f1209:  or     $0x80000000,%eax
0x000f120e:  mov    $0xcf8,%edx
0x000f1213:  out    %eax,(%dx)
0x000f1214:  mov    $0xfe,%dl
0x000f1216:  in     (%dx),%ax
0x000f1218:  cmp    $0x7113,%ax
0x000f121c:  mov    0xf5ec4,%ebp
0x000f1222:  jne    0xf127d

----------------
IN: 
0x000f1224:  mov    $0x58,%edx
0x000f1229:  mov    %ebx,%eax
0x000f122b:  call   0xf0e37

----------------
IN: 
0x000f1230:  mov    %eax,%edi
0x000f1232:  test   $0x2000000,%eax
0x000f1237:  jne    0xf12c7

----------------
IN: 
0x000f123d:  movzwl %bp,%esi
0x000f1240:  mov    $0x4a,%ecx
0x000f1245:  mov    $0x72,%edx
0x000f124a:  mov    %esi,%eax
0x000f124c:  call   0xf0e04

----------------
IN: 
0x000f1251:  call   0xf1052

----------------
IN: 
0x000f1052:  push   %edi
0x000f1053:  push   %esi
0x000f1054:  mov    $0xa8000,%edx
0x000f1059:  mov    $0x38000,%eax
0x000f105e:  mov    $0x2000,%ecx
0x000f1063:  mov    %edx,%edi
0x000f1065:  mov    %eax,%esi
0x000f1067:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f1067:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f1069:  mov    $0xf0c2d,%ecx
0x000f106e:  sub    $0xf0c00,%ecx
0x000f1074:  mov    $0xf0c00,%esi
0x000f1079:  mov    %eax,%edi
0x000f107b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f107b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f107d:  pop    %esi
0x000f107e:  pop    %edi
0x000f107f:  ret    

----------------
IN: 
0x000f1256:  or     $0x2000000,%edi
0x000f125c:  mov    %edi,%ecx
0x000f125e:  mov    $0x58,%edx
0x000f1263:  mov    %ebx,%eax
0x000f1265:  call   0xf0dde

----------------
IN: 
0x000f126a:  call   0xf1080

----------------
IN: 
0x000f1080:  mov    $0x1,%al
0x000f1082:  out    %al,$0xb3
0x000f1084:  xor    %eax,%eax
0x000f1086:  out    %al,$0xb2
0x000f1088:  in     $0xb3,%al
0x000f108a:  test   %al,%al
0x000f108c:  jne    0xf1088

----------------
IN: 
0x00038000:  mov    $0x3fefc,%ebx
0x00038006:  addr32 mov (%ebx),%al
0x00038009:  cmp    $0x64,%al
0x0003800b:  je     0x38015

----------------
IN: 
0x0003800d:  mov    $0x3fef8,%ebx
0x00038013:  jmp    0x3801b

----------------
IN: 
0x0003801b:  mov    $0xa0000,%eax
0x00038021:  addr32 mov %eax,(%ebx)
0x00038025:  mov    $0x0,%al
0x00038027:  mov    $0xb3,%dx
0x0003802a:  out    %al,(%dx)
0x0003802b:  rsm    

----------------
IN: 
0x000f1088:  in     $0xb3,%al
0x000f108a:  test   %al,%al
0x000f108c:  jne    0xf1088

----------------
IN: 
0x000f108e:  push   %edi
0x000f108f:  push   %esi
0x000f1090:  mov    $0x38000,%edx
0x000f1095:  mov    $0xa8000,%eax
0x000f109a:  mov    $0x2000,%ecx
0x000f109f:  mov    %edx,%edi
0x000f10a1:  mov    %eax,%esi
0x000f10a3:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f10a3:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f10a5:  mov    $0xf0c4d,%ecx
0x000f10aa:  sub    $0xf0c2d,%ecx
0x000f10b0:  mov    $0xf0c2d,%esi
0x000f10b5:  mov    %eax,%edi
0x000f10b7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f10b7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f10b9:  wbinvd 
0x000f10bb:  pop    %esi
0x000f10bc:  pop    %edi
0x000f10bd:  ret    

----------------
IN: 
0x000f126f:  mov    $0xa,%ecx
0x000f1274:  mov    $0x72,%edx
0x000f1279:  mov    %esi,%eax
0x000f127b:  jmp    0xf12be

----------------
IN: 
0x000f12be:  pop    %ebx
0x000f12bf:  pop    %esi
0x000f12c0:  pop    %edi
0x000f12c1:  pop    %ebp
0x000f12c2:  jmp    0xf0e04

----------------
IN: 
0x07fe6de8:  lea    0x6c(%esp),%eax
0x07fe6dec:  mov    %eax,0x4(%esp)
0x07fe6df0:  lea    0x64(%esp),%eax
0x07fe6df4:  mov    %eax,(%esp)
0x07fe6df7:  lea    0x60(%esp),%ecx
0x07fe6dfb:  lea    0x5c(%esp),%edx
0x07fe6dff:  mov    $0x1,%eax
0x07fe6e04:  call   0xf0d85

----------------
IN: 
0x07fe6e09:  mov    0x6c(%esp),%eax
0x07fe6e0d:  and    $0x1020,%eax
0x07fe6e12:  cmp    $0x1020,%eax
0x07fe6e17:  jne    0x7fe7014

----------------
IN: 
0x07fe7014:  lea    0x78(%esp),%eax
0x07fe7018:  mov    %eax,0x4(%esp)
0x07fe701c:  lea    0x6c(%esp),%eax
0x07fe7020:  mov    %eax,(%esp)
0x07fe7023:  lea    0x68(%esp),%ecx
0x07fe7027:  lea    0x64(%esp),%edx
0x07fe702b:  mov    $0x1,%eax
0x07fe7030:  call   0xf0d85

----------------
IN: 
0x07fe7035:  cmpl   $0x0,0x64(%esp)
0x07fe703a:  je     0x7fe7043

----------------
IN: 
0x07fe703c:  testb  $0x2,0x79(%esp)
0x07fe7041:  jne    0x7fe7068

----------------
IN: 
0x07fe7068:  movzbl 0x6b(%esp),%ecx
0x07fe706d:  mov    %ecx,%edx
0x07fe706f:  shr    $0x5,%edx
0x07fe7072:  mov    $0x1,%eax
0x07fe7077:  shl    %cl,%eax
0x07fe7079:  or     %eax,0xf637c(,%edx,4)
0x07fe7080:  movl   $0x1,0xf639c
0x07fe708a:  mov    0x10000,%esi
0x07fe7090:  mov    0x10004,%edi
0x07fe7096:  mov    $0x6c24,%eax
0x07fe709b:  shl    $0x8,%eax
0x07fe709e:  or     $0xea,%al
0x07fe70a0:  mov    %eax,0x10000
0x07fe70a5:  movl   $0xf0,0x10004
0x07fe70af:  mov    0xfee000f0,%eax
0x07fe70b4:  or     $0x1,%ah
0x07fe70b7:  mov    %eax,0xfee000f0
0x07fe70bc:  movl   $0x8700,0xfee00350
0x07fe70c6:  movl   $0x8400,0xfee00360
0x07fe70d0:  movl   $0xc4500,0xfee00300
0x07fe70da:  movl   $0xc4610,0xfee00300
0x07fe70e4:  mov    $0xdf,%al
0x07fe70e6:  out    %al,$0x70
0x07fe70e8:  in     $0x71,%al
0x07fe70ea:  movzbl %al,%eax
0x07fe70ed:  lea    0x1(%eax),%ebx
0x07fe70f0:  mov    0xf639c,%eax
0x07fe70f5:  cmp    %eax,%ebx
0x07fe70f7:  je     0x7fe7100

----------------
IN: 
0x07fe7100:  mov    %esi,0x10000
0x07fe7106:  mov    %edi,0x10004
0x07fe710c:  xor    %edx,%edx
0x07fe710e:  xor    %ecx,%ecx
0x07fe7110:  mov    $0xf4c55,%eax
0x07fe7115:  call   0x7fe081e

----------------
IN: 
0x07fe711a:  mov    %eax,0x7feff37
0x07fe711f:  test   %eax,%eax
0x07fe7121:  je     0x7fe712b

----------------
IN: 
0x07fe7123:  cmp    0xf639c,%eax
0x07fe7129:  jae    0x7fe7135

----------------
IN: 
0x07fe7135:  mov    0xf639c,%eax
0x07fe713a:  mov    0x7feff37,%edx
0x07fe7140:  mov    %edx,0x8(%esp)
0x07fe7144:  mov    %eax,0x4(%esp)
0x07fe7148:  movl   $0xf4c62,(%esp)
0x07fe714f:  call   0xf1787

----------------
IN: 
0x07fe7154:  movl   $0x52495024,0xf5fd0
0x07fe715e:  mov    0xf5fef,%bl
0x07fe7164:  mov    $0x80,%edx
0x07fe7169:  mov    $0xf5fd0,%eax
0x07fe716e:  call   0xf10c1

----------------
IN: 
0x07fe7173:  sub    %eax,%ebx
0x07fe7175:  mov    %bl,0xf5fef
0x07fe717b:  movl   $0xf5fd0,0xf6050
0x07fe7185:  mov    $0x8000,%eax
0x07fe718a:  call   0x7fe0529

----------------
IN: 
0x07fe718f:  mov    %eax,%ebp
0x07fe7191:  test   %eax,%eax
0x07fe7193:  jne    0x7fe71a9

----------------
IN: 
0x07fe71a9:  mov    $0x2c,%ecx
0x07fe71ae:  xor    %edx,%edx
0x07fe71b0:  call   0xf0d7a

----------------
IN: 
0x07fe71b5:  movl   $0x504d4350,0x0(%ebp)
0x07fe71bc:  movb   $0x4,0x6(%ebp)
0x07fe71c0:  movl   $0x48434f42,0x8(%ebp)
0x07fe71c7:  movl   $0x55504353,0xc(%ebp)
0x07fe71ce:  lea    0x10(%ebp),%eax
0x07fe71d1:  mov    $0xf4c8b,%esi
0x07fe71d6:  mov    $0x3,%ecx
0x07fe71db:  mov    %eax,%edi
0x07fe71dd:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe71dd:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe71df:  movl   $0xfee00000,0x24(%ebp)
0x07fe71e6:  lea    0x78(%esp),%eax
0x07fe71ea:  mov    %eax,0x4(%esp)
0x07fe71ee:  lea    0x6c(%esp),%eax
0x07fe71f2:  mov    %eax,(%esp)
0x07fe71f5:  lea    0x68(%esp),%ecx
0x07fe71f9:  lea    0x64(%esp),%edx
0x07fe71fd:  mov    $0x1,%eax
0x07fe7202:  call   0xf0d85

----------------
IN: 
0x07fe7207:  cmpl   $0x0,0x64(%esp)
0x07fe720c:  jne    0x7fe721e

----------------
IN: 
0x07fe721e:  mov    $0x1,%edi
0x07fe7223:  testb  $0x10,0x7b(%esp)
0x07fe7228:  je     0x7fe7236

----------------
IN: 
0x07fe7236:  mov    0xfee00030,%eax
0x07fe723b:  mov    %al,0x18(%esp)
0x07fe723f:  lea    0x2c(%ebp),%eax
0x07fe7242:  mov    %eax,0x20(%esp)
0x07fe7246:  mov    %eax,%ebx
0x07fe7248:  xor    %esi,%esi
0x07fe724a:  cmp    0x7feff37,%esi
0x07fe7250:  jae    0x7fe72a0

----------------
IN: 
0x07fe7252:  mov    $0x14,%ecx
0x07fe7257:  xor    %edx,%edx
0x07fe7259:  mov    %ebx,%eax
0x07fe725b:  call   0xf0d7a

----------------
IN: 
0x07fe7260:  movb   $0x0,(%ebx)
0x07fe7263:  mov    %esi,%eax
0x07fe7265:  mov    %al,0x1(%ebx)
0x07fe7268:  mov    0x18(%esp),%al
0x07fe726c:  mov    %al,0x2(%ebx)
0x07fe726f:  mov    %esi,%eax
0x07fe7271:  movzbl %al,%eax
0x07fe7274:  call   0x7fdf213

----------------
IN: 
0x07fdf213:  mov    %al,%dl
0x07fdf215:  shr    $0x5,%dl
0x07fdf218:  movzbl %dl,%edx
0x07fdf21b:  mov    %al,%cl
0x07fdf21d:  and    $0x1f,%ecx
0x07fdf220:  mov    0xf637c(,%edx,4),%eax
0x07fdf227:  shr    %cl,%eax
0x07fdf229:  and    $0x1,%eax
0x07fdf22c:  ret    

----------------
IN: 
0x07fe7279:  test   %eax,%eax
0x07fe727b:  setne  %dl
0x07fe727e:  cmp    $0x1,%esi
0x07fe7281:  sbb    %eax,%eax
0x07fe7283:  and    $0x2,%eax
0x07fe7286:  or     %edx,%eax
0x07fe7288:  mov    %al,0x3(%ebx)
0x07fe728b:  mov    0x64(%esp),%eax
0x07fe728f:  mov    %eax,0x4(%ebx)
0x07fe7292:  mov    0x78(%esp),%eax
0x07fe7296:  mov    %eax,0x8(%ebx)
0x07fe7299:  add    $0x14,%ebx
0x07fe729c:  add    %edi,%esi
0x07fe729e:  jmp    0x7fe724a

----------------
IN: 
0x07fe724a:  cmp    0x7feff37,%esi
0x07fe7250:  jae    0x7fe72a0

----------------
IN: 
0x07fe72a0:  mov    %ebx,%esi
0x07fe72a2:  mov    %ebx,%edi
0x07fe72a4:  sub    0x20(%esp),%edi
0x07fe72a8:  sar    $0x2,%edi
0x07fe72ab:  imul   $0xcccccccd,%edi,%edi
0x07fe72b1:  cmpl   $0x0,0x7fefee3
0x07fe72b8:  je     0x7fe72e0

----------------
IN: 
0x07fe72ba:  mov    $0x8,%ecx
0x07fe72bf:  xor    %edx,%edx
0x07fe72c1:  mov    %ebx,%eax
0x07fe72c3:  call   0xf0d7a

----------------
IN: 
0x07fe72c8:  movb   $0x1,(%ebx)
0x07fe72cb:  movb   $0x0,0x1(%ebx)
0x07fe72cf:  movl   $0x20494350,0x2(%ebx)
0x07fe72d6:  movw   $0x2020,0x6(%ebx)
0x07fe72dc:  add    $0x8,%ebx
0x07fe72df:  inc    %edi
0x07fe72e0:  mov    $0x8,%ecx
0x07fe72e5:  xor    %edx,%edx
0x07fe72e7:  mov    %ebx,%eax
0x07fe72e9:  call   0xf0d7a

----------------
IN: 
0x07fe72ee:  movb   $0x1,(%ebx)
0x07fe72f1:  mov    %ebx,%eax
0x07fe72f3:  sub    %esi,%eax
0x07fe72f5:  mov    %eax,0x30(%esp)
0x07fe72f9:  sarl   $0x3,0x30(%esp)
0x07fe72fe:  mov    0x30(%esp),%esi
0x07fe7302:  mov    %esi,%eax
0x07fe7304:  mov    %al,0x38(%esp)
0x07fe7308:  mov    %al,0x1(%ebx)
0x07fe730b:  movl   $0x20415349,0x2(%ebx)
0x07fe7312:  movw   $0x2020,0x6(%ebx)
0x07fe7318:  lea    0x8(%ebx),%eax
0x07fe731b:  mov    $0x8,%ecx
0x07fe7320:  xor    %edx,%edx
0x07fe7322:  call   0xf0d7a

----------------
IN: 
0x07fe7327:  movb   $0x2,0x8(%ebx)
0x07fe732b:  movb   $0x0,0x9(%ebx)
0x07fe732f:  movb   $0x11,0xa(%ebx)
0x07fe7333:  movb   $0x1,0xb(%ebx)
0x07fe7337:  movl   $0xfec00000,0xc(%ebx)
0x07fe733e:  lea    0x2(%edi),%eax
0x07fe7341:  mov    %eax,0x40(%esp)
0x07fe7345:  lea    0x10(%ebx),%eax
0x07fe7348:  mov    %eax,0x44(%esp)
0x07fe734c:  mov    0x7fefee3,%edi
0x07fe7352:  lea    -0x4(%edi),%esi
0x07fe7355:  mov    %eax,%ebx
0x07fe7357:  movw   $0x0,0x28(%esp)
0x07fe735e:  or     $0xffffffff,%ecx
0x07fe7361:  cmp    $0xfffffffc,%esi
0x07fe7364:  je     0x7fe7373

----------------
IN: 
0x07fe7366:  mov    (%esi),%eax
0x07fe7368:  mov    %ax,0x18(%esp)
0x07fe736d:  shr    $0x8,%ax
0x07fe7371:  je     0x7fe738a

----------------
IN: 
0x07fe738a:  mov    %ecx,0x50(%esp)
0x07fe738e:  movzwl 0x18(%esp),%edi
0x07fe7393:  mov    $0x3d,%edx
0x07fe7398:  mov    %edi,%eax
0x07fe739a:  call   0xf0e59

----------------
IN: 
0x07fe739f:  mov    %al,0x20(%esp)
0x07fe73a3:  movzbl %al,%eax
0x07fe73a6:  mov    %eax,0x48(%esp)
0x07fe73aa:  mov    $0x3c,%edx
0x07fe73af:  mov    %edi,%eax
0x07fe73b1:  call   0xf0e59

----------------
IN: 
0x07fe73b6:  mov    %al,0x4c(%esp)
0x07fe73ba:  mov    0x50(%esp),%ecx
0x07fe73be:  mov    %ecx,%edi
0x07fe73c0:  cmpl   $0x0,0x48(%esp)
0x07fe73c5:  je     0x7fe7444

----------------
IN: 
0x07fe7444:  mov    0x4(%esi),%eax
0x07fe7447:  lea    -0x4(%eax),%esi
0x07fe744a:  mov    %edi,%ecx
0x07fe744c:  jmp    0x7fe7361

----------------
IN: 
0x07fe7361:  cmp    $0xfffffffc,%esi
0x07fe7364:  je     0x7fe7373

----------------
IN: 
0x07fe73c7:  mov    0x18(%esp),%edi
0x07fe73cb:  and    $0xfff8,%edi
0x07fe73d1:  xor    %eax,%eax
0x07fe73d3:  cmp    %edi,%ecx
0x07fe73d5:  sete   %al
0x07fe73d8:  neg    %eax
0x07fe73da:  and    %ax,0x28(%esp)
0x07fe73df:  movzwl 0x28(%esp),%eax
0x07fe73e4:  mov    0x20(%esp),%ecx
0x07fe73e8:  bt     %ecx,%eax
0x07fe73eb:  jb     0x7fe7444

----------------
IN: 
0x07fe73ed:  mov    $0x1,%eax
0x07fe73f2:  mov    0x20(%esp),%cl
0x07fe73f6:  shl    %cl,%eax
0x07fe73f8:  or     %ax,0x28(%esp)
0x07fe73fd:  mov    $0x8,%ecx
0x07fe7402:  xor    %edx,%edx
0x07fe7404:  mov    %ebx,%eax
0x07fe7406:  call   0xf0d7a

----------------
IN: 
0x07fe740b:  movb   $0x3,(%ebx)
0x07fe740e:  movb   $0x0,0x1(%ebx)
0x07fe7412:  movw   $0x1,0x2(%ebx)
0x07fe7418:  movb   $0x0,0x4(%ebx)
0x07fe741c:  mov    0x20(%esp),%cl
0x07fe7420:  lea    -0x1(%ecx),%eax
0x07fe7423:  mov    0x18(%esp),%edx
0x07fe7427:  shr    $0x3,%dx
0x07fe742b:  and    $0x1f,%edx
0x07fe742e:  shl    $0x2,%edx
0x07fe7431:  or     %edx,%eax
0x07fe7433:  mov    %al,0x5(%ebx)
0x07fe7436:  movb   $0x0,0x6(%ebx)
0x07fe743a:  mov    0x4c(%esp),%al
0x07fe743e:  mov    %al,0x7(%ebx)
0x07fe7441:  add    $0x8,%ebx
0x07fe7444:  mov    0x4(%esi),%eax
0x07fe7447:  lea    -0x4(%eax),%esi
0x07fe744a:  mov    %edi,%ecx
0x07fe744c:  jmp    0x7fe7361

----------------
IN: 
0x07fe7373:  xor    %edx,%edx
0x07fe7375:  xor    %ecx,%ecx
0x07fe7377:  mov    $0xf4901,%eax
0x07fe737c:  call   0x7fe081e

----------------
IN: 
0x07fe7381:  mov    %eax,%edi
0x07fe7383:  xor    %esi,%esi
0x07fe7385:  jmp    0x7fe747e

----------------
IN: 
0x07fe747e:  mov    $0x8,%ecx
0x07fe7483:  xor    %edx,%edx
0x07fe7485:  mov    %ebx,%eax
0x07fe7487:  call   0xf0d7a

----------------
IN: 
0x07fe748c:  mov    $0xe20,%eax
0x07fe7491:  bt     %esi,%eax
0x07fe7494:  jb     0x7fe7478

----------------
IN: 
0x07fe7496:  jmp    0x7fe7451

----------------
IN: 
0x07fe7451:  movb   $0x3,(%ebx)
0x07fe7454:  movb   $0x0,0x1(%ebx)
0x07fe7458:  movw   $0x0,0x2(%ebx)
0x07fe745e:  mov    0x38(%esp),%al
0x07fe7462:  mov    %al,0x4(%ebx)
0x07fe7465:  mov    %esi,%eax
0x07fe7467:  mov    %al,0x5(%ebx)
0x07fe746a:  movb   $0x0,0x6(%ebx)
0x07fe746e:  mov    %al,0x7(%ebx)
0x07fe7471:  test   %edi,%edi
0x07fe7473:  jne    0x7fe7498

----------------
IN: 
0x07fe7498:  test   %esi,%esi
0x07fe749a:  jne    0x7fe74a2

----------------
IN: 
0x07fe749c:  movb   $0x2,0x7(%ebx)
0x07fe74a0:  jmp    0x7fe7475

----------------
IN: 
0x07fe7475:  add    $0x8,%ebx
0x07fe7478:  inc    %esi
0x07fe7479:  cmp    $0x10,%esi
0x07fe747c:  je     0x7fe74ac

----------------
IN: 
0x07fe74a2:  cmp    $0x2,%esi
0x07fe74a5:  jne    0x7fe7475

----------------
IN: 
0x07fe74a7:  sub    $0x8,%ebx
0x07fe74aa:  jmp    0x7fe7475

----------------
IN: 
0x07fe7478:  inc    %esi
0x07fe7479:  cmp    $0x10,%esi
0x07fe747c:  je     0x7fe74ac

----------------
IN: 
0x07fe74ac:  movb   $0x4,(%ebx)
0x07fe74af:  movb   $0x3,0x1(%ebx)
0x07fe74b3:  movw   $0x0,0x2(%ebx)
0x07fe74b9:  mov    0x30(%esp),%edi
0x07fe74bd:  mov    %edi,%eax
0x07fe74bf:  mov    %al,0x4(%ebx)
0x07fe74c2:  movb   $0x0,0x5(%ebx)
0x07fe74c6:  movb   $0x0,0x6(%ebx)
0x07fe74ca:  movb   $0x0,0x7(%ebx)
0x07fe74ce:  movb   $0x4,0x8(%ebx)
0x07fe74d2:  movb   $0x1,0x9(%ebx)
0x07fe74d6:  movw   $0x0,0xa(%ebx)
0x07fe74dc:  mov    %al,0xc(%ebx)
0x07fe74df:  movb   $0x0,0xd(%ebx)
0x07fe74e3:  movb   $0xff,0xe(%ebx)
0x07fe74e7:  movb   $0x1,0xf(%ebx)
0x07fe74eb:  add    $0x10,%ebx
0x07fe74ee:  mov    %ebx,%eax
0x07fe74f0:  sub    %ebp,%eax
0x07fe74f2:  mov    %eax,%edi
0x07fe74f4:  mov    %eax,0x20(%esp)
0x07fe74f8:  sub    0x44(%esp),%ebx
0x07fe74fc:  sar    $0x3,%ebx
0x07fe74ff:  add    0x40(%esp),%ebx
0x07fe7503:  mov    %bx,0x22(%ebp)
0x07fe7507:  mov    %ax,0x4(%ebp)
0x07fe750b:  mov    %edi,%edx
0x07fe750d:  mov    %ebp,%eax
0x07fe750f:  call   0xf10c1

----------------
IN: 
0x07fe7514:  sub    %al,0x7(%ebp)
0x07fe7517:  mov    %edi,%eax
0x07fe7519:  call   0x7fdf657

----------------
IN: 
0x07fdf657:  push   %edx
0x07fdf658:  movl   $0x10,(%esp)
0x07fdf65f:  mov    %eax,%ecx
0x07fdf661:  or     $0xffffffff,%edx
0x07fdf664:  mov    $0x7fefea7,%eax
0x07fdf669:  call   0x7fdf52c

----------------
IN: 
0x07fdf66e:  pop    %ecx
0x07fdf66f:  ret    

----------------
IN: 
0x07fe751e:  mov    %eax,0x18(%esp)
0x07fe7522:  mov    $0x10,%eax
0x07fe7527:  call   0x7fdf657

----------------
IN: 
0x07fe752c:  mov    %eax,%ebx
0x07fe752e:  test   %eax,%eax
0x07fe7530:  je     0x7fe7539

----------------
IN: 
0x07fe7532:  cmpl   $0x0,0x18(%esp)
0x07fe7537:  jne    0x7fe7561

----------------
IN: 
0x07fe7561:  mov    0x18(%esp),%edi
0x07fe7565:  mov    %ebp,%esi
0x07fe7567:  mov    0x20(%esp),%ecx
0x07fe756b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe756b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe756d:  mov    %ebp,%eax
0x07fe756f:  call   0x7fdf6b3

----------------
IN: 
0x07fe7574:  mov    $0x10,%ecx
0x07fe7579:  xor    %edx,%edx
0x07fe757b:  mov    %ebx,%eax
0x07fe757d:  call   0xf0d7a

----------------
IN: 
0x07fe7582:  movl   $0x5f504d5f,(%ebx)
0x07fe7588:  mov    0x18(%esp),%edi
0x07fe758c:  mov    %edi,0x4(%ebx)
0x07fe758f:  movb   $0x1,0x8(%ebx)
0x07fe7593:  movb   $0x4,0x9(%ebx)
0x07fe7597:  mov    $0x10,%edx
0x07fe759c:  mov    %ebx,%eax
0x07fe759e:  call   0xf10c1

----------------
IN: 
0x07fe75a3:  sub    %al,0xa(%ebx)
0x07fe75a6:  mov    0x20(%esp),%ecx
0x07fe75aa:  mov    %ecx,0xc(%esp)
0x07fe75ae:  mov    %edi,0x8(%esp)
0x07fe75b2:  mov    %ebx,0x4(%esp)
0x07fe75b6:  movl   $0xf4c98,(%esp)
0x07fe75bd:  call   0xf1787

----------------
IN: 
0x07fe75c2:  mov    $0x8000,%eax
0x07fe75c7:  call   0x7fdf625

----------------
IN: 
0x07fe75cc:  mov    %eax,0x28(%esp)
0x07fe75d0:  test   %eax,%eax
0x07fe75d2:  jne    0x7fe75e7

----------------
IN: 
0x07fe75e7:  movl   $0x0,0x68(%esp)
0x07fe75ef:  movl   $0x0,0x6c(%esp)
0x07fe75f7:  mov    0x28(%esp),%eax
0x07fe75fb:  mov    %eax,0x78(%esp)
0x07fe75ff:  add    $0x7ffc,%eax
0x07fe7604:  mov    %eax,0x18(%esp)
0x07fe7608:  mov    %eax,0x4(%esp)
0x07fe760c:  lea    0x6c(%esp),%eax
0x07fe7610:  mov    %eax,(%esp)
0x07fe7613:  lea    0x68(%esp),%ecx
0x07fe7617:  lea    0x78(%esp),%edx
0x07fe761b:  xor    %eax,%eax
0x07fe761d:  call   0x7fe49bb

----------------
IN: 
0x07fe49bb:  push   %ebp
0x07fe49bc:  mov    %esp,%ebp
0x07fe49be:  push   %edi
0x07fe49bf:  push   %esi
0x07fe49c0:  push   %ebx
0x07fe49c1:  and    $0xfffffff8,%esp
0x07fe49c4:  sub    $0xa4,%esp
0x07fe49ca:  mov    %edx,%ebx
0x07fe49cc:  mov    %ecx,0x14(%esp)
0x07fe49d0:  mov    (%edx),%edi
0x07fe49d2:  mov    %edi,0x1c(%esp)
0x07fe49d6:  mov    %eax,%edi
0x07fe49d8:  sar    $0x6,%edi
0x07fe49db:  mov    %edi,0x20(%esp)
0x07fe49df:  andl   $0x3,0x20(%esp)
0x07fe49e4:  mov    %eax,%edx
0x07fe49e6:  and    $0x3f,%edx
0x07fe49e9:  mov    %edx,0x18(%esp)
0x07fe49ed:  mov    0x20(%esp),%edi
0x07fe49f1:  mov    0x7fefee7(,%edi,8),%esi
0x07fe49f8:  mov    0x7fefeeb(,%edi,8),%edi
0x07fe49ff:  mov    %dl,%cl
0x07fe4a01:  shrd   %cl,%edi,%esi
0x07fe4a04:  shr    %cl,%edi
0x07fe4a06:  test   $0x20,%cl
0x07fe4a09:  je     0x7fe4a0f

----------------
IN: 
0x07fe4a0f:  and    $0x1,%esi
0x07fe4a12:  test   %esi,%esi
0x07fe4a14:  jne    0x7fe4af7

----------------
IN: 
0x07fe4a1a:  cmp    $0x7f,%eax
0x07fe4a1d:  jne    0x7fe4a26

----------------
IN: 
0x07fe4a26:  mov    %eax,0xc(%esp)
0x07fe4a2a:  movl   $0xf46e8,0x8(%esp)
0x07fe4a32:  movl   $0x80,0x4(%esp)
0x07fe4a3a:  lea    0x24(%esp),%edi
0x07fe4a3e:  mov    %edi,(%esp)
0x07fe4a41:  call   0x7fe46d2

----------------
IN: 
0x07fe4a46:  xor    %esi,%esi
0x07fe4a48:  mov    %edi,0x10(%esp)
0x07fe4a4c:  mov    %esi,%edx
0x07fe4a4e:  mov    0x10(%esp),%eax
0x07fe4a52:  call   0x7fdf7be

----------------
IN: 
0x07fdf7be:  push   %ebp
0x07fdf7bf:  push   %edi
0x07fdf7c0:  push   %esi
0x07fdf7c1:  push   %ebx
0x07fdf7c2:  mov    %eax,%esi
0x07fdf7c4:  mov    %edx,%edi
0x07fdf7c6:  call   0x7fdf1a5

----------------
IN: 
0x07fdf7cb:  mov    %eax,%ebp
0x07fdf7cd:  mov    0x7fefe83,%ebx
0x07fdf7d3:  test   %edi,%edi
0x07fdf7d5:  je     0x7fdf7ed

----------------
IN: 
0x07fdf7ed:  test   %ebx,%ebx
0x07fdf7ef:  jne    0x7fdf7db

----------------
IN: 
0x07fdf7db:  lea    0x4(%ebx),%edx
0x07fdf7de:  mov    %ebp,%ecx
0x07fdf7e0:  mov    %esi,%eax
0x07fdf7e2:  call   0x7fdf1b4

----------------
IN: 
0x07fdf7e7:  test   %eax,%eax
0x07fdf7e9:  je     0x7fdf7f5

----------------
IN: 
0x07fdf7eb:  mov    (%ebx),%ebx
0x07fdf7ed:  test   %ebx,%ebx
0x07fdf7ef:  jne    0x7fdf7db

----------------
IN: 
0x07fdf7f1:  xor    %eax,%eax
0x07fdf7f3:  jmp    0x7fdf7f7

----------------
IN: 
0x07fdf7f7:  pop    %ebx
0x07fdf7f8:  pop    %esi
0x07fdf7f9:  pop    %edi
0x07fdf7fa:  pop    %ebp
0x07fdf7fb:  ret    

----------------
IN: 
0x07fe4a57:  mov    %eax,%esi
0x07fe4a59:  test   %eax,%eax
0x07fe4a5b:  je     0x7fe4ac4

----------------
IN: 
0x07fe4ac4:  mov    0x1c(%esp),%eax
0x07fe4ac8:  cmp    (%ebx),%eax
0x07fe4aca:  je     0x7fe4a1f

----------------
IN: 
0x07fe4a1f:  xor    %eax,%eax
0x07fe4a21:  jmp    0x7fe4afc

----------------
IN: 
0x07fe4afc:  lea    -0xc(%ebp),%esp
0x07fe4aff:  pop    %ebx
0x07fe4b00:  pop    %esi
0x07fe4b01:  pop    %edi
0x07fe4b02:  pop    %ebp
0x07fe4b03:  ret    

----------------
IN: 
0x07fe7622:  test   %eax,%eax
0x07fe7624:  jne    0x7fe7780

----------------
IN: 
0x07fe762a:  mov    0x78(%esp),%ebx
0x07fe762e:  lea    0x18(%ebx),%esi
0x07fe7631:  movb   $0x0,(%ebx)
0x07fe7634:  movb   $0x18,0x1(%ebx)
0x07fe7638:  movw   $0x0,0x2(%ebx)
0x07fe763e:  mov    %esi,%ecx
0x07fe7640:  mov    $0x4,%edx
0x07fe7645:  call   0x7fe495f

----------------
IN: 
0x07fe495f:  push   %esi
0x07fe4960:  push   %ebx
0x07fe4961:  sub    $0x94,%esp
0x07fe4967:  mov    %ecx,%esi
0x07fe4969:  mov    %edx,0x10(%esp)
0x07fe496d:  mov    %eax,0xc(%esp)
0x07fe4971:  movl   $0xf46d6,0x8(%esp)
0x07fe4979:  movl   $0x80,0x4(%esp)
0x07fe4981:  lea    0x14(%esp),%ebx
0x07fe4985:  mov    %ebx,(%esp)
0x07fe4988:  call   0x7fe46d2

----------------
IN: 
0x07fe498d:  mov    %ebx,%eax
0x07fe498f:  call   0x7fe07e9

----------------
IN: 
0x07fe4994:  mov    %eax,%ebx
0x07fe4996:  test   %eax,%eax
0x07fe4998:  je     0x7fe49b0

----------------
IN: 
0x07fe49b0:  xor    %eax,%eax
0x07fe49b2:  add    $0x94,%esp
0x07fe49b8:  pop    %ebx
0x07fe49b9:  pop    %esi
0x07fe49ba:  ret    

----------------
IN: 
0x07fe764a:  test   %eax,%eax
0x07fe764c:  je     0x7fe7653

----------------
IN: 
0x07fe7653:  movl   $0x68636f42,0x18(%ebx)
0x07fe765a:  movw   $0x73,0x4(%esi)
0x07fe7660:  lea    0x1e(%ebx),%ebp
0x07fe7663:  movb   $0x1,0x4(%ebx)
0x07fe7667:  mov    %ebp,%ecx
0x07fe7669:  mov    $0x5,%edx
0x07fe766e:  xor    %eax,%eax
0x07fe7670:  call   0x7fe495f

----------------
IN: 
0x07fe7675:  test   %eax,%eax
0x07fe7677:  je     0x7fe767d

----------------
IN: 
0x07fe767d:  movl   $0x68636f42,0x0(%ebp)
0x07fe7684:  movw   $0x73,0x4(%ebp)
0x07fe768a:  add    $0x6,%ebp
0x07fe768d:  movb   $0x2,0x5(%ebx)
0x07fe7691:  movw   $0xe800,0x6(%ebx)
0x07fe7697:  mov    %ebp,%ecx
0x07fe7699:  mov    $0x8,%edx
0x07fe769e:  xor    %eax,%eax
0x07fe76a0:  call   0x7fe495f

----------------
IN: 
0x07fe76a5:  test   %eax,%eax
0x07fe76a7:  je     0x7fe76ad

----------------
IN: 
0x07fe76ad:  mov    $0xf4cc4,%esi
0x07fe76b2:  mov    $0xb,%ecx
0x07fe76b7:  mov    %ebp,%edi
0x07fe76b9:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe76b9:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe76bb:  mov    %edi,%ebp
0x07fe76bd:  movb   $0x3,0x8(%ebx)
0x07fe76c1:  movb   $0x0,0x9(%ebx)
0x07fe76c5:  lea    0xa(%ebx),%esi
0x07fe76c8:  mov    %esi,%ecx
0x07fe76ca:  mov    $0xa,%edx
0x07fe76cf:  xor    %eax,%eax
0x07fe76d1:  call   0x7fe495f

----------------
IN: 
0x07fe76d6:  test   %eax,%eax
0x07fe76d8:  jne    0x7fe76ec

----------------
IN: 
0x07fe76da:  mov    $0x8,%ecx
0x07fe76df:  xor    %edx,%edx
0x07fe76e1:  mov    %esi,%eax
0x07fe76e3:  call   0xf0d7a

----------------
IN: 
0x07fe76e8:  movb   $0x8,0xa(%ebx)
0x07fe76ec:  lea    0x12(%ebx),%ecx
0x07fe76ef:  mov    $0x12,%edx
0x07fe76f4:  xor    %eax,%eax
0x07fe76f6:  call   0x7fe495f

----------------
IN: 
0x07fe76fb:  test   %eax,%eax
0x07fe76fd:  jne    0x7fe7707

----------------
IN: 
0x07fe76ff:  movb   $0x0,0x12(%ebx)
0x07fe7703:  movb   $0x4,0x13(%ebx)
0x07fe7707:  lea    0x14(%ebx),%ecx
0x07fe770a:  mov    $0x14,%edx
0x07fe770f:  xor    %eax,%eax
0x07fe7711:  call   0x7fe495f

----------------
IN: 
0x07fe7716:  test   %eax,%eax
0x07fe7718:  jne    0x7fe771e

----------------
IN: 
0x07fe771a:  movb   $0x1,0x14(%ebx)
0x07fe771e:  lea    0x15(%ebx),%ecx
0x07fe7721:  mov    $0x15,%edx
0x07fe7726:  xor    %eax,%eax
0x07fe7728:  call   0x7fe495f

----------------
IN: 
0x07fe772d:  test   %eax,%eax
0x07fe772f:  jne    0x7fe7735

----------------
IN: 
0x07fe7731:  movb   $0x0,0x15(%ebx)
0x07fe7735:  lea    0x16(%ebx),%ecx
0x07fe7738:  mov    $0x16,%edx
0x07fe773d:  xor    %eax,%eax
0x07fe773f:  call   0x7fe495f

----------------
IN: 
0x07fe7744:  test   %eax,%eax
0x07fe7746:  jne    0x7fe774c

----------------
IN: 
0x07fe7748:  movb   $0xff,0x16(%ebx)
0x07fe774c:  lea    0x17(%ebx),%ecx
0x07fe774f:  mov    $0x17,%edx
0x07fe7754:  xor    %eax,%eax
0x07fe7756:  call   0x7fe495f

----------------
IN: 
0x07fe775b:  test   %eax,%eax
0x07fe775d:  jne    0x7fe7763

----------------
IN: 
0x07fe775f:  movb   $0xff,0x17(%ebx)
0x07fe7763:  movb   $0x0,0x0(%ebp)
0x07fe7767:  inc    %ebp
0x07fe7768:  incl   0x68(%esp)
0x07fe776c:  mov    %ebp,%eax
0x07fe776e:  sub    0x78(%esp),%eax
0x07fe7772:  cmp    0x6c(%esp),%eax
0x07fe7776:  jbe    0x7fe777c

----------------
IN: 
0x07fe7778:  mov    %eax,0x6c(%esp)
0x07fe777c:  mov    %ebp,0x78(%esp)
0x07fe7780:  mov    0x18(%esp),%eax
0x07fe7784:  mov    %eax,0x4(%esp)
0x07fe7788:  lea    0x6c(%esp),%eax
0x07fe778c:  mov    %eax,(%esp)
0x07fe778f:  lea    0x68(%esp),%ecx
0x07fe7793:  lea    0x78(%esp),%edx
0x07fe7797:  mov    $0x1,%eax
0x07fe779c:  call   0x7fe49bb

----------------
IN: 
0x07fe77a1:  test   %eax,%eax
0x07fe77a3:  jne    0x7fe7903

----------------
IN: 
0x07fe77a9:  mov    0x78(%esp),%ebx
0x07fe77ad:  lea    0x1b(%ebx),%esi
0x07fe77b0:  movb   $0x1,(%ebx)
0x07fe77b3:  movb   $0x1b,0x1(%ebx)
0x07fe77b7:  movw   $0x100,0x2(%ebx)
0x07fe77bd:  mov    %esi,%ecx
0x07fe77bf:  mov    $0x4,%edx
0x07fe77c4:  mov    $0x1,%al
0x07fe77c6:  call   0x7fe495f

----------------
IN: 
0x07fe499a:  mov    0x84(%eax),%ecx
0x07fe49a0:  mov    %esi,%edx
0x07fe49a2:  call   *0x88(%ebx)

----------------
IN: 
0x07fe075d:  in     (%dx),%al
0x07fe075e:  jmp    0x7fe0757

----------------
IN: 
0x07fe0757:  dec    %esi
0x07fe0758:  cmp    $0xffffffff,%esi
0x07fe075b:  je     0x7fe0760

----------------
IN: 
0x07fe49a8:  mov    0x84(%ebx),%eax
0x07fe49ae:  jmp    0x7fe49b2

----------------
IN: 
0x07fe49b2:  add    $0x94,%esp
0x07fe49b8:  pop    %ebx
0x07fe49b9:  pop    %esi
0x07fe49ba:  ret    

----------------
IN: 
0x07fe77cb:  test   %eax,%eax
0x07fe77cd:  je     0x7fe77d3

----------------
IN: 
0x07fe77cf:  add    %eax,%esi
0x07fe77d1:  jmp    0x7fe77e3

----------------
IN: 
0x07fe77e3:  movb   $0x1,0x4(%ebx)
0x07fe77e7:  mov    %esi,%ecx
0x07fe77e9:  mov    $0x5,%edx
0x07fe77ee:  mov    $0x1,%eax
0x07fe77f3:  call   0x7fe495f

----------------
IN: 
0x07fe77f8:  test   %eax,%eax
0x07fe77fa:  je     0x7fe7800

----------------
IN: 
0x07fe77fc:  add    %eax,%esi
0x07fe77fe:  jmp    0x7fe780f

----------------
IN: 
0x07fe780f:  movb   $0x2,0x5(%ebx)
0x07fe7813:  mov    %esi,%ecx
0x07fe7815:  mov    $0x6,%edx
0x07fe781a:  mov    $0x1,%eax
0x07fe781f:  call   0x7fe495f

----------------
IN: 
0x07fe7824:  test   %eax,%eax
0x07fe7826:  je     0x7fe7835

----------------
IN: 
0x07fe7828:  add    %eax,%esi
0x07fe782a:  movb   $0x3,0x6(%ebx)
0x07fe782e:  mov    $0x3,%edi
0x07fe7833:  jmp    0x7fe783e

----------------
IN: 
0x07fe783e:  mov    %esi,%ecx
0x07fe7840:  mov    $0x7,%edx
0x07fe7845:  mov    $0x1,%eax
0x07fe784a:  call   0x7fe495f

----------------
IN: 
0x07fe784f:  test   %eax,%eax
0x07fe7851:  je     0x7fe785d

----------------
IN: 
0x07fe785d:  movb   $0x0,0x7(%ebx)
0x07fe7861:  lea    0x8(%ebx),%ebp
0x07fe7864:  mov    %ebp,%ecx
0x07fe7866:  mov    $0x8,%edx
0x07fe786b:  mov    $0x1,%eax
0x07fe7870:  call   0x7fe495f

----------------
IN: 
0x07fe7875:  test   %eax,%eax
0x07fe7877:  jne    0x7fe7887

----------------
IN: 
0x07fe7879:  mov    $0x10,%ecx
0x07fe787e:  xor    %edx,%edx
0x07fe7880:  mov    %ebp,%eax
0x07fe7882:  call   0xf0d7a

----------------
IN: 
0x07fe7887:  lea    0x18(%ebx),%ecx
0x07fe788a:  mov    $0x18,%edx
0x07fe788f:  mov    $0x1,%eax
0x07fe7894:  call   0x7fe495f

----------------
IN: 
0x07fe7899:  test   %eax,%eax
0x07fe789b:  jne    0x7fe78a1

----------------
IN: 
0x07fe789d:  movb   $0x6,0x18(%ebx)
0x07fe78a1:  mov    %esi,%ecx
0x07fe78a3:  mov    $0x19,%edx
0x07fe78a8:  mov    $0x1,%eax
0x07fe78ad:  call   0x7fe495f

----------------
IN: 
0x07fe78b2:  test   %eax,%eax
0x07fe78b4:  je     0x7fe78c0

----------------
IN: 
0x07fe78c0:  movb   $0x0,0x19(%ebx)
0x07fe78c4:  mov    %esi,%ecx
0x07fe78c6:  mov    $0x1a,%edx
0x07fe78cb:  mov    $0x1,%eax
0x07fe78d0:  call   0x7fe495f

----------------
IN: 
0x07fe78d5:  test   %eax,%eax
0x07fe78d7:  je     0x7fe78e3

----------------
IN: 
0x07fe78e3:  movb   $0x0,0x1a(%ebx)
0x07fe78e7:  movb   $0x0,(%esi)
0x07fe78ea:  inc    %esi
0x07fe78eb:  incl   0x68(%esp)
0x07fe78ef:  mov    %esi,%eax
0x07fe78f1:  sub    0x78(%esp),%eax
0x07fe78f5:  cmp    0x6c(%esp),%eax
0x07fe78f9:  jbe    0x7fe78ff

----------------
IN: 
0x07fe78fb:  mov    %eax,0x6c(%esp)
0x07fe78ff:  mov    %esi,0x78(%esp)
0x07fe7903:  mov    0x18(%esp),%eax
0x07fe7907:  mov    %eax,0x4(%esp)
0x07fe790b:  lea    0x6c(%esp),%eax
0x07fe790f:  mov    %eax,(%esp)
0x07fe7912:  lea    0x68(%esp),%ecx
0x07fe7916:  lea    0x78(%esp),%edx
0x07fe791a:  mov    $0x3,%eax
0x07fe791f:  call   0x7fe49bb

----------------
IN: 
0x07fe7924:  test   %eax,%eax
0x07fe7926:  jne    0x7fe7ae4

----------------
IN: 
0x07fe792c:  mov    0x78(%esp),%ebx
0x07fe7930:  lea    0x14(%ebx),%esi
0x07fe7933:  movb   $0x3,(%ebx)
0x07fe7936:  movb   $0x14,0x1(%ebx)
0x07fe793a:  movw   $0x300,0x2(%ebx)
0x07fe7940:  mov    %esi,%ecx
0x07fe7942:  mov    $0x4,%edx
0x07fe7947:  mov    $0x3,%al
0x07fe7949:  call   0x7fe495f

----------------
IN: 
0x07fe794e:  test   %eax,%eax
0x07fe7950:  je     0x7fe7956

----------------
IN: 
0x07fe7956:  movl   $0x68636f42,0x14(%ebx)
0x07fe795d:  movw   $0x73,0x4(%esi)
0x07fe7963:  lea    0x1a(%ebx),%esi
0x07fe7966:  movb   $0x1,0x4(%ebx)
0x07fe796a:  lea    0x5(%ebx),%ecx
0x07fe796d:  mov    $0x5,%edx
0x07fe7972:  mov    $0x3,%eax
0x07fe7977:  call   0x7fe495f

----------------
IN: 
0x07fe797c:  test   %eax,%eax
0x07fe797e:  jne    0x7fe7984

----------------
IN: 
0x07fe7980:  movb   $0x1,0x5(%ebx)
0x07fe7984:  mov    %esi,%ecx
0x07fe7986:  mov    $0x6,%edx
0x07fe798b:  mov    $0x3,%eax
0x07fe7990:  call   0x7fe495f

----------------
IN: 
0x07fe7995:  test   %eax,%eax
0x07fe7997:  je     0x7fe79a6

----------------
IN: 
0x07fe79a6:  movb   $0x0,0x6(%ebx)
0x07fe79aa:  mov    $0x1,%edi
0x07fe79af:  mov    %esi,%ecx
0x07fe79b1:  mov    $0x7,%edx
0x07fe79b6:  mov    $0x3,%eax
0x07fe79bb:  call   0x7fe495f

----------------
IN: 
0x07fe79c0:  test   %eax,%eax
0x07fe79c2:  je     0x7fe79ce

----------------
IN: 
0x07fe79ce:  movb   $0x0,0x7(%ebx)
0x07fe79d2:  mov    %esi,%ecx
0x07fe79d4:  mov    $0x8,%edx
0x07fe79d9:  mov    $0x3,%eax
0x07fe79de:  call   0x7fe495f

----------------
IN: 
0x07fe79e3:  test   %eax,%eax
0x07fe79e5:  je     0x7fe79f1

----------------
IN: 
0x07fe79f1:  movb   $0x0,0x8(%ebx)
0x07fe79f5:  lea    0x9(%ebx),%ecx
0x07fe79f8:  mov    $0x9,%edx
0x07fe79fd:  mov    $0x3,%eax
0x07fe7a02:  call   0x7fe495f

----------------
IN: 
0x07fe7a07:  test   %eax,%eax
0x07fe7a09:  jne    0x7fe7a0f

----------------
IN: 
0x07fe7a0b:  movb   $0x3,0x9(%ebx)
0x07fe7a0f:  lea    0xa(%ebx),%ecx
0x07fe7a12:  mov    $0xa,%edx
0x07fe7a17:  mov    $0x3,%eax
0x07fe7a1c:  call   0x7fe495f

----------------
IN: 
0x07fe7a21:  test   %eax,%eax
0x07fe7a23:  jne    0x7fe7a29

----------------
IN: 
0x07fe7a25:  movb   $0x3,0xa(%ebx)
0x07fe7a29:  lea    0xb(%ebx),%ecx
0x07fe7a2c:  mov    $0xb,%edx
0x07fe7a31:  mov    $0x3,%eax
0x07fe7a36:  call   0x7fe495f

----------------
IN: 
0x07fe7a3b:  test   %eax,%eax
0x07fe7a3d:  jne    0x7fe7a43

----------------
IN: 
0x07fe7a3f:  movb   $0x3,0xb(%ebx)
0x07fe7a43:  lea    0xc(%ebx),%ecx
0x07fe7a46:  mov    $0xc,%edx
0x07fe7a4b:  mov    $0x3,%eax
0x07fe7a50:  call   0x7fe495f

----------------
IN: 
0x07fe7a55:  test   %eax,%eax
0x07fe7a57:  jne    0x7fe7a5d

----------------
IN: 
0x07fe7a59:  movb   $0x2,0xc(%ebx)
0x07fe7a5d:  lea    0xd(%ebx),%ecx
0x07fe7a60:  mov    $0xd,%edx
0x07fe7a65:  mov    $0x3,%eax
0x07fe7a6a:  call   0x7fe495f

----------------
IN: 
0x07fe7a6f:  test   %eax,%eax
0x07fe7a71:  jne    0x7fe7a7a

----------------
IN: 
0x07fe7a73:  movl   $0x0,0xd(%ebx)
0x07fe7a7a:  lea    0x11(%ebx),%ecx
0x07fe7a7d:  mov    $0x11,%edx
0x07fe7a82:  mov    $0x3,%eax
0x07fe7a87:  call   0x7fe495f

----------------
IN: 
0x07fe7a8c:  test   %eax,%eax
0x07fe7a8e:  jne    0x7fe7a94

----------------
IN: 
0x07fe7a90:  movb   $0x0,0x11(%ebx)
0x07fe7a94:  lea    0x12(%ebx),%ecx
0x07fe7a97:  mov    $0x12,%edx
0x07fe7a9c:  mov    $0x3,%eax
0x07fe7aa1:  call   0x7fe495f

----------------
IN: 
0x07fe7aa6:  test   %eax,%eax
0x07fe7aa8:  jne    0x7fe7aae

----------------
IN: 
0x07fe7aaa:  movb   $0x0,0x12(%ebx)
0x07fe7aae:  lea    0x13(%ebx),%ecx
0x07fe7ab1:  mov    $0x13,%edx
0x07fe7ab6:  mov    $0x3,%eax
0x07fe7abb:  call   0x7fe495f

----------------
IN: 
0x07fe7ac0:  test   %eax,%eax
0x07fe7ac2:  jne    0x7fe7ac8

----------------
IN: 
0x07fe7ac4:  movb   $0x0,0x13(%ebx)
0x07fe7ac8:  movb   $0x0,(%esi)
0x07fe7acb:  inc    %esi
0x07fe7acc:  incl   0x68(%esp)
0x07fe7ad0:  mov    %esi,%eax
0x07fe7ad2:  sub    0x78(%esp),%eax
0x07fe7ad6:  cmp    0x6c(%esp),%eax
0x07fe7ada:  jbe    0x7fe7ae0

----------------
IN: 
0x07fe7ae0:  mov    %esi,0x78(%esp)
0x07fe7ae4:  mov    $0x1,%ebx
0x07fe7ae9:  cmp    0x7feff37,%ebx
0x07fe7aef:  ja     0x7fe7b3c

----------------
IN: 
0x07fe7af1:  mov    0x18(%esp),%eax
0x07fe7af5:  mov    %eax,0x4(%esp)
0x07fe7af9:  lea    0x6c(%esp),%eax
0x07fe7afd:  mov    %eax,(%esp)
0x07fe7b00:  lea    0x68(%esp),%ecx
0x07fe7b04:  lea    0x78(%esp),%edx
0x07fe7b08:  mov    $0x4,%eax
0x07fe7b0d:  call   0x7fe49bb

----------------
IN: 
0x07fe7b12:  test   %eax,%eax
0x07fe7b14:  jne    0x7fe7b39

----------------
IN: 
0x07fe7b16:  mov    %ebx,%edx
0x07fe7b18:  mov    0x78(%esp),%eax
0x07fe7b1c:  call   0x7fe4b04

----------------
IN: 
0x07fe4b04:  push   %ebp
0x07fe4b05:  push   %edi
0x07fe4b06:  push   %esi
0x07fe4b07:  push   %ebx
0x07fe4b08:  sub    $0x424,%esp
0x07fe4b0e:  mov    %eax,%ebx
0x07fe4b10:  mov    %edx,%esi
0x07fe4b12:  lea    0x20(%eax),%eax
0x07fe4b15:  mov    %eax,0x10(%esp)
0x07fe4b19:  movb   $0x4,(%ebx)
0x07fe4b1c:  movb   $0x20,0x1(%ebx)
0x07fe4b20:  lea    0x400(%edx),%eax
0x07fe4b26:  mov    %ax,0x2(%ebx)
0x07fe4b2a:  lea    0x24(%esp),%ebp
0x07fe4b2e:  mov    %ebp,%ecx
0x07fe4b30:  mov    $0x4,%edx
0x07fe4b35:  mov    $0x4,%eax
0x07fe4b3a:  call   0x7fe495f

----------------
IN: 
0x07fe4b3f:  mov    %esi,0xc(%esp)
0x07fe4b43:  test   %eax,%eax
0x07fe4b45:  je     0x7fe4b63

----------------
IN: 
0x07fe4b63:  movl   $0xf46f8,0x8(%esp)
0x07fe4b6b:  movl   $0x400,0x4(%esp)
0x07fe4b73:  mov    %ebp,(%esp)
0x07fe4b76:  call   0x7fe46d2

----------------
IN: 
0x07fe4b7b:  mov    %ebp,%eax
0x07fe4b7d:  call   0x7fdf1a5

----------------
IN: 
0x07fe4b82:  lea    0x1(%eax),%ecx
0x07fe4b85:  mov    0x10(%esp),%edi
0x07fe4b89:  mov    %ebp,%esi
0x07fe4b8b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe4b8b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe4b8d:  mov    %ebp,%eax
0x07fe4b8f:  call   0x7fdf1a5

----------------
IN: 
0x07fe4b94:  mov    0x10(%esp),%edi
0x07fe4b98:  lea    0x1(%edi,%eax,1),%ebp
0x07fe4b9c:  movb   $0x1,0x4(%ebx)
0x07fe4ba0:  lea    0x5(%ebx),%ecx
0x07fe4ba3:  mov    $0x5,%edx
0x07fe4ba8:  mov    $0x4,%eax
0x07fe4bad:  call   0x7fe495f

----------------
IN: 
0x07fe4bb2:  test   %eax,%eax
0x07fe4bb4:  jne    0x7fe4bba

----------------
IN: 
0x07fe4bb6:  movb   $0x3,0x5(%ebx)
0x07fe4bba:  lea    0x6(%ebx),%ecx
0x07fe4bbd:  mov    $0x6,%edx
0x07fe4bc2:  mov    $0x4,%eax
0x07fe4bc7:  call   0x7fe495f

----------------
IN: 
0x07fe4bcc:  test   %eax,%eax
0x07fe4bce:  jne    0x7fe4bd4

----------------
IN: 
0x07fe4bd0:  movb   $0x1,0x6(%ebx)
0x07fe4bd4:  mov    %ebp,%ecx
0x07fe4bd6:  mov    $0x7,%edx
0x07fe4bdb:  mov    $0x4,%eax
0x07fe4be0:  call   0x7fe495f

----------------
IN: 
0x07fe4be5:  test   %eax,%eax
0x07fe4be7:  je     0x7fe4bed

----------------
IN: 
0x07fe4bed:  movl   $0x68636f42,0x0(%ebp)
0x07fe4bf4:  movw   $0x73,0x4(%ebp)
0x07fe4bfa:  add    $0x6,%ebp
0x07fe4bfd:  movb   $0x2,0x7(%ebx)
0x07fe4c01:  lea    0x8(%ebx),%ecx
0x07fe4c04:  mov    $0x8,%edx
0x07fe4c09:  mov    $0x4,%eax
0x07fe4c0e:  call   0x7fe495f

----------------
IN: 
0x07fe4c13:  test   %eax,%eax
0x07fe4c15:  jne    0x7fe4c46

----------------
IN: 
0x07fe4c17:  lea    0x20(%esp),%eax
0x07fe4c1b:  mov    %eax,0x4(%esp)
0x07fe4c1f:  lea    0x1c(%esp),%eax
0x07fe4c23:  mov    %eax,(%esp)
0x07fe4c26:  lea    0x18(%esp),%ecx
0x07fe4c2a:  lea    0x14(%esp),%edx
0x07fe4c2e:  mov    $0x1,%eax
0x07fe4c33:  call   0xf0d85

----------------
IN: 
0x07fe4c38:  mov    0x14(%esp),%eax
0x07fe4c3c:  mov    %eax,0x8(%ebx)
0x07fe4c3f:  mov    0x20(%esp),%eax
0x07fe4c43:  mov    %eax,0xc(%ebx)
0x07fe4c46:  mov    %ebp,%ecx
0x07fe4c48:  mov    $0x10,%edx
0x07fe4c4d:  mov    $0x4,%eax
0x07fe4c52:  call   0x7fe495f

----------------
IN: 
0x07fe4c57:  test   %eax,%eax
0x07fe4c59:  je     0x7fe4c63

----------------
IN: 
0x07fe4c63:  movb   $0x0,0x10(%ebx)
0x07fe4c67:  lea    0x11(%ebx),%ecx
0x07fe4c6a:  mov    $0x11,%edx
0x07fe4c6f:  mov    $0x4,%eax
0x07fe4c74:  call   0x7fe495f

----------------
IN: 
0x07fe4c79:  test   %eax,%eax
0x07fe4c7b:  jne    0x7fe4c81

----------------
IN: 
0x07fe4c7d:  movb   $0x0,0x11(%ebx)
0x07fe4c81:  lea    0x12(%ebx),%ecx
0x07fe4c84:  mov    $0x12,%edx
0x07fe4c89:  mov    $0x4,%eax
0x07fe4c8e:  call   0x7fe495f

----------------
IN: 
0x07fe4c93:  test   %eax,%eax
0x07fe4c95:  jne    0x7fe4c9d

----------------
IN: 
0x07fe4c97:  movw   $0x0,0x12(%ebx)
0x07fe4c9d:  lea    0x14(%ebx),%ecx
0x07fe4ca0:  mov    $0x14,%edx
0x07fe4ca5:  mov    $0x4,%eax
0x07fe4caa:  call   0x7fe495f

----------------
IN: 
0x07fe4caf:  test   %eax,%eax
0x07fe4cb1:  jne    0x7fe4cb9

----------------
IN: 
0x07fe4cb3:  movw   $0x7d0,0x14(%ebx)
0x07fe4cb9:  lea    0x16(%ebx),%ecx
0x07fe4cbc:  mov    $0x16,%edx
0x07fe4cc1:  mov    $0x4,%eax
0x07fe4cc6:  call   0x7fe495f

----------------
IN: 
0x07fe4ccb:  test   %eax,%eax
0x07fe4ccd:  jne    0x7fe4cd5

----------------
IN: 
0x07fe4ccf:  movw   $0x7d0,0x16(%ebx)
0x07fe4cd5:  lea    0x18(%ebx),%ecx
0x07fe4cd8:  mov    $0x18,%edx
0x07fe4cdd:  mov    $0x4,%eax
0x07fe4ce2:  call   0x7fe495f

----------------
IN: 
0x07fe4ce7:  test   %eax,%eax
0x07fe4ce9:  jne    0x7fe4cef

----------------
IN: 
0x07fe4ceb:  movb   $0x41,0x18(%ebx)
0x07fe4cef:  lea    0x19(%ebx),%ecx
0x07fe4cf2:  mov    $0x19,%edx
0x07fe4cf7:  mov    $0x4,%eax
0x07fe4cfc:  call   0x7fe495f

----------------
IN: 
0x07fe4d01:  test   %eax,%eax
0x07fe4d03:  jne    0x7fe4d09

----------------
IN: 
0x07fe4d05:  movb   $0x1,0x19(%ebx)
0x07fe4d09:  movw   $0xffff,0x1a(%ebx)
0x07fe4d0f:  movw   $0xffff,0x1c(%ebx)
0x07fe4d15:  movw   $0xffff,0x1e(%ebx)
0x07fe4d1b:  movb   $0x0,0x0(%ebp)
0x07fe4d1f:  lea    0x1(%ebp),%eax
0x07fe4d22:  add    $0x424,%esp
0x07fe4d28:  pop    %ebx
0x07fe4d29:  pop    %esi
0x07fe4d2a:  pop    %edi
0x07fe4d2b:  pop    %ebp
0x07fe4d2c:  ret    

----------------
IN: 
0x07fe7b21:  incl   0x68(%esp)
0x07fe7b25:  mov    %eax,%edx
0x07fe7b27:  sub    0x78(%esp),%edx
0x07fe7b2b:  cmp    0x6c(%esp),%edx
0x07fe7b2f:  jbe    0x7fe7b35

----------------
IN: 
0x07fe7b35:  mov    %eax,0x78(%esp)
0x07fe7b39:  inc    %ebx
0x07fe7b3a:  jmp    0x7fe7ae9

----------------
IN: 
0x07fe7ae9:  cmp    0x7feff37,%ebx
0x07fe7aef:  ja     0x7fe7b3c

----------------
IN: 
0x07fe7b3c:  mov    0x7feff1f,%esi
0x07fe7b42:  xor    %edi,%edi
0x07fe7b44:  add    0x7feff17,%esi
0x07fe7b4a:  adc    0x7feff1b,%edi
0x07fe7b50:  shrd   $0x14,%edi,%esi
0x07fe7b54:  shr    $0x14,%edi
0x07fe7b57:  mov    %esi,%ebp
0x07fe7b59:  lea    0x3fff(%esi),%eax
0x07fe7b5f:  mov    %eax,0x20(%esp)
0x07fe7b63:  sarl   $0xe,0x20(%esp)
0x07fe7b68:  mov    0x18(%esp),%eax
0x07fe7b6c:  mov    %eax,0x4(%esp)
0x07fe7b70:  lea    0x6c(%esp),%eax
0x07fe7b74:  mov    %eax,(%esp)
0x07fe7b77:  lea    0x68(%esp),%ecx
0x07fe7b7b:  lea    0x78(%esp),%edx
0x07fe7b7f:  mov    $0x10,%eax
0x07fe7b84:  call   0x7fe49bb

----------------
IN: 
0x07fe7b89:  test   %eax,%eax
0x07fe7b8b:  jne    0x7fe7c31

----------------
IN: 
0x07fe7b91:  mov    0x78(%esp),%ebx
0x07fe7b95:  movb   $0x10,(%ebx)
0x07fe7b98:  movb   $0xf,0x1(%ebx)
0x07fe7b9c:  movw   $0x1000,0x2(%ebx)
0x07fe7ba2:  lea    0x4(%ebx),%ecx
0x07fe7ba5:  mov    $0x4,%edx
0x07fe7baa:  mov    $0x10,%al
0x07fe7bac:  call   0x7fe495f

----------------
IN: 
0x07fe7bb1:  test   %eax,%eax
0x07fe7bb3:  jne    0x7fe7bb9

----------------
IN: 
0x07fe7bb5:  movb   $0x1,0x4(%ebx)
0x07fe7bb9:  lea    0x5(%ebx),%ecx
0x07fe7bbc:  mov    $0x5,%edx
0x07fe7bc1:  mov    $0x10,%eax
0x07fe7bc6:  call   0x7fe495f

----------------
IN: 
0x07fe7bcb:  test   %eax,%eax
0x07fe7bcd:  jne    0x7fe7bd3

----------------
IN: 
0x07fe7bcf:  movb   $0x3,0x5(%ebx)
0x07fe7bd3:  lea    0x6(%ebx),%ecx
0x07fe7bd6:  mov    $0x6,%edx
0x07fe7bdb:  mov    $0x10,%eax
0x07fe7be0:  call   0x7fe495f

----------------
IN: 
0x07fe7be5:  test   %eax,%eax
0x07fe7be7:  jne    0x7fe7bed

----------------
IN: 
0x07fe7be9:  movb   $0x6,0x6(%ebx)
0x07fe7bed:  mov    $0x80000000,%eax
0x07fe7bf2:  cmp    $0x1fffff,%esi
0x07fe7bf8:  ja     0x7fe7bff

----------------
IN: 
0x07fe7bfa:  mov    %esi,%eax
0x07fe7bfc:  shl    $0xa,%eax
0x07fe7bff:  mov    %eax,0x7(%ebx)
0x07fe7c02:  movw   $0xfffe,0xb(%ebx)
0x07fe7c08:  mov    0x20(%esp),%eax
0x07fe7c0c:  mov    %ax,0xd(%ebx)
0x07fe7c10:  movw   $0x0,0xf(%ebx)
0x07fe7c16:  add    $0x11,%ebx
0x07fe7c19:  incl   0x68(%esp)
0x07fe7c1d:  mov    %ebx,%eax
0x07fe7c1f:  sub    0x78(%esp),%eax
0x07fe7c23:  cmp    0x6c(%esp),%eax
0x07fe7c27:  jbe    0x7fe7c2d

----------------
IN: 
0x07fe7c2d:  mov    %ebx,0x78(%esp)
0x07fe7c31:  xor    %ebx,%ebx
0x07fe7c33:  lea    -0x1(%ebp),%esi
0x07fe7c36:  and    $0x3fff,%esi
0x07fe7c3c:  cmp    0x20(%esp),%ebx
0x07fe7c40:  lea    0x6c(%esp),%eax
0x07fe7c44:  jge    0x7fe7ca2

----------------
IN: 
0x07fe7c46:  mov    0x20(%esp),%edi
0x07fe7c4a:  lea    -0x1(%edi),%edx
0x07fe7c4d:  mov    $0x4000,%edi
0x07fe7c52:  cmp    %edx,%ebx
0x07fe7c54:  jne    0x7fe7c59

----------------
IN: 
0x07fe7c56:  lea    0x1(%esi),%edi
0x07fe7c59:  mov    0x18(%esp),%ecx
0x07fe7c5d:  mov    %ecx,0x4(%esp)
0x07fe7c61:  mov    %eax,(%esp)
0x07fe7c64:  lea    0x68(%esp),%ecx
0x07fe7c68:  lea    0x78(%esp),%edx
0x07fe7c6c:  mov    $0x11,%eax
0x07fe7c71:  call   0x7fe49bb

----------------
IN: 
0x07fe7c76:  test   %eax,%eax
0x07fe7c78:  jne    0x7fe7c9f

----------------
IN: 
0x07fe7c7a:  mov    %ebx,%ecx
0x07fe7c7c:  mov    %edi,%edx
0x07fe7c7e:  mov    0x78(%esp),%eax
0x07fe7c82:  call   0x7fe4d2d

----------------
IN: 
0x07fe4d2d:  push   %ebp
0x07fe4d2e:  push   %edi
0x07fe4d2f:  push   %esi
0x07fe4d30:  push   %ebx
0x07fe4d31:  sub    $0x414,%esp
0x07fe4d37:  mov    %eax,%ebx
0x07fe4d39:  mov    %edx,%ebp
0x07fe4d3b:  mov    %ecx,%esi
0x07fe4d3d:  lea    0x15(%eax),%eax
0x07fe4d40:  mov    %eax,0x10(%esp)
0x07fe4d44:  movb   $0x11,(%ebx)
0x07fe4d47:  movb   $0x15,0x1(%ebx)
0x07fe4d4b:  lea    0x1100(%ecx),%eax
0x07fe4d51:  mov    %ax,0x2(%ebx)
0x07fe4d55:  movw   $0x1000,0x4(%ebx)
0x07fe4d5b:  lea    0x8(%ebx),%ecx
0x07fe4d5e:  mov    $0x8,%edx
0x07fe4d63:  mov    $0x11,%eax
0x07fe4d68:  call   0x7fe495f

----------------
IN: 
0x07fe4d6d:  test   %eax,%eax
0x07fe4d6f:  jne    0x7fe4d77

----------------
IN: 
0x07fe4d71:  movw   $0x40,0x8(%ebx)
0x07fe4d77:  lea    0xa(%ebx),%ecx
0x07fe4d7a:  mov    $0xa,%edx
0x07fe4d7f:  mov    $0x11,%eax
0x07fe4d84:  call   0x7fe495f

----------------
IN: 
0x07fe4d89:  test   %eax,%eax
0x07fe4d8b:  jne    0x7fe4d93

----------------
IN: 
0x07fe4d8d:  movw   $0x40,0xa(%ebx)
0x07fe4d93:  mov    %bp,0xc(%ebx)
0x07fe4d97:  lea    0xe(%ebx),%ecx
0x07fe4d9a:  mov    $0xe,%edx
0x07fe4d9f:  mov    $0x11,%eax
0x07fe4da4:  call   0x7fe495f

----------------
IN: 
0x07fe4da9:  test   %eax,%eax
0x07fe4dab:  jne    0x7fe4db1

----------------
IN: 
0x07fe4dad:  movb   $0x9,0xe(%ebx)
0x07fe4db1:  movb   $0x0,0xf(%ebx)
0x07fe4db5:  lea    0x14(%esp),%ebp
0x07fe4db9:  mov    %ebp,%ecx
0x07fe4dbb:  mov    $0x10,%edx
0x07fe4dc0:  mov    $0x11,%eax
0x07fe4dc5:  call   0x7fe495f

----------------
IN: 
0x07fe4dca:  mov    %esi,0xc(%esp)
0x07fe4dce:  test   %eax,%eax
0x07fe4dd0:  je     0x7fe4dee

----------------
IN: 
0x07fe4dee:  movl   $0xf46ff,0x8(%esp)
0x07fe4df6:  movl   $0x400,0x4(%esp)
0x07fe4dfe:  mov    %ebp,(%esp)
0x07fe4e01:  call   0x7fe46d2

----------------
IN: 
0x07fe4e06:  mov    %ebp,%eax
0x07fe4e08:  call   0x7fdf1a5

----------------
IN: 
0x07fe4e0d:  lea    0x1(%eax),%ecx
0x07fe4e10:  mov    0x10(%esp),%edi
0x07fe4e14:  mov    %ebp,%esi
0x07fe4e16:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe4e16:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe4e18:  mov    %ebp,%eax
0x07fe4e1a:  call   0x7fdf1a5

----------------
IN: 
0x07fe4e1f:  mov    0x10(%esp),%edi
0x07fe4e23:  lea    0x1(%edi,%eax,1),%ebp
0x07fe4e27:  movb   $0x1,0x10(%ebx)
0x07fe4e2b:  mov    %ebp,%ecx
0x07fe4e2d:  mov    $0x11,%edx
0x07fe4e32:  mov    $0x11,%eax
0x07fe4e37:  call   0x7fe495f

----------------
IN: 
0x07fe4e3c:  test   %eax,%eax
0x07fe4e3e:  je     0x7fe4e48

----------------
IN: 
0x07fe4e48:  movb   $0x0,0x11(%ebx)
0x07fe4e4c:  lea    0x12(%ebx),%ecx
0x07fe4e4f:  mov    $0x12,%edx
0x07fe4e54:  mov    $0x11,%eax
0x07fe4e59:  call   0x7fe495f

----------------
IN: 
0x07fe4e5e:  test   %eax,%eax
0x07fe4e60:  jne    0x7fe4e66

----------------
IN: 
0x07fe4e62:  movb   $0x7,0x12(%ebx)
0x07fe4e66:  lea    0x13(%ebx),%ecx
0x07fe4e69:  mov    $0x13,%edx
0x07fe4e6e:  mov    $0x11,%eax
0x07fe4e73:  call   0x7fe495f

----------------
IN: 
0x07fe4e78:  test   %eax,%eax
0x07fe4e7a:  jne    0x7fe4e82

----------------
IN: 
0x07fe4e7c:  movw   $0x0,0x13(%ebx)
0x07fe4e82:  movb   $0x0,0x0(%ebp)
0x07fe4e86:  lea    0x1(%ebp),%eax
0x07fe4e89:  add    $0x414,%esp
0x07fe4e8f:  pop    %ebx
0x07fe4e90:  pop    %esi
0x07fe4e91:  pop    %edi
0x07fe4e92:  pop    %ebp
0x07fe4e93:  ret    

----------------
IN: 
0x07fe7c87:  incl   0x68(%esp)
0x07fe7c8b:  mov    %eax,%edx
0x07fe7c8d:  sub    0x78(%esp),%edx
0x07fe7c91:  cmp    0x6c(%esp),%edx
0x07fe7c95:  jbe    0x7fe7c9b

----------------
IN: 
0x07fe7c9b:  mov    %eax,0x78(%esp)
0x07fe7c9f:  inc    %ebx
0x07fe7ca0:  jmp    0x7fe7c3c

----------------
IN: 
0x07fe7c3c:  cmp    0x20(%esp),%ebx
0x07fe7c40:  lea    0x6c(%esp),%eax
0x07fe7c44:  jge    0x7fe7ca2

----------------
IN: 
0x07fe7ca2:  mov    0x18(%esp),%edi
0x07fe7ca6:  mov    %edi,0x4(%esp)
0x07fe7caa:  mov    %eax,(%esp)
0x07fe7cad:  lea    0x68(%esp),%ecx
0x07fe7cb1:  lea    0x78(%esp),%edx
0x07fe7cb5:  mov    $0x13,%eax
0x07fe7cba:  call   0x7fe49bb

----------------
IN: 
0x07fe7cbf:  test   %eax,%eax
0x07fe7cc1:  jne    0x7fe7d15

----------------
IN: 
0x07fe7cc3:  mov    0x7feff1f,%edx
0x07fe7cc9:  shr    $0x14,%edx
0x07fe7ccc:  mov    0x78(%esp),%eax
0x07fe7cd0:  movb   $0x13,(%eax)
0x07fe7cd3:  movb   $0xf,0x1(%eax)
0x07fe7cd7:  movw   $0x1300,0x2(%eax)
0x07fe7cdd:  movl   $0x0,0x4(%eax)
0x07fe7ce4:  shl    $0xa,%edx
0x07fe7ce7:  dec    %edx
0x07fe7ce8:  mov    %edx,0x8(%eax)
0x07fe7ceb:  movw   $0x1000,0xc(%eax)
0x07fe7cf1:  movb   $0x1,0xe(%eax)
0x07fe7cf5:  movw   $0x0,0xf(%eax)
0x07fe7cfb:  add    $0x11,%eax
0x07fe7cfe:  incl   0x68(%esp)
0x07fe7d02:  cmpl   $0x10,0x6c(%esp)
0x07fe7d07:  ja     0x7fe7d11

----------------
IN: 
0x07fe7d11:  mov    %eax,0x78(%esp)
0x07fe7d15:  mov    0x7feff1b,%eax
0x07fe7d1a:  or     0x7feff17,%eax
0x07fe7d20:  je     0x7fe7daa

----------------
IN: 
0x07fe7daa:  mov    0x18(%esp),%eax
0x07fe7dae:  mov    %eax,0x4(%esp)
0x07fe7db2:  lea    0x6c(%esp),%eax
0x07fe7db6:  mov    %eax,(%esp)
0x07fe7db9:  lea    0x68(%esp),%ecx
0x07fe7dbd:  lea    0x78(%esp),%edx
0x07fe7dc1:  mov    $0x14,%eax
0x07fe7dc6:  call   0x7fe49bb

----------------
IN: 
0x07fe7dcb:  test   %eax,%eax
0x07fe7dcd:  jne    0x7fe7e2f

----------------
IN: 
0x07fe7dcf:  mov    0x7feff1f,%edx
0x07fe7dd5:  shr    $0x14,%edx
0x07fe7dd8:  mov    0x78(%esp),%eax
0x07fe7ddc:  movb   $0x14,(%eax)
0x07fe7ddf:  movb   $0x13,0x1(%eax)
0x07fe7de3:  movw   $0x1400,0x2(%eax)
0x07fe7de9:  movl   $0x0,0x4(%eax)
0x07fe7df0:  shl    $0xa,%edx
0x07fe7df3:  dec    %edx
0x07fe7df4:  mov    %edx,0x8(%eax)
0x07fe7df7:  movw   $0x1100,0xc(%eax)
0x07fe7dfd:  movw   $0x1300,0xe(%eax)
0x07fe7e03:  movb   $0x1,0x10(%eax)
0x07fe7e07:  movb   $0x0,0x11(%eax)
0x07fe7e0b:  movb   $0x0,0x12(%eax)
0x07fe7e0f:  movw   $0x0,0x13(%eax)
0x07fe7e15:  add    $0x15,%eax
0x07fe7e18:  incl   0x68(%esp)
0x07fe7e1c:  cmpl   $0x14,0x6c(%esp)
0x07fe7e21:  ja     0x7fe7e2b

----------------
IN: 
0x07fe7e2b:  mov    %eax,0x78(%esp)
0x07fe7e2f:  mov    0x7feff1b,%eax
0x07fe7e34:  or     0x7feff17,%eax
0x07fe7e3a:  jne    0x7fe7e6a

----------------
IN: 
0x07fe7e3c:  mov    0x18(%esp),%eax
0x07fe7e40:  mov    %eax,0x4(%esp)
0x07fe7e44:  lea    0x6c(%esp),%esi
0x07fe7e48:  mov    %esi,(%esp)
0x07fe7e4b:  lea    0x68(%esp),%ecx
0x07fe7e4f:  lea    0x78(%esp),%edx
0x07fe7e53:  mov    $0x20,%eax
0x07fe7e58:  call   0x7fe49bb

----------------
IN: 
0x07fe4a0b:  mov    %edi,%esi
0x07fe4a0d:  xor    %edi,%edi
0x07fe4a0f:  and    $0x1,%esi
0x07fe4a12:  test   %esi,%esi
0x07fe4a14:  jne    0x7fe4af7

----------------
IN: 
0x07fe7e5d:  test   %eax,%eax
0x07fe7e5f:  jne    0x7fe7f8a

----------------
IN: 
0x07fe7e65:  jmp    0x7fe7f2f

----------------
IN: 
0x07fe7f2f:  mov    0x78(%esp),%ebx
0x07fe7f33:  movb   $0x20,(%ebx)
0x07fe7f36:  movb   $0xb,0x1(%ebx)
0x07fe7f3a:  movw   $0x2000,0x2(%ebx)
0x07fe7f40:  lea    0x4(%ebx),%eax
0x07fe7f43:  mov    $0x6,%ecx
0x07fe7f48:  xor    %edx,%edx
0x07fe7f4a:  call   0xf0d7a

----------------
IN: 
0x07fe7f4f:  lea    0xa(%ebx),%ecx
0x07fe7f52:  mov    $0xa,%edx
0x07fe7f57:  mov    $0x20,%eax
0x07fe7f5c:  call   0x7fe495f

----------------
IN: 
0x07fe7f61:  test   %eax,%eax
0x07fe7f63:  jne    0x7fe7f69

----------------
IN: 
0x07fe7f65:  movb   $0x0,0xa(%ebx)
0x07fe7f69:  movw   $0x0,0xb(%ebx)
0x07fe7f6f:  add    $0xd,%ebx
0x07fe7f72:  incl   0x68(%esp)
0x07fe7f76:  mov    %ebx,%eax
0x07fe7f78:  sub    0x78(%esp),%eax
0x07fe7f7c:  cmp    0x6c(%esp),%eax
0x07fe7f80:  jbe    0x7fe7f86

----------------
IN: 
0x07fe7f86:  mov    %ebx,0x78(%esp)
0x07fe7f8a:  xor    %ebx,%ebx
0x07fe7f8c:  mov    0x18(%esp),%eax
0x07fe7f90:  mov    %eax,0x4(%esp)
0x07fe7f94:  mov    %esi,(%esp)
0x07fe7f97:  lea    0x68(%esp),%ecx
0x07fe7f9b:  lea    0x78(%esp),%edx
0x07fe7f9f:  mov    %ebx,%eax
0x07fe7fa1:  call   0x7fe49bb

----------------
IN: 
0x07fe7fa6:  inc    %ebx
0x07fe7fa7:  cmp    $0x100,%ebx
0x07fe7fad:  jne    0x7fe7f8c

----------------
IN: 
0x07fe7f8c:  mov    0x18(%esp),%eax
0x07fe7f90:  mov    %eax,0x4(%esp)
0x07fe7f94:  mov    %esi,(%esp)
0x07fe7f97:  lea    0x68(%esp),%ecx
0x07fe7f9b:  lea    0x78(%esp),%edx
0x07fe7f9f:  mov    %ebx,%eax
0x07fe7fa1:  call   0x7fe49bb

----------------
IN: 
0x07fe7faf:  cmpl   $0x0,0x7fefef3
0x07fe7fb6:  js     0x7fe7fe9

----------------
IN: 
0x07fe7fb8:  mov    0x78(%esp),%eax
0x07fe7fbc:  movb   $0x7f,(%eax)
0x07fe7fbf:  movb   $0x4,0x1(%eax)
0x07fe7fc3:  movw   $0x7f00,0x2(%eax)
0x07fe7fc9:  movw   $0x0,0x4(%eax)
0x07fe7fcf:  add    $0x6,%eax
0x07fe7fd2:  incl   0x68(%esp)
0x07fe7fd6:  cmpl   $0x5,0x6c(%esp)
0x07fe7fdb:  ja     0x7fe7fe5

----------------
IN: 
0x07fe7fe5:  mov    %eax,0x78(%esp)
0x07fe7fe9:  mov    0x68(%esp),%eax
0x07fe7fed:  mov    %eax,0x20(%esp)
0x07fe7ff1:  mov    0x78(%esp),%eax
0x07fe7ff5:  sub    0x28(%esp),%eax
0x07fe7ff9:  movzwl %ax,%eax
0x07fe7ffc:  mov    %eax,%edi
0x07fe7ffe:  mov    %eax,0x18(%esp)
0x07fe8002:  mov    0x6c(%esp),%eax
0x07fe8006:  mov    %eax,0x30(%esp)
0x07fe800a:  mov    $0x1f,%eax
0x07fe800f:  call   0x7fdf657

----------------
IN: 
0x07fe8014:  mov    %eax,%ebx
0x07fe8016:  mov    0x18(%esp),%eax
0x07fe801a:  cmp    $0x258,%di
0x07fe801f:  ja     0x7fe8028

----------------
IN: 
0x07fe8021:  call   0x7fdf657

----------------
IN: 
0x07fe8026:  jmp    0x7fe802d

----------------
IN: 
0x07fe802d:  mov    %eax,%ebp
0x07fe802f:  test   %eax,%eax
0x07fe8031:  je     0x7fe8037

----------------
IN: 
0x07fe8033:  test   %ebx,%ebx
0x07fe8035:  jne    0x7fe8059

----------------
IN: 
0x07fe8059:  mov    %eax,%edi
0x07fe805b:  mov    0x28(%esp),%esi
0x07fe805f:  mov    0x18(%esp),%ecx
0x07fe8063:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe8063:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe8065:  movl   $0x5f4d535f,(%ebx)
0x07fe806b:  movb   $0x1f,0x5(%ebx)
0x07fe806f:  movb   $0x2,0x6(%ebx)
0x07fe8073:  movb   $0x4,0x7(%ebx)
0x07fe8077:  mov    0x30(%esp),%eax
0x07fe807b:  mov    %ax,0x8(%ebx)
0x07fe807f:  movb   $0x0,0xa(%ebx)
0x07fe8083:  lea    0xb(%ebx),%eax
0x07fe8086:  mov    $0x5,%cl
0x07fe8088:  xor    %edx,%edx
0x07fe808a:  call   0xf0d7a

----------------
IN: 
0x07fe808f:  lea    0x10(%ebx),%esi
0x07fe8092:  movl   $0x494d445f,0x10(%ebx)
0x07fe8099:  movb   $0x5f,0x14(%ebx)
0x07fe809d:  mov    0x18(%esp),%edi
0x07fe80a1:  mov    %di,0x16(%ebx)
0x07fe80a5:  mov    %ebp,0x18(%ebx)
0x07fe80a8:  mov    0x20(%esp),%eax
0x07fe80ac:  mov    %ax,0x1c(%ebx)
0x07fe80b0:  movb   $0x24,0x1e(%ebx)
0x07fe80b4:  mov    $0x10,%edx
0x07fe80b9:  mov    %ebx,%eax
0x07fe80bb:  call   0xf10c1

----------------
IN: 
0x07fe80c0:  sub    %al,0x4(%ebx)
0x07fe80c3:  movzbl 0x5(%ebx),%edx
0x07fe80c7:  sub    $0x10,%edx
0x07fe80ca:  mov    %esi,%eax
0x07fe80cc:  call   0xf10c1

----------------
IN: 
0x07fe80d1:  sub    %al,0x15(%ebx)
0x07fe80d4:  mov    %ebx,0x7feff0b
0x07fe80da:  mov    %edi,0xc(%esp)
0x07fe80de:  mov    %ebp,0x8(%esp)
0x07fe80e2:  mov    %ebx,0x4(%esp)
0x07fe80e6:  movl   $0xf4ccf,(%esp)
0x07fe80ed:  call   0xf1787

----------------
IN: 
0x07fe80f2:  mov    0x28(%esp),%eax
0x07fe80f6:  call   0x7fdf6b3

----------------
IN: 
0x07fe80fb:  call   0x7fe567a

----------------
IN: 
0x07fe567a:  push   %ebp
0x07fe567b:  push   %edi
0x07fe567c:  push   %esi
0x07fe567d:  push   %ebx
0x07fe567e:  sub    $0xac,%esp
0x07fe5684:  lea    0x54(%esp),%edx
0x07fe5688:  mov    $0xf4887,%eax
0x07fe568d:  call   0x7fe0c72

----------------
IN: 
0x07fe5692:  mov    %eax,0x10(%esp)
0x07fe5696:  test   %eax,%eax
0x07fe5698:  je     0x7fe594a

----------------
IN: 
0x07fe569e:  mov    0x54(%esp),%eax
0x07fe56a2:  test   $0x7f,%al
0x07fe56a4:  je     0x7fe56c7

----------------
IN: 
0x07fe56c7:  shr    $0x7,%eax
0x07fe56ca:  lea    0x4(,%eax,8),%eax
0x07fe56d1:  call   0x7fe0529

----------------
IN: 
0x07fe56d6:  mov    %eax,0xc(%esp)
0x07fe56da:  test   %eax,%eax
0x07fe56dc:  jne    0x7fe56ef

----------------
IN: 
0x07fe56ef:  mov    0xc(%esp),%eax
0x07fe56f3:  movl   $0x0,(%eax)
0x07fe56f9:  mov    0x10(%esp),%eax
0x07fe56fd:  lea    0x4(%eax),%ebp
0x07fe5700:  movl   $0x0,0x18(%esp)
0x07fe5708:  mov    0x18(%esp),%eax
0x07fe570c:  cmp    0x54(%esp),%eax
0x07fe5710:  jge    0x7fe592b

----------------
IN: 
0x07fe5716:  mov    -0x4(%ebp),%eax
0x07fe5719:  cmp    $0x2,%eax
0x07fe571c:  je     0x7fe5816

----------------
IN: 
0x07fe5722:  cmp    $0x3,%eax
0x07fe5725:  je     0x7fe58bd

----------------
IN: 
0x07fe572b:  dec    %eax
0x07fe572c:  jne    0x7fe591e

----------------
IN: 
0x07fe5732:  mov    0xc(%esp),%eax
0x07fe5736:  mov    (%eax),%edx
0x07fe5738:  mov    0x38(%ebp),%edi
0x07fe573b:  lea    -0x1(%edi),%eax
0x07fe573e:  test   %edi,%eax
0x07fe5740:  jne    0x7fe5801

----------------
IN: 
0x07fe5746:  mov    0x3c(%ebp),%al
0x07fe5749:  cmp    $0x1,%al
0x07fe574b:  je     0x7fe575c

----------------
IN: 
0x07fe574d:  cmp    $0x2,%al
0x07fe574f:  jne    0x7fe5801

----------------
IN: 
0x07fe5755:  mov    $0x7fefea7,%ebx
0x07fe575a:  jmp    0x7fe5761

----------------
IN: 
0x07fe5761:  cmp    $0xf,%edi
0x07fe5764:  ja     0x7fe576b

----------------
IN: 
0x07fe5766:  mov    $0x10,%edi
0x07fe576b:  cmpb   $0x0,0x37(%ebp)
0x07fe576f:  jne    0x7fe5801

----------------
IN: 
0x07fe5775:  mov    0xc(%esp),%eax
0x07fe5779:  lea    (%eax,%edx,8),%esi
0x07fe577c:  lea    0x4(%esi),%eax
0x07fe577f:  mov    %eax,0x1c(%esp)
0x07fe5783:  mov    %ebp,%eax
0x07fe5785:  call   0x7fe07e9

----------------
IN: 
0x07fe578a:  mov    %eax,0x4(%esi)
0x07fe578d:  test   %eax,%eax
0x07fe578f:  je     0x7fe591e

----------------
IN: 
0x07fe5795:  mov    0x84(%eax),%ecx
0x07fe579b:  test   %ecx,%ecx
0x07fe579d:  je     0x7fe591e

----------------
IN: 
0x07fe57a3:  mov    %edi,(%esp)
0x07fe57a6:  or     $0xffffffff,%edx
0x07fe57a9:  mov    %ebx,%eax
0x07fe57ab:  call   0x7fdf52c

----------------
IN: 
0x07fe57b0:  mov    %eax,%ebx
0x07fe57b2:  test   %eax,%eax
0x07fe57b4:  jne    0x7fe57ca

----------------
IN: 
0x07fe57ca:  mov    0x4(%esi),%edi
0x07fe57cd:  mov    0x84(%edi),%ecx
0x07fe57d3:  mov    %eax,%edx
0x07fe57d5:  mov    %edi,%eax
0x07fe57d7:  call   *0x88(%edi)

----------------
IN: 
0x07fe57dd:  mov    0x4(%esi),%edx
0x07fe57e0:  cmp    0x84(%edx),%eax
0x07fe57e6:  jne    0x7fe57fa

----------------
IN: 
0x07fe57e8:  mov    0x1c(%esp),%eax
0x07fe57ec:  mov    %ebx,0x4(%eax)
0x07fe57ef:  mov    0xc(%esp),%eax
0x07fe57f3:  incl   (%eax)
0x07fe57f5:  jmp    0x7fe591e

----------------
IN: 
0x07fe591e:  subl   $0xffffff80,0x18(%esp)
0x07fe5923:  sub    $0xffffff80,%ebp
0x07fe5926:  jmp    0x7fe5708

----------------
IN: 
0x07fe5708:  mov    0x18(%esp),%eax
0x07fe570c:  cmp    0x54(%esp),%eax
0x07fe5710:  jge    0x7fe592b

----------------
IN: 
0x07fe575c:  mov    $0x7fefeab,%ebx
0x07fe5761:  cmp    $0xf,%edi
0x07fe5764:  ja     0x7fe576b

----------------
IN: 
0x07fe576b:  cmpb   $0x0,0x37(%ebp)
0x07fe576f:  jne    0x7fe5801

----------------
IN: 
0x07fe58bd:  mov    0x38(%ebp),%esi
0x07fe58c0:  mov    0x3c(%ebp),%ebx
0x07fe58c3:  mov    0x40(%ebp),%edi
0x07fe58c6:  mov    0xc(%esp),%edx
0x07fe58ca:  mov    %ebp,%eax
0x07fe58cc:  call   0x7fdfda7

----------------
IN: 
0x07fdfda7:  push   %ebp
0x07fdfda8:  push   %edi
0x07fdfda9:  push   %esi
0x07fdfdaa:  push   %ebx
0x07fdfdab:  mov    %eax,%edi
0x07fdfdad:  cmpb   $0x0,0x37(%eax)
0x07fdfdb1:  jne    0x7fdfdd8

----------------
IN: 
0x07fdfdb3:  mov    %edx,%esi
0x07fdfdb5:  mov    (%edx),%ebp
0x07fdfdb7:  xor    %ebx,%ebx
0x07fdfdb9:  cmp    %ebp,%ebx
0x07fdfdbb:  jge    0x7fdfdd8

----------------
IN: 
0x07fdfdbd:  mov    0x4(%esi,%ebx,8),%eax
0x07fdfdc1:  add    $0x4,%eax
0x07fdfdc4:  mov    %edi,%edx
0x07fdfdc6:  call   0xf0d5a

----------------
IN: 
0x000f0d71:  inc    %ecx
0x000f0d72:  test   %bl,%bl
0x000f0d74:  jne    0xf0d5d

----------------
IN: 
0x000f0d5d:  mov    (%eax,%ecx,1),%bl
0x000f0d60:  cmp    (%edx,%ecx,1),%bl
0x000f0d63:  je     0xf0d71

----------------
IN: 
0x07fdfdcb:  test   %eax,%eax
0x07fdfdcd:  jne    0x7fdfdd5

----------------
IN: 
0x07fdfdd5:  inc    %ebx
0x07fdfdd6:  jmp    0x7fdfdb9

----------------
IN: 
0x07fdfdb9:  cmp    %ebp,%ebx
0x07fdfdbb:  jge    0x7fdfdd8

----------------
IN: 
0x000f0d76:  xor    %eax,%eax
0x000f0d78:  pop    %ebx
0x000f0d79:  ret    

----------------
IN: 
0x07fdfdcf:  lea    0x4(%esi,%ebx,8),%eax
0x07fdfdd3:  jmp    0x7fdfdda

----------------
IN: 
0x07fdfdda:  pop    %ebx
0x07fdfddb:  pop    %esi
0x07fdfddc:  pop    %edi
0x07fdfddd:  pop    %ebp
0x07fdfdde:  ret    

----------------
IN: 
0x07fe58d1:  test   %eax,%eax
0x07fe58d3:  je     0x7fe5902

----------------
IN: 
0x07fe58d5:  mov    0x4(%eax),%edx
0x07fe58d8:  test   %edx,%edx
0x07fe58da:  je     0x7fe5902

----------------
IN: 
0x07fe58dc:  mov    (%eax),%eax
0x07fe58de:  mov    0x84(%eax),%eax
0x07fe58e4:  cmp    %eax,%esi
0x07fe58e6:  jae    0x7fe5902

----------------
IN: 
0x07fe58e8:  mov    %edi,%ecx
0x07fe58ea:  add    %ebx,%ecx
0x07fe58ec:  jb     0x7fe5902

----------------
IN: 
0x07fe58ee:  cmp    %eax,%ecx
0x07fe58f0:  ja     0x7fe5902

----------------
IN: 
0x07fe58f2:  add    %edx,%esi
0x07fe58f4:  lea    (%edx,%ebx,1),%eax
0x07fe58f7:  mov    %edi,%edx
0x07fe58f9:  call   0xf10c1

----------------
IN: 
0x07fe58fe:  sub    %al,(%esi)
0x07fe5900:  jmp    0x7fe591e

----------------
IN: 
0x07fe5816:  mov    0x70(%ebp),%edi
0x07fe5819:  movl   $0x0,0x5c(%esp)
0x07fe5821:  movl   $0x0,0x60(%esp)
0x07fe5829:  mov    0xc(%esp),%ebx
0x07fe582d:  mov    %ebx,%edx
0x07fe582f:  mov    %ebp,%eax
0x07fe5831:  call   0x7fdfda7

----------------
IN: 
0x07fe5836:  mov    %eax,%esi
0x07fe5838:  lea    0x38(%ebp),%eax
0x07fe583b:  mov    %ebx,%edx
0x07fe583d:  call   0x7fdfda7

----------------
IN: 
0x07fe5842:  test   %eax,%eax
0x07fe5844:  je     0x7fe58ab

----------------
IN: 
0x07fe5846:  test   %esi,%esi
0x07fe5848:  je     0x7fe58ab

----------------
IN: 
0x07fe584a:  mov    0x4(%esi),%ecx
0x07fe584d:  test   %ecx,%ecx
0x07fe584f:  je     0x7fe58ab

----------------
IN: 
0x07fe5851:  mov    0x4(%eax),%eax
0x07fe5854:  mov    %eax,0x1c(%esp)
0x07fe5858:  test   %eax,%eax
0x07fe585a:  je     0x7fe58ab

----------------
IN: 
0x07fe585c:  mov    0x74(%ebp),%dl
0x07fe585f:  movzbl %dl,%ebx
0x07fe5862:  mov    %ebx,%eax
0x07fe5864:  add    %edi,%eax
0x07fe5866:  jb     0x7fe58ab

----------------
IN: 
0x07fe5868:  mov    (%esi),%esi
0x07fe586a:  cmp    0x84(%esi),%eax
0x07fe5870:  ja     0x7fe58ab

----------------
IN: 
0x07fe5872:  dec    %edx
0x07fe5873:  cmp    $0x7,%dl
0x07fe5876:  ja     0x7fe58ab

----------------
IN: 
0x07fe5878:  lea    -0x1(%ebx),%edx
0x07fe587b:  test   %ebx,%edx
0x07fe587d:  jne    0x7fe58ab

----------------
IN: 
0x07fe587f:  add    %ecx,%edi
0x07fe5881:  mov    %edi,%esi
0x07fe5883:  lea    0x5c(%esp),%edi
0x07fe5887:  mov    %esi,0x24(%esp)
0x07fe588b:  mov    %ebx,%ecx
0x07fe588d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe588d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe588f:  mov    0x1c(%esp),%eax
0x07fe5893:  xor    %edx,%edx
0x07fe5895:  add    %eax,0x5c(%esp)
0x07fe5899:  adc    %edx,0x60(%esp)
0x07fe589d:  mov    0x24(%esp),%edi
0x07fe58a1:  lea    0x5c(%esp),%esi
0x07fe58a5:  mov    %ebx,%ecx
0x07fe58a7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe58a7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe58a9:  jmp    0x7fe591e

----------------
IN: 
0x07fe592b:  mov    0xc(%esp),%eax
0x07fe592f:  call   0x7fdf6b3

----------------
IN: 
0x07fe5934:  mov    0x10(%esp),%eax
0x07fe5938:  call   0x7fdf6b3

----------------
IN: 
0x07fe593d:  xor    %esi,%esi
0x07fe593f:  jmp    0x7fe594d

----------------
IN: 
0x07fe594d:  mov    $0xf0c00,%edi
0x07fe5952:  mov    $0xf000f,%ebx
0x07fe5957:  and    $0xfffffff0,%ebx
0x07fe595a:  mov    %edi,%ebp
0x07fe595c:  and    $0xfffffff0,%ebp
0x07fe595f:  cmp    %ebp,%ebx
0x07fe5961:  ja     0x7fe5977

----------------
IN: 
0x07fe5963:  mov    %edi,%edx
0x07fe5965:  sub    %ebx,%edx
0x07fe5967:  mov    %ebx,%eax
0x07fe5969:  call   0x7fdfe49

----------------
IN: 
0x07fdfe49:  push   %edi
0x07fdfe4a:  push   %esi
0x07fdfe4b:  push   %ebx
0x07fdfe4c:  mov    %eax,%ebx
0x07fdfe4e:  cmpl   $0x20525450,0x4(%eax)
0x07fdfe55:  jne    0x7fdfe99

----------------
IN: 
0x07fdfe99:  or     $0xffffffff,%eax
0x07fdfe9c:  pop    %ebx
0x07fdfe9d:  pop    %esi
0x07fdfe9e:  pop    %edi
0x07fdfe9f:  ret    

----------------
IN: 
0x07fe596e:  test   %eax,%eax
0x07fe5970:  jns    0x7fe5981

----------------
IN: 
0x07fe5972:  add    $0x10,%ebx
0x07fe5975:  jmp    0x7fe595f

----------------
IN: 
0x07fe595f:  cmp    %ebp,%ebx
0x07fe5961:  ja     0x7fe5977

----------------
IN: 
0x07fdfe57:  cmpl   $0x20445352,(%eax)
0x07fdfe5d:  jne    0x7fdfe99

----------------
IN: 
0x07fdfe5f:  mov    %edx,%edi
0x07fdfe61:  cmp    $0x13,%edx
0x07fdfe64:  jbe    0x7fdfe99

----------------
IN: 
0x07fdfe66:  mov    $0x14,%edx
0x07fdfe6b:  call   0xf10c1

----------------
IN: 
0x07fdfe70:  test   %al,%al
0x07fdfe72:  jne    0x7fdfe99

----------------
IN: 
0x07fdfe74:  cmpb   $0x1,0xf(%ebx)
0x07fdfe78:  jbe    0x7fdfe90

----------------
IN: 
0x07fdfe90:  mov    $0x14,%esi
0x07fdfe95:  mov    %esi,%eax
0x07fdfe97:  jmp    0x7fdfe9c

----------------
IN: 
0x07fdfe9c:  pop    %ebx
0x07fdfe9d:  pop    %esi
0x07fdfe9e:  pop    %edi
0x07fdfe9f:  ret    

----------------
IN: 
0x07fe5981:  mov    %ebx,0x28(%esp)
0x07fe5985:  mov    0x28(%esp),%eax
0x07fe5989:  mov    %eax,0xf5f08
0x07fe598e:  test   %eax,%eax
0x07fe5990:  jne    0x7fe6572

----------------
IN: 
0x07fe6572:  add    $0xac,%esp
0x07fe6578:  pop    %ebx
0x07fe6579:  pop    %esi
0x07fe657a:  pop    %edi
0x07fe657b:  pop    %ebp
0x07fe657c:  ret    

----------------
IN: 
0x07fe8100:  jmp    0x7fe88b0

----------------
IN: 
0x07fe88b0:  add    $0x88,%esp
0x07fe88b6:  pop    %ebx
0x07fe88b7:  pop    %esi
0x07fe88b8:  pop    %edi
0x07fe88b9:  pop    %ebp
0x07fe88ba:  ret    

----------------
IN: 
0x07feb9c3:  movl   $0xf57e7,(%esp)
0x07feb9ca:  call   0xf1787

----------------
IN: 
0x07feb9cf:  mov    $0x1,%edx
0x07feb9d4:  xor    %ecx,%ecx
0x07feb9d6:  mov    $0xf5800,%eax
0x07feb9db:  call   0x7fe081e

----------------
IN: 
0x07feb9e0:  mov    %eax,0xf5fc4
0x07feb9e5:  mov    $0x1,%edx
0x07feb9ea:  xor    %ecx,%ecx
0x07feb9ec:  mov    $0xf5818,%eax
0x07feb9f1:  call   0x7fe081e

----------------
IN: 
0x07feb9f6:  mov    %eax,0xf5fc0
0x07feb9fb:  mov    $0x1,%edx
0x07feba00:  xor    %ecx,%ecx
0x07feba02:  mov    $0xf582f,%eax
0x07feba07:  call   0x7fe081e

----------------
IN: 
0x07feba0c:  mov    %eax,0xf5fbc
0x07feba11:  call   0xf0f64

----------------
IN: 
0x000f0f64:  mov    0xf5fc8,%eax
0x000f0f69:  mov    0x10(%eax),%eax
0x000f0f6c:  sub    $0x10,%eax
0x000f0f6f:  and    $0xfffff800,%eax
0x000f0f74:  ret    

----------------
IN: 
0x07feba16:  lea    -0xc0000(%eax),%ecx
0x07feba1c:  xor    %edx,%edx
0x07feba1e:  mov    $0xc0000,%eax
0x07feba23:  call   0xf0d7a

----------------
IN: 
0x07feba28:  mov    0x7fefee3,%eax
0x07feba2d:  lea    -0x4(%eax),%ebx
0x07feba30:  cmp    $0xfffffffc,%ebx
0x07feba33:  je     0x7febc4f

----------------
IN: 
0x07feba39:  mov    %ebx,%eax
0x07feba3b:  call   0x7fe054f

----------------
IN: 
0x07feba40:  test   %eax,%eax
0x07feba42:  jne    0x7feba4c

----------------
IN: 
0x07feba44:  mov    0x4(%ebx),%ebx
0x07feba47:  sub    $0x4,%ebx
0x07feba4a:  jmp    0x7feba30

----------------
IN: 
0x07feba30:  cmp    $0xfffffffc,%ebx
0x07feba33:  je     0x7febc4f

----------------
IN: 
0x07feba4c:  mov    $0xf5844,%edx
0x07feba51:  mov    $0xf5ca9,%eax
0x07feba56:  call   0xf0d5a

----------------
IN: 
0x07feba5b:  test   %eax,%eax
0x07feba5d:  jne    0x7feba88

----------------
IN: 
0x07feba88:  mov    $0xf5855,%edx
0x07feba8d:  mov    $0xf5ca9,%eax
0x07feba92:  call   0xf0d5a

----------------
IN: 
0x07feba97:  test   %eax,%eax
0x07feba99:  jne    0x7febab2

----------------
IN: 
0x07febab2:  mov    $0xf5860,%edx
0x07febab7:  mov    $0xf5ca9,%eax
0x07febabc:  call   0xf0d5a

----------------
IN: 
0x07febac1:  test   %eax,%eax
0x07febac3:  jne    0x7febaee

----------------
IN: 
0x07febaee:  mov    $0xf586d,%edx
0x07febaf3:  mov    $0xf5ca9,%eax
0x07febaf8:  call   0xf0d5a

----------------
IN: 
0x07febafd:  test   %eax,%eax
0x07febaff:  jne    0x7febb2a

----------------
IN: 
0x07febb2a:  mov    0x10(%ebx),%ax
0x07febb2e:  cmp    $0x1106,%ax
0x07febb32:  jne    0x7febc23

----------------
IN: 
0x07febc23:  cmp    $0x8086,%ax
0x07febc27:  jne    0x7febc41

----------------
IN: 
0x07febc41:  xor    %ecx,%ecx
0x07febc43:  mov    $0x1,%edx
0x07febc48:  mov    %ebx,%eax
0x07febc4a:  call   0x7fe471d

----------------
IN: 
0x07fe471d:  push   %ebp
0x07fe471e:  push   %edi
0x07fe471f:  push   %esi
0x07fe4720:  push   %ebx
0x07fe4721:  sub    $0x40,%esp
0x07fe4724:  mov    %eax,%ebx
0x07fe4726:  mov    %edx,0x1c(%esp)
0x07fe472a:  mov    %ecx,0x20(%esp)
0x07fe472e:  mov    (%eax),%eax
0x07fe4730:  mov    %ax,0x1a(%esp)
0x07fe4735:  movzwl 0x12(%ebx),%eax
0x07fe4739:  mov    %eax,0x10(%esp)
0x07fe473d:  movzwl 0x10(%ebx),%eax
0x07fe4741:  mov    %eax,0xc(%esp)
0x07fe4745:  movl   $0xf468c,0x8(%esp)
0x07fe474d:  movl   $0x11,0x4(%esp)
0x07fe4755:  lea    0x2f(%esp),%esi
0x07fe4759:  mov    %esi,(%esp)
0x07fe475c:  call   0x7fe46d2

----------------
IN: 
0x07fe4761:  mov    %esi,%eax
0x07fe4763:  call   0x7fe07e9

----------------
IN: 
0x07fe4768:  test   %eax,%eax
0x07fe476a:  je     0x7fe477d

----------------
IN: 
0x07fe477d:  xor    %edi,%edi
0x07fe477f:  movzwl (%ebx),%eax
0x07fe4782:  testb  $0x7f,0x18(%ebx)
0x07fe4786:  jne    0x7fe4902

----------------
IN: 
0x07fe478c:  mov    %eax,%ebp
0x07fe478e:  mov    %eax,0x14(%esp)
0x07fe4792:  mov    $0x30,%edx
0x07fe4797:  call   0xf0e37

----------------
IN: 
0x07fe479c:  mov    %eax,%esi
0x07fe479e:  mov    $0xfffffffe,%ecx
0x07fe47a3:  mov    $0x30,%edx
0x07fe47a8:  mov    %ebp,%eax
0x07fe47aa:  call   0xf0dde

----------------
IN: 
0x07fe47af:  mov    $0x30,%edx
0x07fe47b4:  mov    %ebp,%eax
0x07fe47b6:  call   0xf0e37

----------------
IN: 
0x07fe47bb:  and    $0xfffffffe,%esi
0x07fe47be:  lea    -0x1(%eax),%edx
0x07fe47c1:  cmp    $0xfffffffd,%edx
0x07fe47c4:  ja     0x7fe48c2

----------------
IN: 
0x07fe47ca:  cmp    %eax,%esi
0x07fe47cc:  je     0x7fe48c2

----------------
IN: 
0x07fe47d2:  lea    0x400000(%esi),%eax
0x07fe47d8:  cmp    $0x13fffff,%eax
0x07fe47dd:  jbe    0x7fe48c2

----------------
IN: 
0x07fe47e3:  mov    %esi,%ecx
0x07fe47e5:  or     $0x1,%ecx
0x07fe47e8:  mov    $0x30,%edx
0x07fe47ed:  mov    %ebp,%eax
0x07fe47ef:  call   0xf0dde

----------------
IN: 
0x07fe47f4:  mov    %esi,%edx
0x07fe47f6:  cmpw   $0xaa55,(%edx)
0x07fe47fb:  jne    0x7fe48c2

----------------
IN: 
0x07fe4801:  mov    0x18(%edx),%ax
0x07fe4805:  movzwl %ax,%ebp
0x07fe4808:  add    %edx,%ebp
0x07fe480a:  cmpl   $0x52494350,0x0(%ebp)
0x07fe4811:  jne    0x7fe48c2

----------------
IN: 
0x07fe4817:  test   $0x3,%al
0x07fe4819:  je     0x7fe483f

----------------
IN: 
0x07fe483f:  test   %ebp,%ebp
0x07fe4841:  je     0x7fe48c2

----------------
IN: 
0x07fe4843:  mov    0x10(%ebx),%eax
0x07fe4846:  cmp    %ax,0x4(%ebp)
0x07fe484a:  jne    0x7fe485c

----------------
IN: 
0x07fe484c:  mov    0x12(%ebx),%ax
0x07fe4850:  cmp    %ax,0x6(%ebp)
0x07fe4854:  jne    0x7fe485c

----------------
IN: 
0x07fe4856:  cmpb   $0x0,0x14(%ebp)
0x07fe485a:  je     0x7fe486d

----------------
IN: 
0x07fe486d:  movzbl 0x2(%edx),%ecx
0x07fe4871:  mov    %edx,0x28(%esp)
0x07fe4875:  shl    $0x9,%ecx
0x07fe4878:  mov    %ecx,%eax
0x07fe487a:  mov    %ecx,0x24(%esp)
0x07fe487e:  call   0x7fdf72e

----------------
IN: 
0x07fdf72e:  push   %esi
0x07fdf72f:  push   %ebx
0x07fdf730:  mov    0x7fefe87,%esi
0x07fdf736:  lea    0x7ff(%esi,%eax,1),%ebx
0x07fdf73d:  and    $0xfffff800,%ebx
0x07fdf743:  call   0xf0f64

----------------
IN: 
0x07fdf748:  cmp    %eax,%ebx
0x07fdf74a:  ja     0x7fdf76b

----------------
IN: 
0x07fdf74c:  mov    0xf5fc8,%eax
0x07fdf751:  cmp    $0xe0000,%ebx
0x07fdf757:  jae    0x7fdf75e

----------------
IN: 
0x07fdf759:  mov    $0xe0000,%ebx
0x07fdf75e:  add    $0x10,%ebx
0x07fdf761:  mov    %ebx,0xc(%eax)
0x07fdf764:  mov    %ebx,0x8(%eax)
0x07fdf767:  mov    %esi,%eax
0x07fdf769:  jmp    0x7fdf76d

----------------
IN: 
0x07fdf76d:  pop    %ebx
0x07fdf76e:  pop    %esi
0x07fdf76f:  ret    

----------------
IN: 
0x07fe4883:  mov    %eax,%ebp
0x07fe4885:  test   %eax,%eax
0x07fe4887:  mov    0x24(%esp),%ecx
0x07fe488b:  mov    0x28(%esp),%edx
0x07fe488f:  jne    0x7fe48a2

----------------
IN: 
0x07fe48a2:  call   0x7fe098f

----------------
IN: 
0x07fe098f:  push   %ebp
0x07fe0990:  push   %edi
0x07fe0991:  push   %esi
0x07fe0992:  push   %ebx
0x07fe0993:  mov    %eax,%ebp
0x07fe0995:  mov    %edx,%esi
0x07fe0997:  mov    %ecx,%ebx
0x07fe0999:  call   0xf1682

----------------
IN: 
0x000f1682:  mov    %esp,%eax
0x000f1684:  cmp    $0x100000,%eax
0x000f1689:  jbe    0xf1697

----------------
IN: 
0x000f1697:  mov    $0xf6fd4,%ecx
0x000f169c:  xor    %edx,%edx
0x000f169e:  xor    %eax,%eax
0x000f16a0:  call   0xf1647

----------------
IN: 
0x000f1647:  push   %ebx
0x000f1648:  push   %ebx
0x000f1649:  mov    %esp,%ebx
0x000f164b:  cmp    $0x100000,%ebx
0x000f1651:  jbe    0xf165f

----------------
IN: 
0x000f165f:  sub    $0xf0000,%ecx
0x000f1665:  pop    %ebx
0x000f1666:  pop    %ebx
0x000f1667:  jmp    0xfd1cb

----------------
IN: 
0x000fd1cb:  push   %edx
0x000fd1cc:  push   %ecx
0x000fd1cd:  mov    $0xd1d7,%edx
0x000fd1d2:  jmp    0xfd181

----------------
IN: 
0x000fd181:  mov    %eax,%ecx
0x000fd183:  mov    $0x30,%eax
0x000fd188:  mov    %eax,%ds

----------------
IN: 
0x000fd18a:  mov    %eax,%es

----------------
IN: 
0x000fd18c:  mov    %eax,%ss

----------------
IN: 
0x000fd18e:  mov    %eax,%fs

----------------
IN: 
0x000fd190:  mov    %eax,%gs
0x000fd192:  ljmpw  $0x28,$0xd198

----------------
IN: 
0x000fd198:  mov    %cr0,%eax
0x000fd19b:  and    $0xfffffffe,%eax
0x000fd19f:  mov    %eax,%cr0

----------------
IN: 
0x000fd1a2:  ljmp   $0xf000,$0xd1a7

----------------
IN: 
0x000fd1a7:  lidtw  %cs:0x6698
0x000fd1ad:  xor    %ax,%ax
0x000fd1af:  mov    %ax,%fs
0x000fd1b1:  mov    %ax,%gs
0x000fd1b3:  mov    %ax,%es
0x000fd1b5:  mov    %ax,%ds
0x000fd1b7:  mov    %ax,%ss

----------------
IN: 
0x000fd1b9:  mov    %ecx,%eax

----------------
IN: 
0x000fd1bc:  jmpl   *%edx

----------------
IN: 
0x000fd1d7:  mov    $0xe000,%edx
0x000fd1dd:  mov    %dx,%ds
0x000fd1df:  movzwl -0x814,%edx
0x000fd1e5:  mov    %edx,%ecx
0x000fd1e8:  shl    $0x4,%ecx
0x000fd1ec:  mov    %dx,%ss

----------------
IN: 
0x000fd1ee:  sub    %ecx,%esp

----------------
IN: 
0x000fd1f1:  mov    %dx,%ds
0x000fd1f3:  pop    %ecx
0x000fd1f5:  pop    %edx
0x000fd1f7:  calll  *%ecx

----------------
IN: 
0x000f6fd4:  calll  0xf6c75

----------------
IN: 
0x000f6c75:  mov    %ss,%dx
0x000f6c77:  movzwl %dx,%edx
0x000f6c7b:  xor    %eax,%eax
0x000f6c7e:  cmp    $0xe000,%edx
0x000f6c85:  jne    0xf6c97

----------------
IN: 
0x000f6c97:  retl   

----------------
IN: 
0x000f6fda:  test   %eax,%eax
0x000f6fdd:  je     0xf6fee

----------------
IN: 
0x000f6fee:  sti    

----------------
IN: 
0x000f6fef:  nop    

----------------
IN: 
0x000f6ff0:  pause  

----------------
IN: 
0x000f6ff2:  cli    
0x000f6ff3:  cld    
0x000f6ff4:  retl   

----------------
IN: 
0x000fd1fa:  mov    %ss,%edx
0x000fd1fd:  shl    $0x4,%edx
0x000fd201:  add    %edx,%esp
0x000fd204:  mov    $0xfd20d,%edx
0x000fd20a:  jmp    0xfd124

----------------
IN: 
0x000fd124:  mov    %eax,%ecx
0x000fd127:  cli    
0x000fd128:  cld    
0x000fd129:  mov    $0x8f,%eax
0x000fd12f:  out    %al,$0x70
0x000fd131:  in     $0x71,%al
0x000fd133:  in     $0x92,%al
0x000fd135:  or     $0x2,%al
0x000fd137:  out    %al,$0x92
0x000fd139:  lidtw  %cs:0x6690
0x000fd13f:  lgdtw  %cs:0x6650
0x000fd145:  mov    %cr0,%eax
0x000fd148:  or     $0x1,%eax
0x000fd14c:  mov    %eax,%cr0

----------------
IN: 
0x000fd14f:  ljmpl  $0x8,$0xfd157

----------------
IN: 
0x000fd157:  mov    $0x10,%eax
0x000fd15c:  mov    %eax,%ds

----------------
IN: 
0x000fd15e:  mov    %eax,%es

----------------
IN: 
0x000fd160:  mov    %eax,%ss

----------------
IN: 
0x000fd162:  mov    %eax,%fs

----------------
IN: 
0x000fd164:  mov    %eax,%gs
0x000fd166:  mov    %ecx,%eax
0x000fd168:  jmp    *%edx

----------------
IN: 
0x000fd20d:  ret    

----------------
IN: 
0x000f16a5:  mov    $0xf6644,%eax
0x000f16aa:  jmp    0xf0c4d

----------------
IN: 
0x000f0c4d:  mov    0x4(%eax),%edx
0x000f0c50:  lea    -0x4(%edx),%ecx
0x000f0c53:  cmp    %ecx,%eax
0x000f0c55:  je     0xf0c69

----------------
IN: 
0x000f0c69:  ret    

----------------
IN: 
0x07fe099e:  cmp    $0x3,%ebx
0x07fe09a1:  jbe    0x7fe09c6

----------------
IN: 
0x07fe09a3:  mov    %ebx,%ecx
0x07fe09a5:  cmp    $0x800,%ebx
0x07fe09ab:  jbe    0x7fe09b2

----------------
IN: 
0x07fe09ad:  mov    $0x800,%ecx
0x07fe09b2:  shr    $0x2,%ecx
0x07fe09b5:  lea    0x0(,%ecx,4),%eax
0x07fe09bc:  sub    %eax,%ebx
0x07fe09be:  mov    %ebp,%edi
0x07fe09c0:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe09c0:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe09c2:  mov    %edi,%ebp
0x07fe09c4:  jmp    0x7fe0999

----------------
IN: 
0x07fe0999:  call   0xf1682

----------------
IN: 
0x07fe09b2:  shr    $0x2,%ecx
0x07fe09b5:  lea    0x0(,%ecx,4),%eax
0x07fe09bc:  sub    %eax,%ebx
0x07fe09be:  mov    %ebp,%edi
0x07fe09c0:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe09c6:  test   %ebx,%ebx
0x07fe09c8:  je     0x7fe09d0

----------------
IN: 
0x07fe09d0:  pop    %ebx
0x07fe09d1:  pop    %esi
0x07fe09d2:  pop    %edi
0x07fe09d3:  pop    %ebp
0x07fe09d4:  ret    

----------------
IN: 
0x07fe48a7:  mov    %ebp,%edi
0x07fe48a9:  mov    %esi,%ecx
0x07fe48ab:  mov    $0x30,%edx
0x07fe48b0:  mov    0x14(%esp),%eax
0x07fe48b4:  call   0xf0dde

----------------
IN: 
0x07fe48b9:  or     $0xffffffff,%eax
0x07fe48bc:  test   %edi,%edi
0x07fe48be:  jne    0x7fe48d4

----------------
IN: 
0x07fe48d4:  mov    0x20(%esp),%esi
0x07fe48d8:  test   %esi,%esi
0x07fe48da:  je     0x7fe48f0

----------------
IN: 
0x07fe48f0:  movzwl 0x1a(%esp),%edx
0x07fe48f5:  mov    0x1c(%esp),%ecx
0x07fe48f9:  mov    %edi,%eax
0x07fe48fb:  call   0x7fe2577

----------------
IN: 
0x07fe2577:  push   %ebp
0x07fe2578:  push   %edi
0x07fe2579:  push   %esi
0x07fe257a:  push   %ebx
0x07fe257b:  mov    %eax,%esi
0x07fe257d:  cmpw   $0xaa55,(%eax)
0x07fe2582:  jne    0x7fe260a

----------------
IN: 
0x07fe2588:  mov    %edx,%edi
0x07fe258a:  mov    %ecx,%ebp
0x07fe258c:  call   0xf1e44

----------------
IN: 
0x000f1e44:  push   %esi
0x000f1e45:  push   %ebx
0x000f1e46:  sub    $0x10,%esp
0x000f1e49:  mov    %eax,%esi
0x000f1e4b:  movzbl 0x2(%eax),%ebx
0x000f1e4f:  xor    %edx,%edx
0x000f1e51:  test   %bl,%bl
0x000f1e53:  je     0xf1e8f

----------------
IN: 
0x000f1e55:  shl    $0x9,%ebx
0x000f1e58:  mov    %ebx,%edx
0x000f1e5a:  call   0xf10c1

----------------
IN: 
0x000f1e5f:  mov    $0x1,%edx
0x000f1e64:  test   %al,%al
0x000f1e66:  je     0xf1e8f

----------------
IN: 
0x000f1e8f:  mov    %edx,%eax
0x000f1e91:  add    $0x10,%esp
0x000f1e94:  pop    %ebx
0x000f1e95:  pop    %esi
0x000f1e96:  ret    

----------------
IN: 
0x07fe2591:  test   %eax,%eax
0x07fe2593:  je     0x7fe260a

----------------
IN: 
0x07fe2595:  movzbl 0x2(%esi),%eax
0x07fe2599:  shl    $0x9,%eax
0x07fe259c:  call   0x7fdf72e

----------------
IN: 
0x07fe25a1:  mov    %eax,%ebx
0x07fe25a3:  mov    $0x7fee3eb,%edx
0x07fe25a8:  mov    $0x83,%eax
0x07fe25ad:  test   %ebx,%ebx
0x07fe25af:  je     0x7fe2605

----------------
IN: 
0x07fe25b1:  cmp    %esi,%ebx
0x07fe25b3:  je     0x7fe25c5

----------------
IN: 
0x07fe25c5:  test   %ebp,%ebp
0x07fe25c7:  jne    0x7fe25db

----------------
IN: 
0x07fe25db:  movzwl %di,%ecx
0x07fe25de:  mov    $0x3,%edx
0x07fe25e3:  mov    %ebx,%eax
0x07fe25e5:  call   0xf1dc1

----------------
IN: 
0x000f1dc1:  push   %edi
0x000f1dc2:  push   %esi
0x000f1dc3:  push   %ebx
0x000f1dc4:  sub    $0x34,%esp
0x000f1dc7:  mov    %eax,%ebx
0x000f1dc9:  mov    %edx,%esi
0x000f1dcb:  mov    %ecx,%edi
0x000f1dcd:  shr    $0x4,%ebx
0x000f1dd0:  movzwl %dx,%eax
0x000f1dd3:  mov    %eax,0x8(%esp)
0x000f1dd7:  movzwl %bx,%eax
0x000f1dda:  mov    %eax,0x4(%esp)
0x000f1dde:  movl   $0xf406c,(%esp)
0x000f1de5:  call   0xf1787

----------------
IN: 
0x000f1dea:  mov    $0x26,%ecx
0x000f1def:  xor    %edx,%edx
0x000f1df1:  lea    0xe(%esp),%eax
0x000f1df5:  call   0xf0d7a

----------------
IN: 
0x000f1dfa:  movw   $0x200,0x32(%esp)
0x000f1e01:  mov    %di,0x2a(%esp)
0x000f1e06:  movw   $0xffff,0x1e(%esp)
0x000f1e0d:  movw   $0xffff,0x22(%esp)
0x000f1e14:  movw   $0xf000,0x10(%esp)
0x000f1e1b:  mov    $0xf6550,%eax
0x000f1e20:  mov    %ax,0x12(%esp)
0x000f1e25:  mov    %si,0x2e(%esp)
0x000f1e2a:  mov    %bx,0x30(%esp)
0x000f1e2f:  lea    0xe(%esp),%eax
0x000f1e33:  call   0xf166c

----------------
IN: 
0x000f166c:  movzwl 0xef7ec,%edx
0x000f1673:  imul   $0xfffffff0,%edx,%ecx
0x000f1676:  add    %ecx,%eax
0x000f1678:  mov    $0xf6f2b,%ecx
0x000f167d:  jmp    0xf1647

----------------
IN: 
0x000f6f2b:  push   %edi
0x000f6f2d:  push   %esi
0x000f6f2f:  push   %ebx
0x000f6f31:  mov    %eax,%ebx
0x000f6f34:  mov    %edx,%esi
0x000f6f37:  calll  0xf6c75

----------------
IN: 
0x000f6f3d:  test   %eax,%eax
0x000f6f40:  je     0xf6f58

----------------
IN: 
0x000f6f58:  mov    %ebx,%eax
0x000f6f5b:  mov    %esi,%edx
0x000f6f5e:  calll  0xfd20e

----------------
IN: 
0x000fd20e:  push   %ebp
0x000fd210:  push   %eax
0x000fd212:  push   %edx
0x000fd214:  mov    %dx,%ds
0x000fd216:  push   %cs
0x000fd217:  push   $0xd250
0x000fd21a:  addr32 pushw 0x24(%eax)
0x000fd21e:  addr32 pushl 0x20(%eax)
0x000fd223:  addr32 mov 0x4(%eax),%edi
0x000fd228:  addr32 mov 0x8(%eax),%esi
0x000fd22d:  addr32 mov 0xc(%eax),%ebp
0x000fd232:  addr32 mov 0x10(%eax),%ebx
0x000fd237:  addr32 mov 0x14(%eax),%edx
0x000fd23c:  addr32 mov 0x18(%eax),%ecx
0x000fd241:  addr32 mov 0x2(%eax),%es
0x000fd245:  addr32 pushl 0x1c(%eax)
0x000fd24a:  addr32 mov (%eax),%ds
0x000fd24d:  pop    %eax
0x000fd24f:  iret   

Servicing hardware INT=0x08
----------------
IN: 
0x000ffea5:  pushl  $0xe990
0x000ffeab:  jmp    0xfd4a9

----------------
IN: 
0x000fd4a9:  cli    
0x000fd4aa:  cld    
0x000fd4ab:  push   %ds
0x000fd4ac:  push   %eax
0x000fd4ae:  mov    $0xe000,%eax
0x000fd4b4:  mov    %ax,%ds
0x000fd4b6:  mov    0xf7f0,%eax
0x000fd4ba:  sub    $0x18,%eax
0x000fd4be:  addr32 popl (%eax)
0x000fd4c2:  addr32 popw 0x4(%eax)
0x000fd4c6:  addr32 mov %es,0x6(%eax)
0x000fd4ca:  addr32 mov %ecx,0x8(%eax)
0x000fd4cf:  pop    %ecx
0x000fd4d1:  addr32 mov %edx,0xc(%eax)
0x000fd4d6:  addr32 mov %esp,0x10(%eax)
0x000fd4db:  addr32 mov %ss,0x14(%eax)
0x000fd4df:  mov    %ds,%dx
0x000fd4e1:  mov    %dx,%ss

----------------
IN: 
0x000fd4e3:  mov    %eax,%esp

----------------
IN: 
0x000fd4e6:  calll  *%ecx

----------------
IN: 
0x000fe990:  push   %ebp
0x000fe992:  push   %edi
0x000fe994:  push   %esi
0x000fe996:  push   %ebx
0x000fe998:  sub    $0x34,%esp
0x000fe99c:  mov    $0x40,%eax
0x000fe9a2:  mov    %ax,%es
0x000fe9a4:  mov    %es:0x6c,%edx
0x000fe9aa:  inc    %edx
0x000fe9ac:  cmp    $0x1800af,%edx
0x000fe9b3:  jbe    0xfe9ca

----------------
IN: 
0x000fe9ca:  mov    $0x40,%eax
0x000fe9d0:  mov    %ax,%es
0x000fe9d2:  mov    %edx,%es:0x6c
0x000fe9d8:  mov    %ax,%es
0x000fe9da:  mov    %es:0x40,%dl
0x000fe9df:  test   %dl,%dl
0x000fe9e1:  je     0xfea11

----------------
IN: 
0x000fea11:  mov    %cs:0x6368,%esi
0x000fea17:  test   %esi,%esi
0x000fea1a:  je     0xfeb3c

----------------
IN: 
0x000feb3c:  mov    %cs:0x6364,%esi
0x000feb42:  test   %esi,%esi
0x000feb45:  je     0xfebaf

----------------
IN: 
0x000febaf:  mov    $0x26,%ecx
0x000febb5:  xor    %edx,%edx
0x000febb8:  addr32 lea 0xe(%esp),%eax
0x000febbe:  calll  0xf6c99

----------------
IN: 
0x000f6c99:  test   %ecx,%ecx
0x000f6c9c:  je     0xf6ca6

----------------
IN: 
0x000f6c9e:  dec    %ecx
0x000f6ca0:  addr32 mov %dl,(%eax,%ecx,1)
0x000f6ca4:  jmp    0xf6c99

----------------
IN: 
0x000f6ca6:  retl   

----------------
IN: 
0x000febc4:  addr32 movw $0x200,0x32(%esp)
0x000febcb:  addr32 mov %cs,0x30(%esp)
0x000febd0:  mov    $0xd2b0,%eax
0x000febd6:  addr32 mov %ax,0x2e(%esp)
0x000febdb:  mov    %ss,%dx
0x000febdd:  movzwl %dx,%edx
0x000febe1:  addr32 lea 0xe(%esp),%eax
0x000febe7:  calll  0xf6f2b

----------------
IN: 
0x000f6c87:  mov    %esp,%eax
0x000f6c8a:  cmp    $0xf7f8,%eax
0x000f6c90:  seta   %al
0x000f6c93:  movzbl %al,%eax
0x000f6c97:  retl   

----------------
IN: 
0x000f6f42:  movzwl %si,%edx
0x000f6f46:  mov    $0x6f2b,%ecx
0x000f6f4c:  mov    %ebx,%eax
0x000f6f4f:  pop    %ebx
0x000f6f51:  pop    %esi
0x000f6f53:  pop    %edi
0x000f6f55:  jmp    0xf6ec9

----------------
IN: 
0x000f6ec9:  push   %edi
0x000f6ecb:  push   %esi
0x000f6ecd:  push   %ebx
0x000f6ecf:  push   %ebx
0x000f6ed1:  mov    %eax,%ebx
0x000f6ed4:  addr32 mov %edx,(%esp)
0x000f6ed9:  mov    %ecx,%esi
0x000f6edc:  calll  0xf6c75

----------------
IN: 
0x000f6ee2:  test   %eax,%eax
0x000f6ee5:  addr32 mov (%esp),%edx
0x000f6eea:  mov    %ebx,%eax
0x000f6eed:  jne    0xf6ef4

----------------
IN: 
0x000f6ef4:  mov    %esi,%ecx
0x000f6ef7:  mov    -0x810,%esi
0x000f6efc:  mov    %ss,%bx
0x000f6efe:  mov    %esp,-0x810
0x000f6f03:  addr32 mov -0x4(%esi),%edi
0x000f6f08:  mov    %di,%ss

----------------
IN: 
0x000f6f0a:  addr32 mov -0x8(%esi),%sp

----------------
IN: 
0x000f6f0e:  mov    %di,%ds
0x000f6f10:  calll  *%ecx

----------------
IN: 
0x000fd2b0:  int    $0x1c

----------------
IN: 
0x000fff53:  iret   

----------------
IN: 
0x000fd2b2:  lret   

----------------
IN: 
0x000fd250:  pushf  
0x000fd251:  cli    
0x000fd252:  cld    
0x000fd253:  push   %ds
0x000fd254:  push   %eax
0x000fd256:  addr32 mov 0x8(%esp),%ds
0x000fd25b:  addr32 mov 0xc(%esp),%eax
0x000fd261:  addr32 popl 0x1c(%eax)
0x000fd266:  addr32 popw 0x2(%eax)
0x000fd26a:  addr32 popw 0x24(%eax)
0x000fd26e:  addr32 mov %edi,0x4(%eax)
0x000fd273:  addr32 mov %esi,0x8(%eax)
0x000fd278:  addr32 mov %ebp,0xc(%eax)
0x000fd27d:  addr32 mov %ebx,0x10(%eax)
0x000fd282:  addr32 mov %edx,0x14(%eax)
0x000fd287:  addr32 mov %ecx,0x18(%eax)
0x000fd28c:  addr32 mov %es,(%eax)
0x000fd28f:  mov    %ss,%cx
0x000fd291:  mov    %cx,%ds
0x000fd293:  pop    %edx
0x000fd295:  pop    %eax
0x000fd297:  pop    %ebp
0x000fd299:  retl   

----------------
IN: 
0x000f6f64:  pop    %ebx
0x000f6f66:  pop    %esi
0x000f6f68:  pop    %edi
0x000f6f6a:  retl   

----------------
IN: 
0x000f6f13:  mov    %bx,%ds
0x000f6f15:  mov    %bx,%ss

----------------
IN: 
0x000f6f17:  mov    -0x810,%esp

----------------
IN: 
0x000f6f1c:  mov    %esi,-0x810
0x000f6f21:  pop    %edx
0x000f6f23:  pop    %ebx
0x000f6f25:  pop    %esi
0x000f6f27:  pop    %edi
0x000f6f29:  retl   

----------------
IN: 
0x000febed:  mov    $0x20,%al
0x000febef:  out    %al,$0x20
0x000febf1:  add    $0x34,%esp
0x000febf5:  pop    %ebx
0x000febf7:  pop    %esi
0x000febf9:  pop    %edi
0x000febfb:  pop    %ebp
0x000febfd:  retl   

----------------
IN: 
0x000fd4e9:  mov    %esp,%eax
0x000fd4ec:  addr32 mov 0x14(%eax),%ss

----------------
IN: 
0x000fd4f0:  addr32 mov 0x10(%eax),%esp

----------------
IN: 
0x000fd4f5:  addr32 mov 0xc(%eax),%edx
0x000fd4fa:  addr32 mov 0x8(%eax),%ecx
0x000fd4ff:  addr32 mov 0x6(%eax),%es
0x000fd503:  addr32 pushw 0x4(%eax)
0x000fd507:  addr32 pushl (%eax)
0x000fd50b:  pop    %eax
0x000fd50d:  pop    %ds
0x000fd50e:  iret   

----------------
IN: 
0x000c0003:  jmp    0xc4b24

----------------
IN: 
0x000c4b24:  cli    
0x000c4b25:  cld    
0x000c4b26:  push   %eax
0x000c4b28:  push   %ecx
0x000c4b2a:  push   %edx
0x000c4b2c:  push   %ebx
0x000c4b2e:  push   %ebp
0x000c4b30:  push   %esi
0x000c4b32:  push   %edi
0x000c4b34:  push   %es
0x000c4b35:  push   %ds
0x000c4b36:  mov    %ss,%ax
0x000c4b38:  mov    %ax,%ds
0x000c4b3a:  mov    %esp,%ebx
0x000c4b3d:  movzwl %sp,%esp
0x000c4b41:  mov    %esp,%eax
0x000c4b44:  mov    $0x8000,%ecx
0x000c4b4a:  addr32 lea (%ecx,%ecx,1),%ecx
0x000c4b4f:  cmp    $0x10000,%ecx
0x000c4b56:  jne    0xc4ad3

----------------
IN: 
0x000c4b5a:  push   %ax
0x000c4b5b:  call   0xc2ad0

----------------
IN: 
0x000c2ad0:  push   %ebp
0x000c2ad2:  mov    %esp,%ebp
0x000c2ad5:  push   %edi
0x000c2ad7:  push   %esi
0x000c2ad9:  push   %ebx
0x000c2adb:  sub    $0x10,%esp
0x000c2adf:  mov    %eax,%ebx
0x000c2ae2:  pushl  $0x8d84
0x000c2ae8:  pushl  $0x4d6e
0x000c2aee:  push   %ax
0x000c2aef:  call   0xc22bd

----------------
IN: 
0x000c22bd:  push   %ebp
0x000c22bf:  mov    %esp,%ebp
0x000c22c2:  push   %edi
0x000c22c4:  push   %esi
0x000c22c6:  push   %ebx
0x000c22c8:  sub    $0x8,%esp
0x000c22cc:  addr32 lea 0xc(%ebp),%ebx
0x000c22d1:  addr32 mov 0x8(%ebp),%eax
0x000c22d6:  addr32 mov %cs:(%eax),%al
0x000c22da:  test   %al,%al
0x000c22dc:  je     0xc24bb

----------------
IN: 
0x000c22e0:  cmp    $0x25,%al
0x000c22e2:  je     0xc22ec

----------------
IN: 
0x000c22e4:  mov    %cs:-0x725c,%dx
0x000c22e9:  jmp    0xc24a3

----------------
IN: 
0x000c24a3:  out    %al,(%dx)
0x000c24a4:  addr32 mov 0x8(%ebp),%edi
0x000c24a9:  jmp    0xc24ae

----------------
IN: 
0x000c24ae:  addr32 lea 0x1(%edi),%eax
0x000c24b3:  addr32 mov %eax,0x8(%ebp)
0x000c24b8:  jmp    0xc22d1

----------------
IN: 
0x000c22d1:  addr32 mov 0x8(%ebp),%eax
0x000c22d6:  addr32 mov %cs:(%eax),%al
0x000c22da:  test   %al,%al
0x000c22dc:  je     0xc24bb

----------------
IN: 
0x000c22ec:  addr32 mov 0x8(%ebp),%eax
0x000c22f1:  addr32 lea 0x1(%eax),%edi
0x000c22f6:  addr32 movb $0x20,-0x11(%ebp)
0x000c22fb:  xor    %edx,%edx
0x000c22fe:  addr32 mov %cs:(%edi),%al
0x000c2302:  addr32 mov %al,-0x10(%ebp)
0x000c2306:  mov    %eax,%esi
0x000c2309:  sub    $0x30,%esi
0x000c230d:  mov    %esi,%ecx
0x000c2310:  cmp    $0x9,%cl
0x000c2313:  ja     0xc233c

----------------
IN: 
0x000c233c:  mov    %edi,%esi
0x000c233f:  xor    %ecx,%ecx
0x000c2342:  cmp    $0x6c,%al
0x000c2344:  jne    0xc235c

----------------
IN: 
0x000c235c:  cmp    $0x64,%al
0x000c235e:  je     0xc23b5

----------------
IN: 
0x000c2360:  jg     0xc237f

----------------
IN: 
0x000c237f:  cmp    $0x73,%al
0x000c2381:  je     0xc2481

----------------
IN: 
0x000c2481:  addr32 lea 0x4(%ebx),%esi
0x000c2486:  addr32 mov (%ebx),%ecx
0x000c248a:  addr32 mov %cs:(%ecx),%al
0x000c248e:  test   %al,%al
0x000c2490:  je     0xc24ab

----------------
IN: 
0x000c2492:  mov    %cs:-0x725c,%dx
0x000c2497:  out    %al,(%dx)
0x000c2498:  inc    %ecx
0x000c249a:  jmp    0xc248a

----------------
IN: 
0x000c248a:  addr32 mov %cs:(%ecx),%al
0x000c248e:  test   %al,%al
0x000c2490:  je     0xc24ab

----------------
IN: 
0x000c24ab:  mov    %esi,%ebx
0x000c24ae:  addr32 lea 0x1(%edi),%eax
0x000c24b3:  addr32 mov %eax,0x8(%ebp)
0x000c24b8:  jmp    0xc22d1

----------------
IN: 
0x000c24bb:  pop    %eax
0x000c24bd:  pop    %edx
0x000c24bf:  pop    %ebx
0x000c24c1:  pop    %esi
0x000c24c3:  pop    %edi
0x000c24c5:  pop    %ebp
0x000c24c7:  ret    $0x2

----------------
IN: 
0x000c2af2:  pop    %esi
0x000c2af4:  pop    %edi
0x000c2af6:  pushl  $0x4c80
0x000c2afc:  pushl  $0x4d8d
0x000c2b02:  push   %ax
0x000c2b03:  call   0xc22bd

----------------
IN: 
0x000c2b06:  pop    %eax
0x000c2b08:  pop    %edx
0x000c2b0a:  mov    %ebx,%eax
0x000c2b0d:  push   %ax
0x000c2b0e:  call   0xc24ca

----------------
IN: 
0x000c24ca:  push   %ebp
0x000c24cc:  mov    %esp,%ebp
0x000c24cf:  push   %ebx
0x000c24d1:  mov    %eax,%ebx
0x000c24d4:  test   %eax,%eax
0x000c24d7:  jne    0xc24e7

----------------
IN: 
0x000c24e7:  mov    %ss,%ax
0x000c24e9:  movzwl %ax,%eax
0x000c24ed:  push   %eax
0x000c24ef:  addr32 movzwl 0x2(%ebx),%eax
0x000c24f5:  push   %eax
0x000c24f7:  addr32 movzwl (%ebx),%eax
0x000c24fc:  push   %eax
0x000c24fe:  addr32 pushl 0x14(%ebx)
0x000c2503:  addr32 pushl 0x18(%ebx)
0x000c2508:  addr32 pushl 0x10(%ebx)
0x000c250d:  addr32 pushl 0x1c(%ebx)
0x000c2512:  pushl  $0x4c91
0x000c2518:  push   %ax
0x000c2519:  call   0xc22bd

----------------
IN: 
0x000c2315:  cmp    $0x30,%al
0x000c2317:  jne    0xc231e

----------------
IN: 
0x000c2319:  test   %edx,%edx
0x000c231c:  je     0xc2330

----------------
IN: 
0x000c2330:  addr32 movb $0x30,-0x11(%ebp)
0x000c2335:  xor    %edx,%edx
0x000c2338:  inc    %edi
0x000c233a:  jmp    0xc22fe

----------------
IN: 
0x000c22fe:  addr32 mov %cs:(%edi),%al
0x000c2302:  addr32 mov %al,-0x10(%ebp)
0x000c2306:  mov    %eax,%esi
0x000c2309:  sub    $0x30,%esi
0x000c230d:  mov    %esi,%ecx
0x000c2310:  cmp    $0x9,%cl
0x000c2313:  ja     0xc233c

----------------
IN: 
0x000c231e:  imul   $0xa,%edx,%edx
0x000c2322:  addr32 movsbl -0x10(%ebp),%ecx
0x000c2328:  addr32 lea -0x30(%edx,%ecx,1),%edx
0x000c232e:  jmp    0xc2338

----------------
IN: 
0x000c2338:  inc    %edi
0x000c233a:  jmp    0xc22fe

----------------
IN: 
0x000c2385:  jg     0xc23aa

----------------
IN: 
0x000c23aa:  cmp    $0x75,%al
0x000c23ac:  je     0xc23dc

----------------
IN: 
0x000c23ae:  cmp    $0x78,%al
0x000c23b0:  je     0xc23f5

----------------
IN: 
0x000c23f5:  addr32 mov (%ebx),%eax
0x000c23f9:  addr32 mov %eax,-0x10(%ebp)
0x000c23fe:  test   %cl,%cl
0x000c2400:  addr32 movsbl -0x11(%ebp),%ecx
0x000c2406:  je     0xc2430

----------------
IN: 
0x000c2430:  addr32 lea 0x4(%ebx),%esi
0x000c2435:  addr32 mov -0x10(%ebp),%eax
0x000c243a:  push   %ax
0x000c243b:  call   0xc0dfe

----------------
IN: 
0x000c0dfe:  push   %ebp
0x000c0e00:  mov    %esp,%ebp
0x000c0e03:  push   %edi
0x000c0e05:  push   %esi
0x000c0e07:  push   %ebx
0x000c0e09:  mov    %eax,%edi
0x000c0e0c:  mov    %cl,%al
0x000c0e0e:  mov    %edi,%ecx
0x000c0e11:  mov    $0x1,%ebx
0x000c0e17:  shr    $0x4,%ecx
0x000c0e1b:  je     0xc0e21

----------------
IN: 
0x000c0e1d:  inc    %ebx
0x000c0e1f:  jmp    0xc0e17

----------------
IN: 
0x000c0e17:  shr    $0x4,%ecx
0x000c0e1b:  je     0xc0e21

----------------
IN: 
0x000c0e21:  mov    %edx,%esi
0x000c0e24:  sub    %ebx,%esi
0x000c0e27:  test   %esi,%esi
0x000c0e2a:  jle    0xc0e36

----------------
IN: 
0x000c0e2c:  mov    %cs:-0x725c,%dx
0x000c0e31:  out    %al,(%dx)
0x000c0e32:  dec    %esi
0x000c0e34:  jmp    0xc0e27

----------------
IN: 
0x000c0e27:  test   %esi,%esi
0x000c0e2a:  jle    0xc0e36

----------------
IN: 
0x000c0e36:  mov    %ebx,%edx
0x000c0e39:  mov    %edi,%eax
0x000c0e3c:  pop    %ebx
0x000c0e3e:  pop    %esi
0x000c0e40:  pop    %edi
0x000c0e42:  pop    %ebp
0x000c0e44:  jmp    0xc0d5d

----------------
IN: 
0x000c0d5d:  push   %ebp
0x000c0d5f:  mov    %esp,%ebp
0x000c0d62:  push   %ebx
0x000c0d64:  mov    %eax,%ebx
0x000c0d67:  cmp    $0x4,%edx
0x000c0d6b:  je     0xc0dc3

----------------
IN: 
0x000c0d6d:  jg     0xc0d7d

----------------
IN: 
0x000c0d6f:  cmp    $0x2,%edx
0x000c0d73:  je     0xc0de1

----------------
IN: 
0x000c0de1:  mov    %ebx,%eax
0x000c0de4:  shr    $0x4,%eax
0x000c0de8:  and    $0xf,%eax
0x000c0dec:  push   %ax
0x000c0ded:  call   0xc0d3a

----------------
IN: 
0x000c0d3a:  push   %ebp
0x000c0d3c:  mov    %esp,%ebp
0x000c0d3f:  mov    %eax,%edx
0x000c0d42:  addr32 lea 0x57(%eax),%eax
0x000c0d47:  cmp    $0x9,%edx
0x000c0d4b:  ja     0xc0d52

----------------
IN: 
0x000c0d4d:  addr32 lea 0x30(%edx),%eax
0x000c0d52:  mov    %cs:-0x725c,%dx
0x000c0d57:  out    %al,(%dx)
0x000c0d58:  pop    %ebp
0x000c0d5a:  ret    $0x2

----------------
IN: 
0x000c0df0:  mov    %ebx,%eax
0x000c0df3:  and    $0xf,%eax
0x000c0df7:  pop    %ebx
0x000c0df9:  pop    %ebp
0x000c0dfb:  jmp    0xc0d3a

----------------
IN: 
0x000c243e:  jmp    0xc24ab

----------------
IN: 
0x000c0dc3:  mov    %ebx,%eax
0x000c0dc6:  shr    $0xc,%eax
0x000c0dca:  and    $0xf,%eax
0x000c0dce:  push   %ax
0x000c0dcf:  call   0xc0d3a

----------------
IN: 
0x000c0d52:  mov    %cs:-0x725c,%dx
0x000c0d57:  out    %al,(%dx)
0x000c0d58:  pop    %ebp
0x000c0d5a:  ret    $0x2

----------------
IN: 
0x000c0dd2:  mov    %ebx,%eax
0x000c0dd5:  shr    $0x8,%eax
0x000c0dd9:  and    $0xf,%eax
0x000c0ddd:  push   %ax
0x000c0dde:  call   0xc0d3a

----------------
IN: 
0x000c0d75:  jg     0xc0dd2

----------------
IN: 
0x000c0d77:  dec    %edx
0x000c0d79:  je     0xc0df0

----------------
IN: 
0x000c251c:  add    $0x20,%esp
0x000c2520:  addr32 movzwl 0x24(%ebx),%eax
0x000c2526:  push   %eax
0x000c2528:  addr32 movzwl 0x20(%ebx),%eax
0x000c252e:  push   %eax
0x000c2530:  addr32 movzwl 0x22(%ebx),%eax
0x000c2536:  push   %eax
0x000c2538:  addr32 lea 0x26(%ebx),%eax
0x000c253d:  push   %eax
0x000c253f:  addr32 pushl 0xc(%ebx)
0x000c2544:  addr32 pushl 0x4(%ebx)
0x000c2549:  addr32 pushl 0x8(%ebx)
0x000c254e:  pushl  $0x4ccc
0x000c2554:  push   %ax
0x000c2555:  call   0xc22bd

----------------
IN: 
0x000c2558:  add    $0x20,%esp
0x000c255c:  addr32 mov -0x4(%ebp),%ebx
0x000c2561:  mov    %ebp,%esp
0x000c2564:  pop    %ebp
0x000c2566:  ret    $0x2

----------------
IN: 
0x000c2b11:  mov    %cs:0x8608,%eax
0x000c2b16:  test   %eax,%eax
0x000c2b19:  jne    0xc2b63

----------------
IN: 
0x000c2b1b:  addr32 movzwl 0x1c(%ebx),%ebx
0x000c2b21:  mov    %ebx,%ecx
0x000c2b24:  shl    $0x8,%ecx
0x000c2b28:  or     $0x80000000,%ecx
0x000c2b2f:  mov    $0xcf8,%edx
0x000c2b35:  mov    %ecx,%eax
0x000c2b38:  out    %eax,(%dx)
0x000c2b3a:  mov    $0xfc,%dl
0x000c2b3c:  in     (%dx),%ax
0x000c2b3d:  mov    %cs:-0x79ec,%si
0x000c2b42:  cmp    %si,%ax
0x000c2b44:  jne    0xc2b63

----------------
IN: 
0x000c2b46:  mov    $0xf8,%dl
0x000c2b48:  mov    %ecx,%eax
0x000c2b4b:  out    %eax,(%dx)
0x000c2b4d:  mov    $0xfe,%dl
0x000c2b4f:  in     (%dx),%ax
0x000c2b50:  mov    %cs:-0x79ea,%cx
0x000c2b55:  cmp    %cx,%ax
0x000c2b57:  jne    0xc2b63

----------------
IN: 
0x000c2b59:  mov    %cs,%ax
0x000c2b5b:  mov    %ax,%es
0x000c2b5d:  mov    %ebx,%es:-0x79f4
0x000c2b63:  mov    $0x3c2,%edx
0x000c2b69:  mov    $0xc3,%al
0x000c2b6b:  out    %al,(%dx)
0x000c2b6c:  mov    $0xc4,%dl
0x000c2b6e:  mov    $0x204,%eax
0x000c2b74:  out    %ax,(%dx)
0x000c2b75:  addr32 mov %edx,-0x10(%ebp)
0x000c2b7a:  pushl  $0x4d98
0x000c2b80:  push   %ax
0x000c2b81:  call   0xc22bd

----------------
IN: 
0x000c2b84:  pop    %ecx
0x000c2b86:  mov    $0xffff9206,%eax
0x000c2b8c:  addr32 mov -0x10(%ebp),%edx
0x000c2b91:  out    %ax,(%dx)
0x000c2b92:  mov    $0x6,%al
0x000c2b94:  out    %al,(%dx)
0x000c2b95:  mov    $0x3c5,%ebx
0x000c2b9b:  mov    %ebx,%edx
0x000c2b9e:  in     (%dx),%al
0x000c2b9f:  cmp    $0x12,%al
0x000c2ba1:  jne    0xc2c6e

----------------
IN: 
0x000c2ba5:  pushl  $0x4da5
0x000c2bab:  push   %ax
0x000c2bac:  call   0xc22bd

----------------
IN: 
0x000c2baf:  pop    %edx
0x000c2bb1:  mov    $0x3c4,%ecx
0x000c2bb7:  mov    $0xf,%al
0x000c2bb9:  mov    %ecx,%edx
0x000c2bbc:  out    %al,(%dx)
0x000c2bbd:  mov    %ebx,%edx
0x000c2bc0:  in     (%dx),%al
0x000c2bc1:  and    $0x18,%eax
0x000c2bc5:  shl    $0x8,%eax
0x000c2bc9:  or     $0xa,%eax
0x000c2bcd:  mov    %ecx,%edx
0x000c2bd0:  out    %ax,(%dx)
0x000c2bd1:  mov    $0x7,%eax
0x000c2bd7:  out    %ax,(%dx)
0x000c2bd8:  mov    $0xce,%dl
0x000c2bda:  mov    $0x431,%eax
0x000c2be0:  out    %ax,(%dx)
0x000c2be1:  mov    $0x31,%eax
0x000c2be7:  out    %ax,(%dx)
0x000c2be8:  mov    %cs:0x8608,%eax
0x000c2bed:  test   %eax,%eax
0x000c2bf0:  jne    0xc2c7d

----------------
IN: 
0x000c2bf4:  mov    %cs:-0x79f4,%edx
0x000c2bfa:  test   %edx,%edx
0x000c2bfd:  js     0xc2c1d

----------------
IN: 
0x000c2bff:  movzwl %dx,%eax
0x000c2c03:  shl    $0x8,%eax
0x000c2c07:  or     $0x80000010,%eax
0x000c2c0d:  mov    $0xcf8,%edx
0x000c2c13:  out    %eax,(%dx)
0x000c2c15:  mov    $0xfc,%dl
0x000c2c17:  in     (%dx),%eax
0x000c2c19:  and    $0xfffffff0,%eax
0x000c2c1d:  mov    %cs,%dx
0x000c2c1f:  mov    %dx,%es
0x000c2c21:  mov    %eax,%es:0x5fe8
0x000c2c26:  mov    $0x3c4,%edx
0x000c2c2c:  mov    $0xf,%al
0x000c2c2e:  out    %al,(%dx)
0x000c2c2f:  mov    $0xc5,%dl
0x000c2c31:  in     (%dx),%al
0x000c2c32:  mov    %al,%cl
0x000c2c34:  shr    $0x3,%cl
0x000c2c37:  and    $0x3,%ecx
0x000c2c3b:  cmp    $0x3,%cl
0x000c2c3e:  jne    0xc2c46

----------------
IN: 
0x000c2c40:  mov    $0x40,%bl
0x000c2c42:  test   %al,%al
0x000c2c44:  js     0xc2c4f

----------------
IN: 
0x000c2c4f:  mov    %cs,%dx
0x000c2c51:  mov    %dx,%es
0x000c2c53:  movzbl %bl,%eax
0x000c2c57:  shl    $0x10,%eax
0x000c2c5b:  mov    %eax,%es:0x5ff0
0x000c2c60:  mov    %dx,%es
0x000c2c62:  mov    $0x10,%eax
0x000c2c68:  mov    %ax,%es:0x5fe4
0x000c2c6c:  jmp    0xc2c7d

----------------
IN: 
0x000c2c7d:  mov    %cs:0x8608,%eax
0x000c2c82:  test   %eax,%eax
0x000c2c85:  jne    0xc2efa

----------------
IN: 
0x000c2c89:  mov    $0x40,%eax
0x000c2c8f:  mov    %ax,%es
0x000c2c91:  mov    %es:0x10,%dx
0x000c2c96:  mov    %ax,%es
0x000c2c98:  and    $0xffffffcf,%edx
0x000c2c9c:  or     $0x20,%edx
0x000c2ca0:  mov    %dx,%es:0x10
0x000c2ca5:  mov    %ax,%es
0x000c2ca7:  mov    $0x10,%edx
0x000c2cad:  mov    %dx,%es:0x85
0x000c2cb2:  mov    %ax,%es
0x000c2cb4:  mov    $0x60,%dl
0x000c2cb6:  mov    %dl,%es:0x87
0x000c2cbb:  mov    %ax,%es
0x000c2cbd:  mov    $0xf9,%dl
0x000c2cbf:  mov    %dl,%es:0x88
0x000c2cc4:  mov    %ax,%es
0x000c2cc6:  mov    $0x51,%dl
0x000c2cc8:  mov    %dl,%es:0x89
0x000c2ccd:  mov    %ax,%es
0x000c2ccf:  mov    $0x9,%al
0x000c2cd1:  mov    %al,%es:0x65
0x000c2cd5:  mov    %cs,%dx
0x000c2cd7:  mov    %edx,%ecx
0x000c2cda:  shl    $0x10,%ecx
0x000c2cde:  mov    $0x8628,%eax
0x000c2ce4:  movzwl %ax,%eax
0x000c2ce8:  or     %ecx,%eax
0x000c2ceb:  mov    %dx,%es
0x000c2ced:  mov    %eax,%es:0x8d68
0x000c2cf2:  addr32 movl $0x8628,-0x10(%ebp)
0x000c2cfb:  addr32 movl $0x0,-0x14(%ebp)
0x000c2d04:  addr32 cmpl $0x1d,-0x14(%ebp)
0x000c2d0a:  je     0xc2e95

----------------
IN: 
0x000c2d0e:  addr32 mov -0x14(%ebp),%eax
0x000c2d13:  addr32 mov %cs:0x4f38(%eax),%dl
0x000c2d1b:  movzbl %dl,%edx
0x000c2d1f:  mov    $0x5598,%eax
0x000c2d25:  test   %edx,%edx
0x000c2d28:  je     0xc2e87

----------------
IN: 
0x000c2e87:  addr32 incl -0x14(%ebp)
0x000c2e8c:  addr32 addl $0x40,-0x10(%ebp)
0x000c2e92:  jmp    0xc2d04

----------------
IN: 
0x000c2d04:  addr32 cmpl $0x1d,-0x14(%ebp)
0x000c2d0a:  je     0xc2e95

----------------
IN: 
0x000c2d2c:  cmp    $0x5858,%eax
0x000c2d32:  je     0xc2e87

----------------
IN: 
0x000c2d36:  mov    %eax,%ebx
0x000c2d39:  addr32 mov %cs:(%eax),%cx
0x000c2d3d:  addr32 lea 0x2c(%eax),%eax
0x000c2d42:  movzwl %cx,%ecx
0x000c2d46:  cmp    %edx,%ecx
0x000c2d49:  jne    0xc2d2c

----------------
IN: 
0x000c2d4b:  cmp    $0xfffffffe,%ebx
0x000c2d4f:  je     0xc2e87

----------------
IN: 
0x000c2d53:  addr32 mov %cs:0x4(%ebx),%si
0x000c2d58:  movzwl %si,%eax
0x000c2d5c:  addr32 mov %eax,-0x18(%ebp)
0x000c2d61:  addr32 mov %cs:0x6(%ebx),%ax
0x000c2d66:  addr32 mov %ax,-0x1c(%ebp)
0x000c2d6a:  movzwl %ax,%ecx
0x000c2d6e:  addr32 mov %cs:0x2(%ebx),%dl
0x000c2d73:  addr32 mov %dl,-0x1a(%ebp)
0x000c2d77:  addr32 mov %cs:0xa(%ebx),%al
0x000c2d7c:  addr32 mov %al,-0x19(%ebp)
0x000c2d80:  test   %dl,%dl
0x000c2d82:  jne    0xc2d9c

----------------
IN: 
0x000c2d9c:  addr32 mov %cs:0x9(%ebx),%al
0x000c2da1:  mov    %cs,%si
0x000c2da3:  mov    %si,%es
0x000c2da5:  movzbl %al,%edi
0x000c2da9:  addr32 mov -0x18(%ebp),%eax
0x000c2dae:  cltd   
0x000c2db0:  idiv   %edi
0x000c2db3:  addr32 mov -0x10(%ebp),%edi
0x000c2db8:  addr32 mov %al,%es:(%edi)
0x000c2dbc:  mov    %si,%es
0x000c2dbe:  addr32 movzbl -0x19(%ebp),%esi
0x000c2dc4:  mov    %ecx,%eax
0x000c2dc7:  cltd   
0x000c2dc9:  idiv   %esi
0x000c2dcc:  dec    %eax
0x000c2dce:  addr32 mov %al,%es:0x1(%edi)
0x000c2dd3:  mov    %cs,%si
0x000c2dd5:  mov    %si,%es
0x000c2dd7:  addr32 mov -0x10(%ebp),%edi
0x000c2ddc:  addr32 mov -0x19(%ebp),%al
0x000c2de0:  addr32 mov %al,%es:0x2(%edi)
0x000c2de5:  addr32 movzbl -0x1a(%ebp),%eax
0x000c2deb:  addr32 mov -0x18(%ebp),%edx
0x000c2df0:  push   %ax
0x000c2df1:  call   0xc0025

----------------
IN: 
0x000c0025:  push   %ebp
0x000c0027:  mov    %esp,%ebp
0x000c002a:  push   %ebx
0x000c002c:  test   %al,%al
0x000c002e:  je     0xc0054

----------------
IN: 
0x000c0030:  mov    $0x4000,%ebx
0x000c0036:  dec    %al
0x000c0038:  je     0xc0066

----------------
IN: 
0x000c0066:  mov    %ebx,%eax
0x000c0069:  pop    %ebx
0x000c006b:  pop    %ebp
0x000c006d:  ret    $0x2

----------------
IN: 
0x000c2df4:  mov    %esi,%edx
0x000c2df7:  mov    %si,%es
0x000c2df9:  addr32 mov %ax,%es:0x3(%edi)
0x000c2dfe:  addr32 mov %cs:0x18(%ebx),%esi
0x000c2e04:  mov    %dx,%es
0x000c2e06:  add    $0x5,%edi
0x000c2e0a:  mov    $0x4,%ecx
0x000c2e10:  mov    %ds,%ax
0x000c2e12:  mov    %dx,%ds
0x000c2e14:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e14:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e16:  mov    %ax,%ds
0x000c2e18:  addr32 mov %cs:0x1c(%ebx),%al
0x000c2e1d:  mov    %cs,%dx
0x000c2e1f:  mov    %dx,%es
0x000c2e21:  addr32 mov -0x10(%ebp),%edi
0x000c2e26:  addr32 mov %al,%es:0x9(%edi)
0x000c2e2b:  addr32 mov %cs:0x20(%ebx),%esi
0x000c2e31:  mov    %dx,%es
0x000c2e33:  add    $0xa,%edi
0x000c2e37:  mov    $0x19,%ecx
0x000c2e3d:  mov    %ds,%ax
0x000c2e3f:  mov    %dx,%ds
0x000c2e41:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e41:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e43:  mov    %ax,%ds
0x000c2e45:  addr32 mov %cs:0x24(%ebx),%esi
0x000c2e4b:  mov    %cs,%dx
0x000c2e4d:  mov    %dx,%es
0x000c2e4f:  addr32 mov -0x10(%ebp),%edi
0x000c2e54:  add    $0x23,%edi
0x000c2e58:  mov    $0x14,%ecx
0x000c2e5e:  mov    %ds,%ax
0x000c2e60:  mov    %dx,%ds
0x000c2e62:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e62:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e64:  mov    %ax,%ds
0x000c2e66:  addr32 mov %cs:0x28(%ebx),%esi
0x000c2e6c:  mov    %cs,%dx
0x000c2e6e:  mov    %dx,%es
0x000c2e70:  addr32 mov -0x10(%ebp),%edi
0x000c2e75:  add    $0x37,%edi
0x000c2e79:  mov    $0x9,%ecx
0x000c2e7f:  mov    %ds,%ax
0x000c2e81:  mov    %dx,%ds
0x000c2e83:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e83:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c2e85:  mov    %ax,%ds
0x000c2e87:  addr32 incl -0x14(%ebp)
0x000c2e8c:  addr32 addl $0x40,-0x10(%ebp)
0x000c2e92:  jmp    0xc2d04

----------------
IN: 
0x000c2d84:  mov    %cs,%dx
0x000c2d86:  mov    %dx,%es
0x000c2d88:  addr32 mov -0x10(%ebp),%edi
0x000c2d8d:  mov    %esi,%eax
0x000c2d90:  addr32 mov %al,%es:(%edi)
0x000c2d94:  mov    %dx,%es
0x000c2d96:  addr32 mov -0x1c(%ebp),%al
0x000c2d9a:  jmp    0xc2dcc

----------------
IN: 
0x000c2dcc:  dec    %eax
0x000c2dce:  addr32 mov %al,%es:0x1(%edi)
0x000c2dd3:  mov    %cs,%si
0x000c2dd5:  mov    %si,%es
0x000c2dd7:  addr32 mov -0x10(%ebp),%edi
0x000c2ddc:  addr32 mov -0x19(%ebp),%al
0x000c2de0:  addr32 mov %al,%es:0x2(%edi)
0x000c2de5:  addr32 movzbl -0x1a(%ebp),%eax
0x000c2deb:  addr32 mov -0x18(%ebp),%edx
0x000c2df0:  push   %ax
0x000c2df1:  call   0xc0025

----------------
IN: 
0x000c0054:  shl    %ecx
0x000c0057:  imul   %dx,%cx
0x000c005a:  addr32 lea 0x7ff(%ecx),%ebx
0x000c0062:  and    $0xf800,%bx
0x000c0066:  mov    %ebx,%eax
0x000c0069:  pop    %ebx
0x000c006b:  pop    %ebp
0x000c006d:  ret    $0x2

----------------
IN: 
0x000c003a:  movzwl %dx,%ebx
0x000c003e:  movzwl %cx,%ecx
0x000c0042:  imul   %ecx,%ebx
0x000c0046:  sar    $0x3,%ebx
0x000c004a:  add    $0x1fff,%bx
0x000c004e:  and    $0xe000,%bx
0x000c0052:  jmp    0xc0066

----------------
IN: 
0x000c2e95:  mov    %cs,%dx
0x000c2e97:  shl    $0x10,%edx
0x000c2e9b:  mov    $0x4b72,%eax
0x000c2ea1:  movzwl %ax,%eax
0x000c2ea5:  or     %edx,%eax
0x000c2ea8:  xor    %edx,%edx
0x000c2eab:  mov    %dx,%es
0x000c2ead:  mov    %eax,%es:0x40
0x000c2eb2:  mov    %cs,%ax
0x000c2eb4:  mov    %ax,%es
0x000c2eb6:  mov    $0x1,%edx
0x000c2ebc:  mov    %edx,%es:-0x79f8
0x000c2ec2:  mov    %ax,%es
0x000c2ec4:  xor    %edx,%edx
0x000c2ec7:  mov    %dl,%es:0x6
0x000c2ecc:  mov    %cs:0x2,%cl
0x000c2ed1:  movzbl %cl,%ecx
0x000c2ed5:  shl    $0x9,%ecx
0x000c2ed9:  mov    %ax,%es
0x000c2edb:  xor    %eax,%eax
0x000c2ede:  cmp    %ecx,%eax
0x000c2ee1:  je     0xc2eee

----------------
IN: 
0x000c2ee3:  addr32 mov %es:(%eax),%bl
0x000c2ee7:  add    %ebx,%edx
0x000c2eea:  inc    %eax
0x000c2eec:  jmp    0xc2ede

----------------
IN: 
0x000c2ede:  cmp    %ecx,%eax
0x000c2ee1:  je     0xc2eee

----------------
IN: 
0x000c2eee:  mov    %cs,%ax
0x000c2ef0:  mov    %ax,%es
0x000c2ef2:  neg    %edx
0x000c2ef5:  mov    %dl,%es:0x6
0x000c2efa:  addr32 lea -0xc(%ebp),%esp
0x000c2eff:  pop    %ebx
0x000c2f01:  pop    %esi
0x000c2f03:  pop    %edi
0x000c2f05:  pop    %ebp
0x000c2f07:  ret    $0x2

----------------
IN: 
0x000c4b5e:  mov    %ebx,%esp
0x000c4b61:  pop    %ds
0x000c4b62:  pop    %es
0x000c4b63:  pop    %edi
0x000c4b65:  pop    %esi
0x000c4b67:  pop    %ebp
0x000c4b69:  pop    %ebx
0x000c4b6b:  pop    %edx
0x000c4b6d:  pop    %ecx
0x000c4b6f:  pop    %eax
0x000c4b71:  lret   

----------------
IN: 
0x000fd157:  mov    $0x10,%eax
0x000fd15c:  mov    %eax,%ds

----------------
IN: 
0x000fd15e:  mov    %eax,%es

----------------
IN: 
0x000f1e38:  call   0xf1682

----------------
IN: 
0x000f1e3d:  add    $0x34,%esp
0x000f1e40:  pop    %ebx
0x000f1e41:  pop    %esi
0x000f1e42:  pop    %edi
0x000f1e43:  ret    

----------------
IN: 
0x07fe25ea:  movzbl 0x2(%ebx),%ebx
0x07fe25ee:  shl    $0x9,%ebx
0x07fe25f1:  mov    %ebx,%eax
0x07fe25f3:  call   0x7fdf72e

----------------
IN: 
0x07fe25f8:  test   %eax,%eax
0x07fe25fa:  jne    0x7fe260f

----------------
IN: 
0x07fe260f:  mov    0x7fefe87,%eax
0x07fe2614:  lea    0x7ff(%ebx,%eax,1),%eax
0x07fe261b:  and    $0xfffff800,%eax
0x07fe2620:  mov    %eax,0x7fefe87
0x07fe2625:  xor    %eax,%eax
0x07fe2627:  pop    %ebx
0x07fe2628:  pop    %esi
0x07fe2629:  pop    %edi
0x07fe262a:  pop    %ebp
0x07fe262b:  ret    

----------------
IN: 
0x07fe4900:  jmp    0x7fe4905

----------------
IN: 
0x07fe4905:  add    $0x40,%esp
0x07fe4908:  pop    %ebx
0x07fe4909:  pop    %esi
0x07fe490a:  pop    %edi
0x07fe490b:  pop    %ebp
0x07fe490c:  ret    

----------------
IN: 
0x07febc4f:  xor    %ecx,%ecx
0x07febc51:  mov    $0x1,%edx
0x07febc56:  mov    $0xf58b4,%eax
0x07febc5b:  call   0x7fe262c

----------------
IN: 
0x07fe262c:  push   %ebp
0x07fe262d:  push   %edi
0x07fe262e:  push   %esi
0x07fe262f:  push   %ebx
0x07fe2630:  sub    $0x8,%esp
0x07fe2633:  mov    %eax,(%esp)
0x07fe2636:  mov    %edx,0x4(%esp)
0x07fe263a:  mov    %ecx,%esi
0x07fe263c:  xor    %ebx,%ebx
0x07fe263e:  mov    %ebx,%edx
0x07fe2640:  mov    (%esp),%eax
0x07fe2643:  call   0x7fdf7be

----------------
IN: 
0x07fe2648:  mov    %eax,%ebx
0x07fe264a:  test   %eax,%eax
0x07fe264c:  je     0x7fe267a

----------------
IN: 
0x07fe267a:  add    $0x8,%esp
0x07fe267d:  pop    %ebx
0x07fe267e:  pop    %esi
0x07fe267f:  pop    %edi
0x07fe2680:  pop    %ebp
0x07fe2681:  ret    

----------------
IN: 
0x07febc60:  xor    %eax,%eax
0x07febc62:  call   0x7fdf72e

----------------
IN: 
0x07febc67:  cmpl   $0xc0000,0x7fefe87
0x07febc71:  je     0x7febc82

----------------
IN: 
0x07febc73:  movl   $0xc0000,0xf5fb8
0x07febc7d:  call   0x7fe456c

----------------
IN: 
0x07fe456c:  push   %edi
0x07fe456d:  push   %esi
0x07fe456e:  push   %ebx
0x07fe456f:  sub    $0x7c,%esp
0x07fe4572:  movl   $0xf4601,(%esp)
0x07fe4579:  call   0xf1787

----------------
IN: 
0x07fe457e:  mov    $0x26,%ecx
0x07fe4583:  xor    %edx,%edx
0x07fe4585:  lea    0x56(%esp),%eax
0x07fe4589:  call   0xf0d7a

----------------
IN: 
0x07fe458e:  movw   $0x3,0x72(%esp)
0x07fe4595:  lea    0x56(%esp),%eax
0x07fe4599:  call   0x7fe0aa3

----------------
IN: 
0x07fe0aa3:  movw   $0x200,0x24(%eax)
0x07fe0aa9:  movw   $0xf000,0x22(%eax)
0x07fe0aaf:  mov    $0xfd29e,%edx
0x07fe0ab4:  mov    %dx,0x20(%eax)
0x07fe0ab8:  call   0xf16e7

----------------
IN: 
0x000f16e7:  movzwl 0xef7ec,%edx
0x000f16ee:  imul   $0xfffffff0,%edx,%ecx
0x000f16f1:  add    %ecx,%eax
0x000f16f3:  mov    %esp,%ecx
0x000f16f5:  cmp    $0x100000,%ecx
0x000f16fb:  jbe    0xf170a

----------------
IN: 
0x000f170a:  mov    $0x6f2b,%ecx
0x000f170f:  jmp    0xfd1bf

----------------
IN: 
0x000fd1bf:  push   %edx
0x000fd1c0:  push   %ecx
0x000fd1c1:  mov    $0xd1d7,%edx
0x000fd1c6:  jmp    0xfd16a

----------------
IN: 
0x000fd16a:  mov    %eax,%ecx
0x000fd16c:  mov    $0x20,%eax
0x000fd171:  mov    %eax,%ds

----------------
IN: 
0x000fd173:  mov    %eax,%es

----------------
IN: 
0x000fd175:  mov    %eax,%ss

----------------
IN: 
0x000fd177:  mov    %eax,%fs

----------------
IN: 
0x000fd179:  mov    %eax,%gs
0x000fd17b:  ljmpw  $0x18,$0xd198

----------------
IN: 
0x000fd29e:  int    $0x10

----------------
IN: 
0x000c4b72:  cli    
0x000c4b73:  cld    
0x000c4b74:  push   %eax
0x000c4b76:  push   %ecx
0x000c4b78:  push   %edx
0x000c4b7a:  push   %ebx
0x000c4b7c:  push   %ebp
0x000c4b7e:  push   %esi
0x000c4b80:  push   %edi
0x000c4b82:  push   %es
0x000c4b83:  push   %ds
0x000c4b84:  mov    %ss,%ax
0x000c4b86:  mov    %ax,%ds
0x000c4b88:  mov    %esp,%ebx
0x000c4b8b:  movzwl %sp,%esp
0x000c4b8f:  mov    %esp,%eax
0x000c4b92:  mov    $0x8000,%ecx
0x000c4b98:  addr32 lea (%ecx,%ecx,1),%ecx
0x000c4b9d:  cmp    $0x10000,%ecx
0x000c4ba4:  jne    0xc4ad3

----------------
IN: 
0x000c4ba8:  push   %ax
0x000c4ba9:  call   0xc38ae

----------------
IN: 
0x000c38ae:  push   %ebp
0x000c38b0:  mov    %esp,%ebp
0x000c38b3:  push   %edi
0x000c38b5:  push   %esi
0x000c38b7:  push   %ebx
0x000c38b9:  sub    $0x18,%esp
0x000c38bd:  mov    %eax,%ebx
0x000c38c0:  addr32 mov 0x1d(%eax),%al
0x000c38c4:  cmp    $0xb,%al
0x000c38c6:  je     0xc3c04

----------------
IN: 
0x000c38ca:  ja     0xc3983

----------------
IN: 
0x000c38ce:  cmp    $0x5,%al
0x000c38d0:  je     0xc3a92

----------------
IN: 
0x000c38d4:  ja     0xc3940

----------------
IN: 
0x000c38d6:  cmp    $0x2,%al
0x000c38d8:  je     0xc3a54

----------------
IN: 
0x000c38dc:  ja     0xc3906

----------------
IN: 
0x000c38de:  test   %al,%al
0x000c38e0:  je     0xc39fb

----------------
IN: 
0x000c39fb:  addr32 mov 0x1c(%ebx),%al
0x000c39ff:  and    $0x7f,%eax
0x000c3a03:  cmp    $0x7,%eax
0x000c3a07:  jle    0xc3a10

----------------
IN: 
0x000c3a10:  cmp    $0x6,%eax
0x000c3a14:  sete   %dl
0x000c3a17:  dec    %edx
0x000c3a19:  and    $0xfffffff1,%edx
0x000c3a1d:  add    $0x3f,%edx
0x000c3a21:  addr32 mov %dl,0x1c(%ebx)
0x000c3a25:  mov    $0x40,%edx
0x000c3a2b:  mov    %dx,%es
0x000c3a2d:  mov    %es:0x89,%dl
0x000c3a32:  and    $0xa,%edx
0x000c3a36:  or     $0x1,%edx
0x000c3a3a:  addr32 cmpb $0x0,0x1c(%ebx)
0x000c3a3f:  jns    0xc3a44

----------------
IN: 
0x000c3a44:  addr32 lea -0xc(%ebp),%esp
0x000c3a49:  pop    %ebx
0x000c3a4b:  pop    %esi
0x000c3a4d:  pop    %edi
0x000c3a4f:  pop    %ebp
0x000c3a51:  jmp    0xc2596

----------------
IN: 
0x000c2596:  push   %ebp
0x000c2598:  mov    %esp,%ebp
0x000c259b:  push   %edi
0x000c259d:  push   %esi
0x000c259f:  push   %ebx
0x000c25a1:  sub    $0x14,%esp
0x000c25a5:  mov    %eax,%edi
0x000c25a8:  addr32 mov %eax,-0x14(%ebp)
0x000c25ad:  addr32 mov %edx,-0x10(%ebp)
0x000c25b2:  push   %eax
0x000c25b4:  pushl  $0x4d14
0x000c25ba:  push   %ax
0x000c25bb:  call   0xc22bd

----------------
IN: 
0x000c25be:  pop    %eax
0x000c25c0:  pop    %edx
0x000c25c2:  mov    %edi,%eax
0x000c25c5:  push   %ax
0x000c25c6:  call   0xc0c09

----------------
IN: 
0x000c0c09:  mov    $0x4f78,%edx
0x000c0c0f:  addr32 mov %cs:(%edx),%cx
0x000c0c13:  movzwl %cx,%ecx
0x000c0c17:  cmp    %eax,%ecx
0x000c0c1a:  jne    0xc0c24

----------------
IN: 
0x000c0c24:  addr32 mov %cs:0x2(%edx),%cx
0x000c0c29:  movzwl %cx,%ecx
0x000c0c2d:  cmp    %eax,%ecx
0x000c0c30:  je     0xc0c1c

----------------
IN: 
0x000c0c32:  add    $0x20,%edx
0x000c0c36:  cmp    $0x5178,%edx
0x000c0c3d:  jb     0xc0c0f

----------------
IN: 
0x000c0c0f:  addr32 mov %cs:(%edx),%cx
0x000c0c13:  movzwl %cx,%ecx
0x000c0c17:  cmp    %eax,%ecx
0x000c0c1a:  jne    0xc0c24

----------------
IN: 
0x000c0c3f:  push   %ebp
0x000c0c41:  mov    %esp,%ebp
0x000c0c44:  push   %ebx
0x000c0c46:  mov    $0x5598,%ecx
0x000c0c4c:  cmp    $0x5858,%ecx
0x000c0c53:  je     0xc0c70

----------------
IN: 
0x000c0c55:  mov    %ecx,%edx
0x000c0c58:  addr32 mov %cs:(%ecx),%bx
0x000c0c5c:  add    $0x2c,%ecx
0x000c0c60:  movzwl %bx,%ebx
0x000c0c64:  cmp    %eax,%ebx
0x000c0c67:  jne    0xc0c4c

----------------
IN: 
0x000c0c4c:  cmp    $0x5858,%ecx
0x000c0c53:  je     0xc0c70

----------------
IN: 
0x000c0c69:  addr32 lea 0x2(%edx),%eax
0x000c0c6e:  jmp    0xc0c73

----------------
IN: 
0x000c0c73:  pop    %ebx
0x000c0c75:  pop    %ebp
0x000c0c77:  ret    $0x2

----------------
IN: 
0x000c25c9:  mov    %eax,%ebx
0x000c25cc:  test   %eax,%eax
0x000c25cf:  je     0xc25e3

----------------
IN: 
0x000c25d1:  cmp    $0x4f7c,%eax
0x000c25d7:  jb     0xc25ec

----------------
IN: 
0x000c25d9:  cmp    $0x515c,%eax
0x000c25df:  ja     0xc25ec

----------------
IN: 
0x000c25ec:  mov    $0x4f58,%eax
0x000c25f2:  push   %ax
0x000c25f3:  call   0xc21ba

----------------
IN: 
0x000c21ba:  push   %ebp
0x000c21bc:  mov    %esp,%ebp
0x000c21bf:  push   %ebx
0x000c21c1:  mov    %eax,%ebx
0x000c21c4:  mov    $0x3c4,%edx
0x000c21ca:  mov    $0x1206,%eax
0x000c21d0:  out    %ax,(%dx)
0x000c21d1:  addr32 mov %cs:0x14(%ebx),%ecx
0x000c21d7:  addr32 mov %cs:(%ecx),%ax
0x000c21db:  cmp    $0xffffffff,%ax
0x000c21de:  je     0xc21e7

----------------
IN: 
0x000c21e0:  out    %ax,(%dx)
0x000c21e1:  add    $0x2,%ecx
0x000c21e5:  jmp    0xc21d7

----------------
IN: 
0x000c21d7:  addr32 mov %cs:(%ecx),%ax
0x000c21db:  cmp    $0xffffffff,%ax
0x000c21de:  je     0xc21e7

----------------
IN: 
0x000c21e7:  addr32 mov %cs:0x18(%ebx),%ecx
0x000c21ed:  mov    $0x3ce,%edx
0x000c21f3:  addr32 mov %cs:(%ecx),%ax
0x000c21f7:  cmp    $0xffffffff,%ax
0x000c21fa:  je     0xc2203

----------------
IN: 
0x000c21fc:  out    %ax,(%dx)
0x000c21fd:  add    $0x2,%ecx
0x000c2201:  jmp    0xc21f3

----------------
IN: 
0x000c21f3:  addr32 mov %cs:(%ecx),%ax
0x000c21f7:  cmp    $0xffffffff,%ax
0x000c21fa:  je     0xc2203

----------------
IN: 
0x000c2203:  push   %ax
0x000c2204:  call   0xc02b1

----------------
IN: 
0x000c02b1:  push   %ebp
0x000c02b3:  mov    %esp,%ebp
0x000c02b6:  mov    $0x3cc,%edx
0x000c02bc:  in     (%dx),%al
0x000c02bd:  mov    $0x3b4,%ecx
0x000c02c3:  test   $0x1,%al
0x000c02c5:  je     0xc02c9

----------------
IN: 
0x000c02c7:  mov    $0xd4,%cl
0x000c02c9:  mov    %ecx,%eax
0x000c02cc:  pop    %ebp
0x000c02ce:  ret    $0x2

----------------
IN: 
0x000c2207:  mov    %eax,%edx
0x000c220a:  addr32 mov %cs:0x1c(%ebx),%ecx
0x000c2210:  addr32 mov %cs:(%ecx),%ax
0x000c2214:  cmp    $0xffffffff,%ax
0x000c2217:  je     0xc2220

----------------
IN: 
0x000c2219:  out    %ax,(%dx)
0x000c221a:  add    $0x2,%ecx
0x000c221e:  jmp    0xc2210

----------------
IN: 
0x000c2210:  addr32 mov %cs:(%ecx),%ax
0x000c2214:  cmp    $0xffffffff,%ax
0x000c2217:  je     0xc2220

----------------
IN: 
0x000c2220:  mov    $0x3c6,%edx
0x000c2226:  xor    %eax,%eax
0x000c2229:  out    %al,(%dx)
0x000c222a:  in     (%dx),%al
0x000c222b:  in     (%dx),%al
0x000c222c:  in     (%dx),%al
0x000c222d:  in     (%dx),%al
0x000c222e:  addr32 mov %cs:0x10(%ebx),%ax
0x000c2233:  out    %al,(%dx)
0x000c2234:  mov    $0xff,%al
0x000c2236:  out    %al,(%dx)
0x000c2237:  addr32 mov %cs:0x4(%ebx),%al
0x000c223c:  cmp    $0x3,%al
0x000c223e:  je     0xc2247

----------------
IN: 
0x000c2240:  test   %al,%al
0x000c2242:  setne  %cl
0x000c2245:  jmp    0xc2249

----------------
IN: 
0x000c2249:  movzbl %cl,%ecx
0x000c224d:  mov    $0x1,%edx
0x000c2253:  mov    $0x10,%eax
0x000c2259:  push   %ax
0x000c225a:  call   0xc0454

----------------
IN: 
0x000c0454:  push   %ebp
0x000c0456:  mov    %esp,%ebp
0x000c0459:  push   %esi
0x000c045b:  push   %ebx
0x000c045d:  sub    $0x1,%esp
0x000c0461:  mov    %eax,%esi
0x000c0464:  mov    %edx,%ebx
0x000c0467:  mov    $0x3da,%edx
0x000c046d:  in     (%dx),%al
0x000c046e:  mov    $0xc0,%dl
0x000c0470:  in     (%dx),%al
0x000c0471:  addr32 mov %al,-0x9(%ebp)
0x000c0475:  mov    %esi,%eax
0x000c0478:  out    %al,(%dx)
0x000c0479:  mov    $0xc1,%dl
0x000c047b:  in     (%dx),%al
0x000c047c:  not    %ebx
0x000c047f:  and    %ebx,%eax
0x000c0482:  or     %ecx,%eax
0x000c0485:  mov    $0xc0,%dl
0x000c0487:  out    %al,(%dx)
0x000c0488:  addr32 mov -0x9(%ebp),%al
0x000c048c:  out    %al,(%dx)
0x000c048d:  add    $0x1,%esp
0x000c0491:  pop    %ebx
0x000c0493:  pop    %esi
0x000c0495:  pop    %ebp
0x000c0497:  ret    $0x2

----------------
IN: 
0x000c225d:  mov    $0x3da,%edx
0x000c2263:  in     (%dx),%al
0x000c2264:  mov    $0xc0,%dl
0x000c2266:  mov    $0x20,%al
0x000c2268:  out    %al,(%dx)
0x000c2269:  pop    %ebx
0x000c226b:  pop    %ebp
0x000c226d:  ret    $0x2

----------------
IN: 
0x000c25f6:  pushl  $0x4d25
0x000c25fc:  push   %ax
0x000c25fd:  call   0xc22bd

----------------
IN: 
0x000c2600:  pop    %eax
0x000c2602:  cmp    $0x559a,%ebx
0x000c2609:  jb     0xc28da

----------------
IN: 
0x000c260d:  cmp    $0x582e,%ebx
0x000c2614:  ja     0xc28da

----------------
IN: 
0x000c2618:  jmp    0xc28fb

----------------
IN: 
0x000c28fb:  addr32 testb $0x8,-0x10(%ebp)
0x000c2900:  jne    0xc2975

----------------
IN: 
0x000c2902:  addr32 mov %cs:0xc(%ebx),%al
0x000c2907:  mov    $0x3c6,%edx
0x000c290d:  out    %al,(%dx)
0x000c290e:  addr32 mov %cs:0xe(%ebx),%edi
0x000c2914:  addr32 mov %cs:0x12(%ebx),%ax
0x000c2919:  mov    $0x3,%ecx
0x000c291f:  xor    %edx,%edx
0x000c2922:  div    %cx
0x000c2924:  movzwl %ax,%esi
0x000c2928:  mov    %cs,%ax
0x000c292a:  movzwl %ax,%eax
0x000c292e:  push   %esi
0x000c2930:  xor    %ecx,%ecx
0x000c2933:  mov    %edi,%edx
0x000c2936:  push   %ax
0x000c2937:  call   0xc07db

----------------
IN: 
0x000c07db:  push   %ebp
0x000c07dd:  mov    %esp,%ebp
0x000c07e0:  push   %edi
0x000c07e2:  push   %esi
0x000c07e4:  push   %ebx
0x000c07e6:  mov    %edx,%ebx
0x000c07e9:  addr32 mov 0x8(%ebp),%esi
0x000c07ee:  mov    %eax,%edi
0x000c07f1:  mov    $0x3c8,%edx
0x000c07f7:  mov    %cl,%al
0x000c07f9:  out    %al,(%dx)
0x000c07fa:  test   %esi,%esi
0x000c07fd:  je     0xc0824

----------------
IN: 
0x000c07ff:  mov    %di,%es
0x000c0801:  addr32 mov %es:(%ebx),%al
0x000c0805:  mov    $0x3c9,%edx
0x000c080b:  out    %al,(%dx)
0x000c080c:  mov    %di,%es
0x000c080e:  addr32 mov %es:0x1(%ebx),%al
0x000c0813:  out    %al,(%dx)
0x000c0814:  mov    %di,%es
0x000c0816:  addr32 mov %es:0x2(%ebx),%al
0x000c081b:  out    %al,(%dx)
0x000c081c:  add    $0x3,%ebx
0x000c0820:  dec    %esi
0x000c0822:  jmp    0xc07fa

----------------
IN: 
0x000c07fa:  test   %esi,%esi
0x000c07fd:  je     0xc0824

----------------
IN: 
0x000c0824:  pop    %ebx
0x000c0826:  pop    %esi
0x000c0828:  pop    %edi
0x000c082a:  pop    %ebp
0x000c082c:  ret    $0x2

----------------
IN: 
0x000c293a:  pop    %edi
0x000c293c:  cmp    $0xff,%esi
0x000c2943:  jg     0xc2961

----------------
IN: 
0x000c2945:  mov    %cs,%ax
0x000c2947:  movzwl %ax,%eax
0x000c294b:  pushl  $0x1
0x000c294e:  mov    %esi,%ecx
0x000c2951:  mov    $0x4f35,%edx
0x000c2957:  push   %ax
0x000c2958:  call   0xc07db

----------------
IN: 
0x000c295b:  pop    %ecx
0x000c295d:  inc    %esi
0x000c295f:  jmp    0xc293c

----------------
IN: 
0x000c293c:  cmp    $0xff,%esi
0x000c2943:  jg     0xc2961

----------------
IN: 
0x000c2961:  addr32 testb $0x2,-0x10(%ebp)
0x000c2966:  je     0xc2975

----------------
IN: 
0x000c2975:  addr32 mov %cs:0x22(%ebx),%edi
0x000c297b:  xor    %esi,%esi
0x000c297e:  addr32 mov %cs:(%edi,%esi,1),%dl
0x000c2983:  movzbl %dl,%edx
0x000c2987:  mov    %esi,%eax
0x000c298a:  push   %ax
0x000c298b:  call   0xc0426

----------------
IN: 
0x000c0426:  push   %ebp
0x000c0428:  mov    %esp,%ebp
0x000c042b:  push   %esi
0x000c042d:  push   %ebx
0x000c042f:  mov    %eax,%esi
0x000c0432:  mov    %edx,%ebx
0x000c0435:  mov    $0x3da,%edx
0x000c043b:  in     (%dx),%al
0x000c043c:  mov    $0xc0,%dl
0x000c043e:  in     (%dx),%al
0x000c043f:  mov    %al,%cl
0x000c0441:  mov    %esi,%eax
0x000c0444:  out    %al,(%dx)
0x000c0445:  mov    %bl,%al
0x000c0447:  out    %al,(%dx)
0x000c0448:  mov    %cl,%al
0x000c044a:  out    %al,(%dx)
0x000c044b:  pop    %ebx
0x000c044d:  pop    %esi
0x000c044f:  pop    %ebp
0x000c0451:  ret    $0x2

----------------
IN: 
0x000c298e:  inc    %esi
0x000c2990:  cmp    $0x14,%esi
0x000c2994:  jne    0xc297e

----------------
IN: 
0x000c297e:  addr32 mov %cs:(%edi,%esi,1),%dl
0x000c2983:  movzbl %dl,%edx
0x000c2987:  mov    %esi,%eax
0x000c298a:  push   %ax
0x000c298b:  call   0xc0426

----------------
IN: 
0x000c2996:  xor    %edx,%edx
0x000c2999:  mov    $0x14,%eax
0x000c299f:  push   %ax
0x000c29a0:  call   0xc0426

----------------
IN: 
0x000c29a3:  mov    $0x3c4,%edx
0x000c29a9:  mov    $0x300,%eax
0x000c29af:  out    %ax,(%dx)
0x000c29b0:  addr32 mov %cs:0x16(%ebx),%esi
0x000c29b6:  mov    $0x1,%ecx
0x000c29bc:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x000c29c2:  shl    $0x8,%eax
0x000c29c6:  or     %ecx,%eax
0x000c29c9:  out    %ax,(%dx)
0x000c29ca:  inc    %ecx
0x000c29cc:  cmp    $0x5,%ecx
0x000c29d0:  jne    0xc29bc

----------------
IN: 
0x000c29bc:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x000c29c2:  shl    $0x8,%eax
0x000c29c6:  or     %ecx,%eax
0x000c29c9:  out    %ax,(%dx)
0x000c29ca:  inc    %ecx
0x000c29cc:  cmp    $0x5,%ecx
0x000c29d0:  jne    0xc29bc

----------------
IN: 
0x000c29d2:  addr32 mov %cs:0x26(%ebx),%esi
0x000c29d8:  xor    %cl,%cl
0x000c29da:  mov    $0x3ce,%edx
0x000c29e0:  addr32 mov %cs:(%esi,%ecx,1),%al
0x000c29e5:  shl    $0x8,%eax
0x000c29e9:  or     %ecx,%eax
0x000c29ec:  out    %ax,(%dx)
0x000c29ed:  inc    %ecx
0x000c29ef:  cmp    $0x9,%ecx
0x000c29f3:  jne    0xc29e0

----------------
IN: 
0x000c29e0:  addr32 mov %cs:(%esi,%ecx,1),%al
0x000c29e5:  shl    $0x8,%eax
0x000c29e9:  or     %ecx,%eax
0x000c29ec:  out    %ax,(%dx)
0x000c29ed:  inc    %ecx
0x000c29ef:  cmp    $0x9,%ecx
0x000c29f3:  jne    0xc29e0

----------------
IN: 
0x000c29f5:  addr32 mov %cs:0x1a(%ebx),%al
0x000c29fa:  mov    %eax,%esi
0x000c29fd:  mov    $0x3b4,%edx
0x000c2a03:  test   $0x1,%al
0x000c2a05:  je     0xc2a09

----------------
IN: 
0x000c2a07:  mov    $0xd4,%dl
0x000c2a09:  mov    $0x11,%eax
0x000c2a0f:  out    %ax,(%dx)
0x000c2a10:  addr32 mov %cs:0x1e(%ebx),%edi
0x000c2a16:  xor    %ecx,%ecx
0x000c2a19:  addr32 mov %cs:(%edi,%ecx,1),%al
0x000c2a1e:  shl    $0x8,%eax
0x000c2a22:  or     %ecx,%eax
0x000c2a25:  out    %ax,(%dx)
0x000c2a26:  inc    %ecx
0x000c2a28:  cmp    $0x19,%ecx
0x000c2a2c:  jne    0xc2a19

----------------
IN: 
0x000c2a19:  addr32 mov %cs:(%edi,%ecx,1),%al
0x000c2a1e:  shl    $0x8,%eax
0x000c2a22:  or     %ecx,%eax
0x000c2a25:  out    %ax,(%dx)
0x000c2a26:  inc    %ecx
0x000c2a28:  cmp    $0x19,%ecx
0x000c2a2c:  jne    0xc2a19

----------------
IN: 
0x000c2a2e:  mov    $0x3c2,%edx
0x000c2a34:  mov    %esi,%eax
0x000c2a37:  out    %al,(%dx)
0x000c2a38:  mov    $0xda,%dl
0x000c2a3a:  in     (%dx),%al
0x000c2a3b:  mov    $0xc0,%dl
0x000c2a3d:  mov    $0x20,%al
0x000c2a3f:  out    %al,(%dx)
0x000c2a40:  addr32 mov -0x10(%ebp),%edi
0x000c2a45:  and    $0x8000,%edi
0x000c2a4c:  jne    0xc2a90

----------------
IN: 
0x000c2a4e:  addr32 mov %cs:(%ebx),%al
0x000c2a52:  test   %al,%al
0x000c2a54:  je     0xc2a69

----------------
IN: 
0x000c2a69:  addr32 mov %cs:0xa(%ebx),%ax
0x000c2a6e:  mov    %ax,%es
0x000c2a70:  mov    $0x4000,%ecx
0x000c2a76:  mov    $0x720,%eax
0x000c2a7c:  jmp    0xc2a8e

----------------
IN: 
0x000c2a8e:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000c2a90:  addr32 mov %cs:(%ebx),%al
0x000c2a94:  test   %al,%al
0x000c2a96:  jne    0xc26e5

----------------
IN: 
0x000c2a9a:  mov    %cs,%ax
0x000c2a9c:  movzwl %ax,%eax
0x000c2aa0:  pushl  $0x10
0x000c2aa3:  pushl  $0x0
0x000c2aa6:  pushl  $0x0
0x000c2aa9:  mov    $0x100,%ecx
0x000c2aaf:  mov    $0x5ff8,%edx
0x000c2ab5:  push   %ax
0x000c2ab6:  call   0xc0185

----------------
IN: 
0x000c0185:  push   %ebp
0x000c0187:  mov    %esp,%ebp
0x000c018a:  push   %edi
0x000c018c:  push   %esi
0x000c018e:  push   %ebx
0x000c0190:  sub    $0x10,%esp
0x000c0194:  mov    %edx,%ebx
0x000c0197:  addr32 mov 0xc(%ebp),%esi
0x000c019c:  addr32 mov %ax,-0x1a(%ebp)
0x000c01a0:  addr32 mov %cx,-0x1c(%ebp)
0x000c01a4:  mov    $0x3c4,%edx
0x000c01aa:  mov    $0x100,%eax
0x000c01b0:  out    %ax,(%dx)
0x000c01b1:  mov    $0x402,%eax
0x000c01b7:  out    %ax,(%dx)
0x000c01b8:  mov    $0x704,%eax
0x000c01be:  out    %ax,(%dx)
0x000c01bf:  mov    $0x300,%eax
0x000c01c5:  out    %ax,(%dx)
0x000c01c6:  mov    $0xce,%dl
0x000c01c8:  mov    $0x204,%eax
0x000c01ce:  out    %ax,(%dx)
0x000c01cf:  mov    $0x5,%eax
0x000c01d5:  out    %ax,(%dx)
0x000c01d6:  mov    $0x406,%eax
0x000c01dc:  out    %ax,(%dx)
0x000c01dd:  addr32 movzbl 0x10(%ebp),%eax
0x000c01e3:  addr32 mov %eax,-0x14(%ebp)
0x000c01e8:  addr32 mov %ebx,-0x10(%ebp)
0x000c01ed:  mov    %esi,%eax
0x000c01f0:  and    $0x4,%eax
0x000c01f4:  movzbl %al,%eax
0x000c01f8:  shl    $0xb,%eax
0x000c01fc:  shl    $0xe,%esi
0x000c0200:  add    %eax,%esi
0x000c0203:  movzwl %si,%esi
0x000c0207:  addr32 movzwl 0x8(%ebp),%eax
0x000c020d:  shl    $0x5,%eax
0x000c0211:  add    %esi,%eax
0x000c0214:  addr32 mov %eax,-0x18(%ebp)
0x000c0219:  xor    %ebx,%ebx
0x000c021c:  addr32 cmp -0x1c(%ebp),%bx
0x000c0220:  je     0xc0259

----------------
IN: 
0x000c0222:  mov    $0xffffa000,%edi
0x000c0228:  mov    %di,%es
0x000c022a:  addr32 mov -0x14(%ebp),%ecx
0x000c022f:  addr32 mov -0x10(%ebp),%esi
0x000c0234:  addr32 mov -0x18(%ebp),%edi
0x000c0239:  addr32 mov -0x1a(%ebp),%ax
0x000c023d:  mov    %ds,%dx
0x000c023f:  mov    %ax,%ds
0x000c0241:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c0241:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c0243:  mov    %dx,%ds
0x000c0245:  inc    %ebx
0x000c0247:  addr32 mov -0x14(%ebp),%eax
0x000c024c:  addr32 add %eax,-0x10(%ebp)
0x000c0251:  addr32 addl $0x20,-0x18(%ebp)
0x000c0257:  jmp    0xc021c

----------------
IN: 
0x000c021c:  addr32 cmp -0x1c(%ebp),%bx
0x000c0220:  je     0xc0259

----------------
IN: 
0x000c0259:  mov    $0x3c4,%edx
0x000c025f:  mov    $0x100,%eax
0x000c0265:  out    %ax,(%dx)
0x000c0266:  mov    $0x302,%eax
0x000c026c:  out    %ax,(%dx)
0x000c026d:  mov    $0x4,%al
0x000c026f:  out    %ax,(%dx)
0x000c0270:  xor    %al,%al
0x000c0272:  out    %ax,(%dx)
0x000c0273:  mov    $0xcc,%dl
0x000c0275:  in     (%dx),%al
0x000c0276:  mov    $0xa,%ecx
0x000c027c:  test   $0x1,%al
0x000c027e:  je     0xc0282

----------------
IN: 
0x000c0280:  mov    $0xe,%cl
0x000c0282:  mov    %ecx,%eax
0x000c0285:  shl    $0x8,%eax
0x000c0289:  or     $0x6,%eax
0x000c028d:  mov    $0x3ce,%edx
0x000c0293:  out    %ax,(%dx)
0x000c0294:  mov    $0x4,%eax
0x000c029a:  out    %ax,(%dx)
0x000c029b:  mov    $0x1005,%eax
0x000c02a1:  out    %ax,(%dx)
0x000c02a2:  add    $0x10,%esp
0x000c02a6:  pop    %ebx
0x000c02a8:  pop    %esi
0x000c02aa:  pop    %edi
0x000c02ac:  pop    %ebp
0x000c02ae:  ret    $0x2

----------------
IN: 
0x000c2ab9:  add    $0xc,%esp
0x000c2abd:  jmp    0xc26e5

----------------
IN: 
0x000c26e5:  addr32 mov %cs:0x2(%ebx),%dx
0x000c26ea:  movzwl %dx,%eax
0x000c26ee:  addr32 mov %eax,-0x1c(%ebp)
0x000c26f3:  addr32 mov %cs:0x4(%ebx),%di
0x000c26f8:  movzwl %di,%ecx
0x000c26fc:  addr32 mov %cs:(%ebx),%al
0x000c2700:  addr32 mov %al,-0x1d(%ebp)
0x000c2704:  addr32 mov %cs:0x8(%ebx),%al
0x000c2709:  addr32 mov %al,-0x18(%ebp)
0x000c270d:  mov    $0x40,%eax
0x000c2713:  addr32 cmpl $0xff,-0x14(%ebp)
0x000c271c:  jg     0xc2726

----------------
IN: 
0x000c271e:  mov    %ax,%es
0x000c2720:  addr32 mov -0x14(%ebp),%al
0x000c2724:  jmp    0xc272a

----------------
IN: 
0x000c272a:  mov    %al,%es:0x49
0x000c272e:  mov    $0x40,%esi
0x000c2734:  mov    %si,%es
0x000c2736:  addr32 mov -0x10(%ebp),%eax
0x000c273b:  and    $0xfe00,%ax
0x000c273e:  addr32 or -0x14(%ebp),%eax
0x000c2743:  mov    %ax,%es:0xba
0x000c2747:  addr32 cmpb $0x0,-0x1d(%ebp)
0x000c274c:  jne    0xc276a

----------------
IN: 
0x000c274e:  mov    %si,%es
0x000c2750:  mov    %dx,%es:0x4a
0x000c2755:  mov    %si,%es
0x000c2757:  addr32 lea -0x1(%edi),%eax
0x000c275c:  mov    %al,%es:0x84
0x000c2760:  mov    %si,%es
0x000c2762:  mov    $0x607,%eax
0x000c2768:  jmp    0xc279e

----------------
IN: 
0x000c279e:  mov    %ax,%es:0x60
0x000c27a2:  addr32 movzbl -0x1d(%ebp),%eax
0x000c27a8:  addr32 mov -0x1c(%ebp),%edx
0x000c27ad:  push   %ax
0x000c27ae:  call   0xc0025

----------------
IN: 
0x000c27b1:  mov    $0x40,%ebx
0x000c27b7:  mov    %bx,%es
0x000c27b9:  mov    %ax,%es:0x4c
0x000c27bd:  push   %ax
0x000c27be:  call   0xc02b1

----------------
IN: 
0x000c27c1:  mov    %bx,%es
0x000c27c3:  mov    %ax,%es:0x63
0x000c27c7:  mov    %bx,%es
0x000c27c9:  addr32 movzbl -0x18(%ebp),%eax
0x000c27cf:  mov    %ax,%es:0x85
0x000c27d3:  addr32 mov -0x10(%ebp),%eax
0x000c27d8:  and    $0x8000,%eax
0x000c27de:  cmp    $0x1,%eax
0x000c27e2:  sbb    %eax,%eax
0x000c27e5:  and    $0xffffff80,%eax
0x000c27e9:  sub    $0x20,%eax
0x000c27ed:  mov    %bx,%es
0x000c27ef:  mov    %al,%es:0x87
0x000c27f3:  mov    %bx,%es
0x000c27f5:  mov    $0xf9,%al
0x000c27f7:  mov    %al,%es:0x88
0x000c27fb:  mov    %bx,%es
0x000c27fd:  mov    %es:0x89,%al
0x000c2801:  mov    %bx,%es
0x000c2803:  and    $0x7f,%eax
0x000c2807:  mov    %al,%es:0x89
0x000c280b:  xor    %ecx,%ecx
0x000c280e:  mov    $0x40,%esi
0x000c2814:  xor    %bl,%bl
0x000c2816:  mov    $0x40,%eax
0x000c281c:  mov    %si,%es
0x000c281e:  xor    %edx,%edx
0x000c2821:  addr32 mov %bx,%es:0x50(%ecx,%ecx,1)
0x000c2827:  inc    %ecx
0x000c2829:  cmp    $0x8,%ecx
0x000c282d:  jne    0xc2816

----------------
IN: 
0x000c2816:  mov    $0x40,%eax
0x000c281c:  mov    %si,%es
0x000c281e:  xor    %edx,%edx
0x000c2821:  addr32 mov %bx,%es:0x50(%ecx,%ecx,1)
0x000c2827:  inc    %ecx
0x000c2829:  cmp    $0x8,%ecx
0x000c282d:  jne    0xc2816

----------------
IN: 
0x000c282f:  mov    %ax,%es
0x000c2831:  mov    %dx,%es:0x4e
0x000c2836:  mov    %ax,%es
0x000c2838:  xor    %ecx,%ecx
0x000c283b:  mov    %cl,%es:0x62
0x000c2840:  mov    %ax,%es
0x000c2842:  mov    $0x8,%bl
0x000c2844:  mov    %bl,%es:0x8a
0x000c2849:  mov    %cs,%si
0x000c284b:  shl    $0x10,%esi
0x000c284f:  mov    $0x8d68,%ebx
0x000c2855:  movzwl %bx,%ebx
0x000c2859:  or     %esi,%ebx
0x000c285c:  mov    %ax,%es
0x000c285e:  mov    %ebx,%es:0xa8
0x000c2864:  mov    %ax,%es
0x000c2866:  mov    %cl,%es:0x65
0x000c286b:  mov    %ax,%es
0x000c286d:  mov    %cl,%es:0x66
0x000c2872:  mov    %cs,%cx
0x000c2874:  shl    $0x10,%ecx
0x000c2878:  mov    $0x81f8,%eax
0x000c287e:  movzwl %ax,%eax
0x000c2882:  or     %ecx,%eax
0x000c2885:  mov    %dx,%es
0x000c2887:  mov    %eax,%es:0x7c
0x000c288c:  addr32 mov -0x18(%ebp),%al
0x000c2890:  cmp    $0xe,%al
0x000c2892:  je     0xc28aa

----------------
IN: 
0x000c2894:  cmp    $0x10,%al
0x000c2896:  je     0xc28c6

----------------
IN: 
0x000c28c6:  mov    %cs,%cx
0x000c28c8:  shl    $0x10,%ecx
0x000c28cc:  mov    $0x5ff8,%eax
0x000c28d2:  jmp    0xc28b6

----------------
IN: 
0x000c28b6:  movzwl %ax,%eax
0x000c28ba:  or     %ecx,%eax
0x000c28bd:  mov    %dx,%es
0x000c28bf:  mov    %eax,%es:0x10c
0x000c28c4:  jmp    0xc28d4

----------------
IN: 
0x000c28d4:  xor    %eax,%eax
0x000c28d7:  jmp    0xc2ac0

----------------
IN: 
0x000c2ac0:  addr32 lea -0xc(%ebp),%esp
0x000c2ac5:  pop    %ebx
0x000c2ac7:  pop    %esi
0x000c2ac9:  pop    %edi
0x000c2acb:  pop    %ebp
0x000c2acd:  ret    $0x2

----------------
IN: 
0x000c4bac:  mov    %ebx,%esp
0x000c4baf:  pop    %ds
0x000c4bb0:  pop    %es
0x000c4bb1:  pop    %edi
0x000c4bb3:  pop    %esi
0x000c4bb5:  pop    %ebp
0x000c4bb7:  pop    %ebx
0x000c4bb9:  pop    %edx
0x000c4bbb:  pop    %ecx
0x000c4bbd:  pop    %eax
0x000c4bbf:  iret   

Servicing hardware INT=0x08
----------------
IN: 
0x000fd2a0:  lret   

----------------
IN: 
0x07fe0abd:  jmp    0xf1682

----------------
IN: 
0x07fe459e:  movl   $0xf5edc,0x4(%esp)
0x07fe45a6:  movl   $0xf4623,(%esp)
0x07fe45ad:  call   0xf2364

----------------
IN: 
0x000f2364:  lea    0x8(%esp),%ecx
0x000f2368:  mov    0x4(%esp),%edx
0x000f236c:  mov    $0xf5ed4,%eax
0x000f2371:  call   0xf1445

----------------
IN: 
0x000f1759:  push   %ebx
0x000f175a:  mov    %edx,%ebx
0x000f175c:  cmpl   $0x0,0xf5fbc
0x000f1763:  je     0xf176f

----------------
IN: 
0x000f1765:  mov    0xf636c,%dx
0x000f176c:  mov    %bl,%al
0x000f176e:  out    %al,(%dx)
0x000f176f:  cmp    $0xa,%bl
0x000f1772:  jne    0xf177e

----------------
IN: 
0x000f177e:  movsbl %bl,%eax
0x000f1781:  pop    %ebx
0x000f1782:  jmp    0xf1714

----------------
IN: 
0x000f1714:  push   %ebx
0x000f1715:  sub    $0x28,%esp
0x000f1718:  mov    %eax,%ebx
0x000f171a:  mov    $0x26,%ecx
0x000f171f:  xor    %edx,%edx
0x000f1721:  lea    0x2(%esp),%eax
0x000f1725:  call   0xf0d7a

----------------
IN: 
0x000f172a:  movw   $0x200,0x26(%esp)
0x000f1731:  movb   $0xe,0x1f(%esp)
0x000f1736:  mov    %bl,0x1e(%esp)
0x000f173a:  movw   $0xf000,0x24(%esp)
0x000f1741:  mov    $0xfd29e,%eax
0x000f1746:  mov    %ax,0x22(%esp)
0x000f174b:  lea    0x2(%esp),%eax
0x000f174f:  call   0xf16e7

----------------
IN: 
0x000c3983:  cmp    $0x11,%al
0x000c3985:  je     0xc42bb

----------------
IN: 
0x000c3989:  ja     0xc39b1

----------------
IN: 
0x000c398b:  cmp    $0xe,%al
0x000c398d:  je     0xc3fdf

----------------
IN: 
0x000c3fdf:  addr32 mov 0x1c(%ebx),%dl
0x000c3fe3:  addr32 mov 0x10(%ebx),%al
0x000c3fe7:  addr32 lea -0xc(%ebp),%esp
0x000c3fec:  pop    %ebx
0x000c3fee:  pop    %esi
0x000c3ff0:  pop    %edi
0x000c3ff2:  pop    %ebp
0x000c3ff4:  jmp    0xc20a3

----------------
IN: 
0x000c20a3:  push   %ebp
0x000c20a5:  mov    %esp,%ebp
0x000c20a8:  push   %ebx
0x000c20aa:  sub    $0x8,%esp
0x000c20ae:  mov    %al,%bl
0x000c20b0:  addr32 mov %edx,-0xc(%ebp)
0x000c20b5:  mov    $0xff,%eax
0x000c20bb:  push   %ax
0x000c20bc:  call   0xc0e87

----------------
IN: 
0x000c0e87:  push   %ebp
0x000c0e89:  mov    %esp,%ebp
0x000c0e8c:  mov    %al,%dl
0x000c0e8e:  inc    %al
0x000c0e90:  jne    0xc0e9f

----------------
IN: 
0x000c0e92:  mov    $0x40,%eax
0x000c0e98:  mov    %ax,%es
0x000c0e9a:  mov    %es:0x62,%dl
0x000c0e9f:  mov    $0xfe0000,%eax
0x000c0ea5:  cmp    $0x7,%dl
0x000c0ea8:  ja     0xc0ed1

----------------
IN: 
0x000c0eaa:  mov    $0x40,%eax
0x000c0eb0:  mov    %ax,%es
0x000c0eb2:  movzbl %dl,%edx
0x000c0eb6:  addr32 mov %es:0x50(%edx,%edx,1),%cx
0x000c0ebc:  xor    %eax,%eax
0x000c0ebf:  mov    %cl,%al
0x000c0ec1:  shr    $0x8,%cx
0x000c0ec4:  mov    %cl,%ah
0x000c0ec6:  shl    $0x10,%edx
0x000c0eca:  movzwl %ax,%eax
0x000c0ece:  or     %edx,%eax
0x000c0ed1:  pop    %ebp
0x000c0ed3:  ret    $0x2

----------------
IN: 
0x000c20bf:  addr32 mov %eax,-0x8(%ebp)
0x000c20c4:  pushl  $0x0
0x000c20c7:  mov    %bl,%cl
0x000c20c9:  addr32 mov -0xc(%ebp),%edx
0x000c20ce:  addr32 lea -0x8(%ebp),%eax
0x000c20d3:  push   %ax
0x000c20d4:  call   0xc1f4a

----------------
IN: 
0x000c1f4a:  push   %ebp
0x000c1f4c:  mov    %esp,%ebp
0x000c1f4f:  push   %edi
0x000c1f51:  push   %esi
0x000c1f53:  push   %ebx
0x000c1f55:  sub    $0x8,%esp
0x000c1f59:  mov    %eax,%esi
0x000c1f5c:  addr32 mov %cl,-0x13(%ebp)
0x000c1f60:  addr32 mov 0x8(%ebp),%al
0x000c1f64:  addr32 mov %al,-0x14(%ebp)
0x000c1f68:  addr32 mov (%esi),%bl
0x000c1f6b:  addr32 movzbl 0x1(%esi),%edi
0x000c1f71:  addr32 mov 0x2(%esi),%al
0x000c1f75:  addr32 mov %al,-0xd(%ebp)
0x000c1f79:  addr32 mov 0x3(%esi),%al
0x000c1f7d:  addr32 mov %al,-0xe(%ebp)
0x000c1f81:  mov    $0x40,%eax
0x000c1f87:  mov    %ax,%es
0x000c1f89:  mov    %es:0x84,%cl
0x000c1f8e:  movzbl %cl,%ecx
0x000c1f92:  inc    %ecx
0x000c1f94:  addr32 mov %cx,-0x12(%ebp)
0x000c1f98:  mov    %ax,%es
0x000c1f9a:  mov    %es:0x4a,%ax
0x000c1f9e:  addr32 mov %ax,-0x10(%ebp)
0x000c1fa2:  cmp    $0x9,%dl
0x000c1fa5:  je     0xc1fd0

----------------
IN: 
0x000c1fa7:  ja     0xc1fbb

----------------
IN: 
0x000c1fbb:  cmp    $0xa,%dl
0x000c1fbe:  je     0xc1fc7

----------------
IN: 
0x000c1fc0:  cmp    $0xd,%dl
0x000c1fc3:  je     0xc2021

----------------
IN: 
0x000c1fc5:  jmp    0xc1ffe

----------------
IN: 
0x000c1ffe:  addr32 mov -0x14(%ebp),%al
0x000c2002:  push   %eax
0x000c2004:  addr32 mov -0x13(%ebp),%al
0x000c2008:  push   %eax
0x000c200a:  push   %edx
0x000c200c:  addr32 mov -0xd(%ebp),%cl
0x000c2010:  mov    %edi,%edx
0x000c2013:  mov    %bl,%al
0x000c2015:  push   %ax
0x000c2016:  call   0xc0f83

----------------
IN: 
0x000c0f83:  push   %ebp
0x000c0f85:  mov    %esp,%ebp
0x000c0f88:  push   %edi
0x000c0f8a:  push   %esi
0x000c0f8c:  push   %ebx
0x000c0f8e:  sub    $0x2c,%esp
0x000c0f92:  addr32 mov %al,-0x10(%ebp)
0x000c0f96:  addr32 mov %dl,-0x24(%ebp)
0x000c0f9a:  addr32 mov %ecx,-0x28(%ebp)
0x000c0f9f:  addr32 movzbl 0x8(%ebp),%ebx
0x000c0fa5:  addr32 mov 0xc(%ebp),%al
0x000c0fa9:  addr32 mov %al,-0x20(%ebp)
0x000c0fad:  push   %ax
0x000c0fae:  call   0xc0c7a

----------------
IN: 
0x000c0c7a:  push   %ebp
0x000c0c7c:  mov    %esp,%ebp
0x000c0c7f:  mov    $0x40,%eax
0x000c0c85:  mov    %ax,%es
0x000c0c87:  mov    %es:0xba,%ax
0x000c0c8b:  and    $0x1ff,%eax
0x000c0c91:  pop    %ebp
0x000c0c93:  jmp    0xc0c09

----------------
IN: 
0x000c0fb1:  mov    %eax,%edi
0x000c0fb4:  test   %eax,%eax
0x000c0fb7:  je     0xc13c2

----------------
IN: 
0x000c0fbb:  addr32 mov %cs:(%eax),%dl
0x000c0fbf:  cmp    $0x3,%dl
0x000c0fc2:  je     0xc1053

----------------
IN: 
0x000c0fc6:  ja     0xc0fda

----------------
IN: 
0x000c0fc8:  test   %dl,%dl
0x000c0fca:  addr32 mov -0x28(%ebp),%ecx
0x000c0fcf:  je     0xc0feb

----------------
IN: 
0x000c0feb:  mov    $0x40,%eax
0x000c0ff1:  mov    %ax,%es
0x000c0ff3:  mov    %es:0x4a,%dx
0x000c0ff8:  mov    %ax,%es
0x000c0ffa:  mov    %es:0x4c,%ax
0x000c0ffe:  movzwl %ax,%eax
0x000c1002:  movzbl %cl,%ecx
0x000c1006:  imul   %ecx,%eax
0x000c100a:  addr32 movzbl -0x24(%ebp),%ecx
0x000c1010:  movzwl %dx,%edx
0x000c1014:  add    %edx,%edx
0x000c1017:  imul   %edx,%ecx
0x000c101b:  addr32 movzbl -0x10(%ebp),%edx
0x000c1021:  addr32 lea (%ecx,%edx,2),%edx
0x000c1026:  add    %eax,%edx
0x000c1029:  addr32 mov %cs:0xa(%edi),%ax
0x000c102e:  addr32 cmpb $0x0,0x10(%ebp)
0x000c1033:  je     0xc104a

----------------
IN: 
0x000c104a:  mov    %ax,%es
0x000c104c:  addr32 mov %bl,%es:(%edx)
0x000c1050:  jmp    0xc13c2

----------------
IN: 
0x000c13c2:  add    $0x2c,%esp
0x000c13c6:  pop    %ebx
0x000c13c8:  pop    %esi
0x000c13ca:  pop    %edi
0x000c13cc:  pop    %ebp
0x000c13ce:  ret    $0x2

----------------
IN: 
0x000c2019:  add    $0xc,%esp
0x000c201d:  inc    %ebx
0x000c201f:  jmp    0xc2024

----------------
IN: 
0x000c2024:  movzbl %bl,%eax
0x000c2028:  addr32 cmp -0x10(%ebp),%ax
0x000c202c:  jne    0xc2033

----------------
IN: 
0x000c2033:  mov    %edi,%eax
0x000c2036:  movzbl %al,%eax
0x000c203a:  addr32 cmp -0x12(%ebp),%ax
0x000c203e:  addr32 mov %bl,(%esi)
0x000c2041:  jae    0xc206a

----------------
IN: 
0x000c2043:  mov    %edi,%eax
0x000c2046:  addr32 mov %al,0x1(%esi)
0x000c204a:  addr32 mov -0xd(%ebp),%al
0x000c204e:  addr32 mov %al,0x2(%esi)
0x000c2052:  addr32 mov -0xe(%ebp),%al
0x000c2056:  addr32 mov %al,0x3(%esi)
0x000c205a:  addr32 lea -0xc(%ebp),%esp
0x000c205f:  pop    %ebx
0x000c2061:  pop    %esi
0x000c2063:  pop    %edi
0x000c2065:  pop    %ebp
0x000c2067:  ret    $0x2

----------------
IN: 
0x000c20d7:  pop    %ebx
0x000c20d9:  addr32 mov -0x6(%ebp),%cl
0x000c20dd:  addr32 mov -0x7(%ebp),%dl
0x000c20e1:  addr32 mov -0x8(%ebp),%al
0x000c20e5:  push   %ax
0x000c20e6:  call   0xc0ed6

----------------
IN: 
0x000c0ed6:  cmp    $0x7,%cl
0x000c0ed9:  ja     0xc0f80

----------------
IN: 
0x000c0edd:  push   %ebp
0x000c0edf:  mov    %esp,%ebp
0x000c0ee2:  push   %edi
0x000c0ee4:  push   %esi
0x000c0ee6:  push   %ebx
0x000c0ee8:  push   %ebx
0x000c0eea:  movzbl %dl,%esi
0x000c0eee:  mov    $0x40,%ebx
0x000c0ef4:  mov    %bx,%es
0x000c0ef6:  movzbl %cl,%edi
0x000c0efa:  mov    %esi,%edx
0x000c0efd:  shl    $0x8,%edx
0x000c0f01:  addr32 mov %edx,-0x10(%ebp)
0x000c0f06:  movzbl %al,%edx
0x000c0f0a:  addr32 or -0x10(%ebp),%edx
0x000c0f0f:  addr32 mov %dx,%es:0x50(%edi,%edi,1)
0x000c0f15:  mov    %bx,%es
0x000c0f17:  mov    %es:0x62,%dl
0x000c0f1c:  cmp    %dl,%cl
0x000c0f1e:  jne    0xc0f76

----------------
IN: 
0x000c0f20:  mov    %bx,%es
0x000c0f22:  mov    %es:0x4c,%dx
0x000c0f27:  mov    %bx,%es
0x000c0f29:  mov    %es:0x4a,%cx
0x000c0f2e:  movzwl %dx,%edx
0x000c0f32:  imul   %edi,%edx
0x000c0f36:  movzbl %al,%eax
0x000c0f3a:  movzwl %cx,%ecx
0x000c0f3e:  imul   %ecx,%esi
0x000c0f42:  add    %eax,%esi
0x000c0f45:  add    %esi,%esi
0x000c0f48:  add    %edx,%esi
0x000c0f4b:  push   %ax
0x000c0f4c:  call   0xc02b1

----------------
IN: 
0x000c0f4f:  mov    %eax,%edx
0x000c0f52:  mov    %esi,%ecx
0x000c0f55:  sar    %ecx
0x000c0f58:  shr    %esi
0x000c0f5b:  and    $0xff00,%esi
0x000c0f62:  mov    %esi,%eax
0x000c0f65:  or     $0xe,%eax
0x000c0f69:  out    %ax,(%dx)
0x000c0f6a:  mov    %ecx,%eax
0x000c0f6d:  shl    $0x8,%eax
0x000c0f71:  or     $0xf,%eax
0x000c0f75:  out    %ax,(%dx)
0x000c0f76:  pop    %eax
0x000c0f78:  pop    %ebx
0x000c0f7a:  pop    %esi
0x000c0f7c:  pop    %edi
0x000c0f7e:  pop    %ebp
0x000c0f80:  ret    $0x2

----------------
IN: 
0x000c20e9:  addr32 mov -0x4(%ebp),%ebx
0x000c20ee:  mov    %ebp,%esp
0x000c20f1:  pop    %ebp
0x000c20f3:  ret    $0x2

----------------
IN: 
0x000f1754:  add    $0x28,%esp
0x000f1757:  pop    %ebx
0x000f1758:  ret    

----------------
IN: 
0x000f1774:  mov    $0xd,%eax
0x000f1779:  call   0xf1714

----------------
IN: 
0x000c2021:  xor    %ebx,%ebx
0x000c2024:  movzbl %bl,%eax
0x000c2028:  addr32 cmp -0x10(%ebp),%ax
0x000c202c:  jne    0xc2033

----------------
IN: 
0x000c1fc7:  inc    %edi
0x000c1fc9:  jmp    0xc2024

----------------
IN: 
0x000f2376:  ret    

----------------
IN: 
0x07fe45b2:  lea    0x46(%esp),%edi
0x07fe45b6:  mov    $0x4,%ecx
0x07fe45bb:  xor    %eax,%eax
0x07fe45bd:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x07fe45bd:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x07fe45bf:  mov    0x7feff0b,%eax
0x07fe45c4:  test   %eax,%eax
0x07fe45c6:  je     0x7fe46cb

----------------
IN: 
0x07fe45cc:  mov    0x18(%eax),%esi
0x07fe45cf:  movzwl 0x16(%eax),%eax
0x07fe45d3:  add    %esi,%eax
0x07fe45d5:  cmp    %eax,%esi
0x07fe45d7:  jae    0x7fe46cb

----------------
IN: 
0x07fe45dd:  mov    %eax,%ebx
0x07fe45df:  sub    %esi,%ebx
0x07fe45e1:  cmp    $0x3,%ebx
0x07fe45e4:  jbe    0x7fe46cb

----------------
IN: 
0x07fe45ea:  mov    0x1(%esi),%dl
0x07fe45ed:  movzbl %dl,%ecx
0x07fe45f0:  cmp    %ecx,%ebx
0x07fe45f2:  jb     0x7fe46cb

----------------
IN: 
0x07fe45f8:  cmpb   $0x1,(%esi)
0x07fe45fb:  jne    0x7fe4602

----------------
IN: 
0x07fe4602:  add    %ecx,%esi
0x07fe4604:  mov    %eax,%edx
0x07fe4606:  sub    %esi,%edx
0x07fe4608:  cmp    $0x1,%edx
0x07fe460b:  jbe    0x7fe46cb

----------------
IN: 
0x07fe4611:  cmpb   $0x0,(%esi)
0x07fe4614:  je     0x7fe4619

----------------
IN: 
0x07fe4616:  inc    %esi
0x07fe4617:  jmp    0x7fe4604

----------------
IN: 
0x07fe4604:  mov    %eax,%edx
0x07fe4606:  sub    %esi,%edx
0x07fe4608:  cmp    $0x1,%edx
0x07fe460b:  jbe    0x7fe46cb

----------------
IN: 
0x07fe4619:  cmpb   $0x0,0x1(%esi)
0x07fe461d:  jne    0x7fe4616

----------------
IN: 
0x07fe461f:  add    $0x2,%esi
0x07fe4622:  jmp    0x7fe45d5

----------------
IN: 
0x07fe45d5:  cmp    %eax,%esi
0x07fe45d7:  jae    0x7fe46cb

----------------
IN: 
0x07fe45fd:  cmp    $0x17,%dl
0x07fe4600:  ja     0x7fe4624

----------------
IN: 
0x07fe4624:  lea    0x8(%esi),%ebx
0x07fe4627:  mov    $0x10,%ecx
0x07fe462c:  lea    0x46(%esp),%edx
0x07fe4630:  mov    %ebx,%eax
0x07fe4632:  call   0x7fdf1b4

----------------
IN: 
0x07fe4637:  test   %eax,%eax
0x07fe4639:  je     0x7fe46cb

----------------
IN: 
0x07fe46cb:  add    $0x7c,%esp
0x07fe46ce:  pop    %ebx
0x07fe46cf:  pop    %esi
0x07fe46d0:  pop    %edi
0x07fe46d1:  ret    

----------------
IN: 
0x07febc82:  call   0x7fe9355

----------------
IN: 
0x07fe9355:  push   %ebp
0x07fe9356:  push   %edi
0x07fe9357:  push   %esi
0x07fe9358:  push   %ebx
0x07fe9359:  sub    $0x40,%esp
0x07fe935c:  mov    0x7fefee3,%eax
0x07fe9361:  lea    -0x4(%eax),%ebx
0x07fe9364:  movl   $0x0,0x24(%esp)
0x07fe936c:  xor    %edi,%edi
0x07fe936e:  cmp    $0xfffffffc,%ebx
0x07fe9371:  je     0x7fe971b

----------------
IN: 
0x07fe9377:  cmpw   $0xc03,0x14(%ebx)
0x07fe937d:  jne    0x7fe9710

----------------
IN: 
0x07fe9710:  mov    0x4(%ebx),%ebx
0x07fe9713:  sub    $0x4,%ebx
0x07fe9716:  jmp    0x7fe936e

----------------
IN: 
0x07fe936e:  cmp    $0xfffffffc,%ebx
0x07fe9371:  je     0x7fe971b

----------------
IN: 
0x07fe971b:  mov    $0x2,%eax
0x07fe9720:  call   0x7fe04e5

----------------
IN: 
0x07fe9725:  mov    $0xfe987,%eax
0x07fe972a:  mov    %ax,0x24
0x07fe9730:  movw   $0xf000,0x26
0x07fe9739:  mov    $0x1000,%eax
0x07fe973e:  call   0x7fe04e5

----------------
IN: 
0x07fe9743:  mov    $0xfd5cd,%eax
0x07fe9748:  mov    %ax,0x1d0
0x07fe974e:  movw   $0xf000,0x1d2
0x07fe9757:  xor    %edx,%edx
0x07fe9759:  mov    $0x7fe8ce9,%eax
0x07fe975e:  call   0x7fdf5a8

----------------
IN: 
0x07fdf5a8:  push   %ebp
0x07fdf5a9:  push   %edi
0x07fdf5aa:  push   %esi
0x07fdf5ab:  push   %ebx
0x07fdf5ac:  push   %ecx
0x07fdf5ad:  mov    %eax,%edi
0x07fdf5af:  mov    %edx,%ebp
0x07fdf5b1:  movl   $0x1000,(%esp)
0x07fdf5b8:  mov    $0x1000,%ecx
0x07fdf5bd:  or     $0xffffffff,%edx
0x07fdf5c0:  mov    $0x7fefe9f,%eax
0x07fdf5c5:  call   0x7fdf52c

----------------
IN: 
0x07fdf5ca:  mov    %eax,%ebx
0x07fdf5cc:  test   %eax,%eax
0x07fdf5ce:  je     0x7fdf61b

----------------
IN: 
0x07fdf5d0:  lea    0x1000(%eax),%eax
0x07fdf5d6:  mov    %eax,(%ebx)
0x07fdf5d8:  mov    %esp,%eax
0x07fdf5da:  mov    $0xf6644,%esi
0x07fdf5df:  cmp    $0x100000,%eax
0x07fdf5e4:  jbe    0x7fdf5ed

----------------
IN: 
0x07fdf5ed:  lea    0x4(%esi),%edx
0x07fdf5f0:  lea    0x4(%ebx),%eax
0x07fdf5f3:  call   0x7fdf186

----------------
IN: 
0x07fdf5f8:  mov    %ebp,%eax
0x07fdf5fa:  mov    %edi,%ecx
0x07fdf5fc:  mov    %esi,%edx
0x07fdf5fe:  push   $0x7fdf619
0x07fdf603:  push   %ebp
0x07fdf604:  mov    %esp,(%edx)
0x07fdf606:  mov    (%ebx),%esp
0x07fdf608:  call   *%ecx

----------------
IN: 
0x07fe8ce9:  push   %esi
0x07fe8cea:  push   %ebx
0x07fe8ceb:  sub    $0xc,%esp
0x07fe8cee:  mov    $0x10,%ebx
0x07fe8cf3:  in     $0x64,%al
0x07fe8cf5:  test   $0x1,%al
0x07fe8cf7:  je     0x7fe8d6f

----------------
IN: 
0x07fe8d6f:  lea    0xa(%esp),%edx
0x07fe8d73:  mov    $0x1aa,%eax
0x07fe8d78:  call   0x7fe13fb

----------------
IN: 
0x07fe13fb:  push   %ebp
0x07fe13fc:  push   %edi
0x07fe13fd:  push   %esi
0x07fe13fe:  push   %ebx
0x07fe13ff:  mov    %eax,%esi
0x07fe1401:  mov    %edx,%edi
0x07fe1403:  call   0xf17b5

----------------
IN: 
0x000f17b5:  push   %ebx
0x000f17b6:  mov    $0x2710,%ebx
0x000f17bb:  in     $0x64,%al
0x000f17bd:  test   $0x2,%al
0x000f17bf:  je     0xf17e2

----------------
IN: 
0x000f17e2:  xor    %eax,%eax
0x000f17e4:  pop    %ebx
0x000f17e5:  ret    

----------------
IN: 
0x07fe1408:  test   %eax,%eax
0x07fe140a:  jne    0x7fe1476

----------------
IN: 
0x07fe140c:  mov    %esi,%eax
0x07fe140e:  movzbl %al,%eax
0x07fe1411:  out    %al,$0x64
0x07fe1413:  mov    %esi,%ebp
0x07fe1415:  sar    $0xc,%ebp
0x07fe1418:  and    $0xf,%ebp
0x07fe141b:  xor    %ebx,%ebx
0x07fe141d:  cmp    %ebp,%ebx
0x07fe141f:  jge    0x7fe1432

----------------
IN: 
0x07fe1432:  sar    $0x8,%esi
0x07fe1435:  and    $0xf,%esi
0x07fe1438:  xor    %ebx,%ebx
0x07fe143a:  cmp    %esi,%ebx
0x07fe143c:  jge    0x7fe146a

----------------
IN: 
0x07fe143e:  mov    $0x2710,%ebp
0x07fe1443:  in     $0x64,%al
0x07fe1445:  test   $0x1,%al
0x07fe1447:  jne    0x7fe146e

----------------
IN: 
0x07fe146e:  in     $0x60,%al
0x07fe1470:  mov    %al,(%edi,%ebx,1)
0x07fe1473:  inc    %ebx
0x07fe1474:  jmp    0x7fe143a

----------------
IN: 
0x07fe143a:  cmp    %esi,%ebx
0x07fe143c:  jge    0x7fe146a

----------------
IN: 
0x07fe146a:  xor    %eax,%eax
0x07fe146c:  jmp    0x7fe1476

----------------
IN: 
0x07fe1476:  pop    %ebx
0x07fe1477:  pop    %esi
0x07fe1478:  pop    %edi
0x07fe1479:  pop    %ebp
0x07fe147a:  ret    

----------------
IN: 
0x07fe8d7d:  test   %eax,%eax
0x07fe8d7f:  jne    0x7fe8e36

----------------
IN: 
0x07fe8d85:  movzbl 0xa(%esp),%eax
0x07fe8d8a:  cmp    $0x55,%al
0x07fe8d8c:  je     0x7fe8d9b

----------------
IN: 
0x07fe8d9b:  lea    0xa(%esp),%edx
0x07fe8d9f:  mov    $0x1ab,%eax
0x07fe8da4:  call   0x7fe13fb

----------------
IN: 
0x07fe8da9:  test   %eax,%eax
0x07fe8dab:  jne    0x7fe8e36

----------------
IN: 
0x07fe8db1:  movzbl 0xa(%esp),%eax
0x07fe8db6:  test   %al,%al
0x07fe8db8:  je     0x7fe8d14

----------------
IN: 
0x07fe8d14:  movb   $0x30,0xef7a0
0x07fe8d1b:  xor    %edx,%edx
0x07fe8d1d:  xor    %ecx,%ecx
0x07fe8d1f:  mov    $0xf4dff,%eax
0x07fe8d24:  call   0x7fe081e

----------------
IN: 
0x07fe8d29:  mov    %eax,%ebx
0x07fe8d2b:  call   0xf13e9

----------------
IN: 
0x000f13e9:  push   %ebx
0x000f13ea:  mov    %eax,%ebx
0x000f13ec:  call   0xf130f

----------------
IN: 
0x000f130f:  mov    0xf6370,%dx
0x000f1316:  test   %dx,%dx
0x000f1319:  jne    0xf1333

----------------
IN: 
0x000f1333:  cmp    $0x40,%dx
0x000f1337:  mov    0xef7a8,%ecx
0x000f133d:  je     0xf135a

----------------
IN: 
0x000f133f:  in     (%dx),%eax
0x000f1340:  and    $0xffffff,%eax
0x000f1345:  mov    %ecx,%edx
0x000f1347:  and    $0xff000000,%edx
0x000f134d:  or     %edx,%eax
0x000f134f:  cmp    %ecx,%eax
0x000f1351:  jae    0xf137d

----------------
IN: 
0x000f137d:  mov    %eax,0xef7a8
0x000f1382:  ret    

----------------
IN: 
0x000f13f1:  imul   0xf6374,%ebx
0x000f13f8:  add    %ebx,%eax
0x000f13fa:  pop    %ebx
0x000f13fb:  ret    

----------------
IN: 
0x07fe8d30:  mov    %eax,%esi
0x07fe8d32:  lea    0xa(%esp),%edx
0x07fe8d36:  mov    $0x2ff,%eax
0x07fe8d3b:  call   0x7fe42da

----------------
IN: 
0x07fe42da:  push   %ebp
0x07fe42db:  push   %edi
0x07fe42dc:  push   %esi
0x07fe42dd:  push   %ebx
0x07fe42de:  sub    $0x8,%esp
0x07fe42e1:  mov    %eax,%edi
0x07fe42e3:  mov    %edx,%esi
0x07fe42e5:  mov    0xef7a0,%al
0x07fe42ea:  mov    %al,0x6(%esp)
0x07fe42ee:  and    $0xffffffcc,%eax
0x07fe42f1:  or     $0x30,%eax
0x07fe42f4:  mov    %al,0x7(%esp)
0x07fe42f8:  lea    0x7(%esp),%edx
0x07fe42fc:  mov    $0x1060,%eax
0x07fe4301:  call   0x7fe13fb

----------------
IN: 
0x07fe1421:  call   0xf17b5

----------------
IN: 
0x07fe1426:  test   %eax,%eax
0x07fe1428:  jne    0x7fe1476

----------------
IN: 
0x07fe142a:  mov    (%edi,%ebx,1),%al
0x07fe142d:  out    %al,$0x60
0x07fe142f:  inc    %ebx
0x07fe1430:  jmp    0x7fe141d

----------------
IN: 
0x07fe141d:  cmp    %ebp,%ebx
0x07fe141f:  jge    0x7fe1432

----------------
IN: 
0x07fe4306:  test   %eax,%eax
0x07fe4308:  jne    0x7fe4463

----------------
IN: 
0x07fe430e:  call   0xf1682

----------------
IN: 
0x000f168b:  and    $0xfffff000,%eax
0x000f1690:  cmp    $0xf6644,%eax
0x000f1695:  jne    0xf16aa

----------------
IN: 
0x000f16aa:  jmp    0xf0c4d

----------------
IN: 
0x000f0c57:  push   %edi
0x000f0c58:  push   %esi
0x000f0c59:  push   %ebx
0x000f0c5a:  push   $0xf0c66
0x000f0c5f:  push   %ebp
0x000f0c60:  mov    %esp,(%eax)
0x000f0c62:  mov    (%ecx),%esp
0x000f0c64:  pop    %ebp
0x000f0c65:  ret    

----------------
IN: 
0x07fdf619:  jmp    0x7fdf61f

----------------
IN: 
0x07fdf61f:  pop    %eax
0x07fdf620:  pop    %ebx
0x07fdf621:  pop    %esi
0x07fdf622:  pop    %edi
0x07fdf623:  pop    %ebp
0x07fdf624:  ret    

----------------
IN: 
0x07fe9763:  mov    $0x37a,%edx
0x07fe9768:  in     (%dx),%al
0x07fe9769:  and    $0xffffffdf,%eax
0x07fe976c:  out    %al,(%dx)
0x07fe976d:  mov    $0x78,%dl
0x07fe976f:  mov    $0xaa,%al
0x07fe9771:  out    %al,(%dx)
0x07fe9772:  in     (%dx),%al
0x07fe9773:  xor    %ecx,%ecx
0x07fe9775:  cmp    $0xaa,%al
0x07fe9777:  jne    0x7fe978b

----------------
IN: 
0x07fe9779:  movw   $0x378,0x408
0x07fe9782:  movb   $0x14,0x478
0x07fe9789:  mov    $0x1,%cl
0x07fe978b:  mov    $0x27a,%edx
0x07fe9790:  in     (%dx),%al
0x07fe9791:  and    $0xffffffdf,%eax
0x07fe9794:  out    %al,(%dx)
0x07fe9795:  mov    $0x78,%dl
0x07fe9797:  mov    $0xaa,%al
0x07fe9799:  out    %al,(%dx)
0x07fe979a:  in     (%dx),%al
0x07fe979b:  xor    %ebx,%ebx
0x07fe979d:  cmp    $0xaa,%al
0x07fe979f:  jne    0x7fe97b7

----------------
IN: 
0x07fe97b7:  add    %ecx,%ebx
0x07fe97b9:  movzwl %bx,%eax
0x07fe97bc:  mov    %eax,0x4(%esp)
0x07fe97c0:  movl   $0xf5146,(%esp)
0x07fe97c7:  call   0xf1787

----------------
IN: 
0x07fe97cc:  mov    %ebx,%ecx
0x07fe97ce:  shl    $0xe,%ecx
0x07fe97d1:  mov    0x410,%eax
0x07fe97d6:  and    $0x3fff,%ax
0x07fe97da:  or     %eax,%ecx
0x07fe97dc:  mov    %cx,0x410
0x07fe97e3:  xor    %edx,%edx
0x07fe97e5:  mov    $0x3f8,%eax
0x07fe97ea:  call   0x7fe049e

----------------
IN: 
0x07fe049e:  push   %edi
0x07fe049f:  push   %esi
0x07fe04a0:  push   %ebx
0x07fe04a1:  mov    %eax,%ecx
0x07fe04a3:  mov    %edx,%edi
0x07fe04a5:  lea    0x1(%eax),%ebx
0x07fe04a8:  mov    $0x2,%al
0x07fe04aa:  mov    %ebx,%edx
0x07fe04ac:  out    %al,(%dx)
0x07fe04ad:  in     (%dx),%al
0x07fe04ae:  xor    %esi,%esi
0x07fe04b0:  cmp    $0x2,%al
0x07fe04b2:  jne    0x7fe04df

----------------
IN: 
0x07fe04b4:  lea    0x2(%ecx),%edx
0x07fe04b7:  in     (%dx),%al
0x07fe04b8:  and    $0x3f,%eax
0x07fe04bb:  xor    %esi,%esi
0x07fe04bd:  cmp    $0x2,%al
0x07fe04bf:  jne    0x7fe04df

----------------
IN: 
0x07fe04c1:  xor    %eax,%eax
0x07fe04c3:  mov    %ebx,%edx
0x07fe04c5:  out    %al,(%dx)
0x07fe04c6:  mov    %edi,%eax
0x07fe04c8:  movzbl %al,%edx
0x07fe04cb:  mov    %cx,0x400(%edx,%edx,1)
0x07fe04d3:  movb   $0xa,0x47c(%edx)
0x07fe04da:  mov    $0x1,%esi
0x07fe04df:  mov    %esi,%eax
0x07fe04e1:  pop    %ebx
0x07fe04e2:  pop    %esi
0x07fe04e3:  pop    %edi
0x07fe04e4:  ret    

----------------
IN: 
0x07fe97ef:  mov    %eax,%ebx
0x07fe97f1:  movzbl %al,%edx
0x07fe97f4:  mov    $0x2f8,%eax
0x07fe97f9:  call   0x7fe049e

----------------
IN: 
0x07fe04df:  mov    %esi,%eax
0x07fe04e1:  pop    %ebx
0x07fe04e2:  pop    %esi
0x07fe04e3:  pop    %edi
0x07fe04e4:  ret    

----------------
IN: 
0x07fe97fe:  add    %eax,%ebx
0x07fe9800:  movzbl %bl,%edx
0x07fe9803:  mov    $0x3e8,%eax
0x07fe9808:  call   0x7fe049e

----------------
IN: 
0x07fe980d:  add    %eax,%ebx
0x07fe980f:  movzbl %bl,%edx
0x07fe9812:  mov    $0x2e8,%eax
0x07fe9817:  call   0x7fe049e

----------------
IN: 
0x07fe981c:  add    %eax,%ebx
0x07fe981e:  movzwl %bx,%eax
0x07fe9821:  mov    %eax,0x4(%esp)
0x07fe9825:  movl   $0xf515a,(%esp)
0x07fe982c:  call   0xf1787

----------------
IN: 
0x07fe9831:  mov    %ebx,%eax
0x07fe9833:  shl    $0x9,%eax
0x07fe9836:  mov    0x410,%edx
0x07fe983c:  and    $0xf1,%dh
0x07fe983f:  or     %edx,%eax
0x07fe9841:  mov    %ax,0x410
0x07fe9847:  mov    $0xfefc7,%edx
0x07fe984c:  mov    $0xf6354,%eax
0x07fe9851:  mov    $0xb,%ecx
0x07fe9856:  mov    %edx,%edi
0x07fe9858:  mov    %eax,%esi
0x07fe985a:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe985a:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe985c:  mov    %ax,0x78
0x07fe9862:  movw   $0xf000,0x7a
0x07fe986b:  mov    $0x90,%al
0x07fe986d:  out    %al,$0x70
0x07fe986f:  in     $0x71,%al
0x07fe9871:  mov    %al,0x24(%esp)
0x07fe9875:  test   $0xf0,%al
0x07fe9877:  je     0x7fe9888

----------------
IN: 
0x07fe9879:  mov    %al,%dl
0x07fe987b:  shr    $0x4,%dl
0x07fe987e:  movzbl %dl,%edx
0x07fe9881:  xor    %eax,%eax
0x07fe9883:  call   0x7fe553f

----------------
IN: 
0x07fe553f:  push   %edi
0x07fe5540:  push   %esi
0x07fe5541:  push   %ebx
0x07fe5542:  sub    $0x114,%esp
0x07fe5548:  mov    %eax,%edi
0x07fe554a:  mov    %edx,%esi
0x07fe554c:  lea    -0x1(%edx),%eax
0x07fe554f:  cmp    $0x7,%eax
0x07fe5552:  jbe    0x7fe5569

----------------
IN: 
0x07fe5569:  mov    $0x24,%eax
0x07fe556e:  call   0x7fdf657

----------------
IN: 
0x07fe5573:  mov    %eax,%ebx
0x07fe5575:  test   %eax,%eax
0x07fe5577:  jne    0x7fe558d

----------------
IN: 
0x07fe558d:  mov    $0x24,%ecx
0x07fe5592:  xor    %edx,%edx
0x07fe5594:  call   0xf0d7a

----------------
IN: 
0x07fe5599:  mov    %edi,0x14(%ebx)
0x07fe559c:  movb   $0x1,(%ebx)
0x07fe559f:  movw   $0x200,0x1a(%ebx)
0x07fe55a5:  mov    %esi,%eax
0x07fe55a7:  mov    %al,0x1(%ebx)
0x07fe55aa:  movl   $0xffffffff,0xc(%ebx)
0x07fe55b1:  movl   $0xffffffff,0x10(%ebx)
0x07fe55b8:  imul   $0xa,%esi,%esi
0x07fe55bb:  mov    0xf62f8(%esi),%eax
0x07fe55c1:  mov    %eax,0x2(%ebx)
0x07fe55c4:  mov    0xf62fc(%esi),%eax
0x07fe55ca:  mov    %eax,0x6(%ebx)
0x07fe55cd:  lea    0x41(%edi),%eax
0x07fe55d0:  mov    %eax,0x8(%esp)
0x07fe55d4:  movl   $0xf485d,0x4(%esp)
0x07fe55dc:  movl   $0x50,(%esp)
0x07fe55e3:  call   0x7fe5355

----------------
IN: 
0x07fe5355:  push   %esi
0x07fe5356:  push   %ebx
0x07fe5357:  sub    $0xc,%esp
0x07fe535a:  mov    0x18(%esp),%esi
0x07fe535e:  test   %esi,%esi
0x07fe5360:  je     0x7fe53b6

----------------
IN: 
0x07fe5362:  mov    %esi,%eax
0x07fe5364:  call   0x7fe0529

----------------
IN: 
0x07fe5369:  mov    %eax,%ebx
0x07fe536b:  test   %eax,%eax
0x07fe536d:  jne    0x7fe5380

----------------
IN: 
0x07fe5380:  movl   $0x7fdf197,(%esp)
0x07fe5387:  mov    %eax,0x4(%esp)
0x07fe538b:  add    %eax,%esi
0x07fe538d:  mov    %esi,0x8(%esp)
0x07fe5391:  lea    0x20(%esp),%ecx
0x07fe5395:  mov    0x1c(%esp),%edx
0x07fe5399:  mov    %esp,%eax
0x07fe539b:  call   0xf1445

----------------
IN: 
0x000f14bc:  cmp    $0x2e,%al
0x000f14be:  je     0xf15cb

----------------
IN: 
0x000f14c4:  cmp    $0x63,%al
0x000f14c6:  je     0xf15ba

----------------
IN: 
0x000f15ba:  lea    0x4(%esi),%edi
0x000f15bd:  movsbl (%esi),%edx
0x000f15c0:  mov    0x4(%esp),%eax
0x000f15c4:  call   0xf0c75

----------------
IN: 
0x000f15c9:  jmp    0xf161f

----------------
IN: 
0x07fe53a0:  mov    0x4(%esp),%eax
0x07fe53a4:  mov    0x8(%esp),%edx
0x07fe53a8:  cmp    %edx,%eax
0x07fe53aa:  jb     0x7fe53af

----------------
IN: 
0x07fe53af:  movb   $0x0,(%eax)
0x07fe53b2:  mov    %ebx,%eax
0x07fe53b4:  jmp    0x7fe53b8

----------------
IN: 
0x07fe53b8:  add    $0xc,%esp
0x07fe53bb:  pop    %ebx
0x07fe53bc:  pop    %esi
0x07fe53bd:  ret    

----------------
IN: 
0x07fe55e8:  mov    %eax,%esi
0x07fe55ea:  mov    0x7fefee3,%eax
0x07fe55ef:  lea    -0x4(%eax),%ecx
0x07fe55f2:  cmp    $0xfffffffc,%ecx
0x07fe55f5:  je     0x7fe5607

----------------
IN: 
0x07fe55f7:  cmpw   $0x601,0x14(%ecx)
0x07fe55fd:  je     0x7fe560c

----------------
IN: 
0x07fe55ff:  mov    0x4(%ecx),%ecx
0x07fe5602:  sub    $0x4,%ecx
0x07fe5605:  jmp    0x7fe55f2

----------------
IN: 
0x07fe55f2:  cmp    $0xfffffffc,%ecx
0x07fe55f5:  je     0x7fe5607

----------------
IN: 
0x07fe560c:  or     $0xffffffff,%eax
0x07fe560f:  test   %ecx,%ecx
0x07fe5611:  je     0x7fe5653

----------------
IN: 
0x07fe5613:  mov    $0xf486f,%edx
0x07fe5618:  lea    0x14(%esp),%eax
0x07fe561c:  call   0x7fe4e94

----------------
IN: 
0x07fe4e94:  push   %ebp
0x07fe4e95:  push   %edi
0x07fe4e96:  push   %esi
0x07fe4e97:  push   %ebx
0x07fe4e98:  sub    $0x14,%esp
0x07fe4e9b:  mov    %edx,%ebp
0x07fe4e9d:  mov    %ecx,%edi
0x07fe4e9f:  mov    0xc(%ecx),%ecx
0x07fe4ea2:  test   %ecx,%ecx
0x07fe4ea4:  lea    0x100(%eax),%esi
0x07fe4eaa:  je     0x7fe4eba

----------------
IN: 
0x07fe4eba:  movzbl 0x2(%edi),%edx
0x07fe4ebe:  mov    %eax,%ebx
0x07fe4ec0:  test   %dl,%dl
0x07fe4ec2:  je     0x7fe4ee2

----------------
IN: 
0x07fe4ee2:  movl   $0xf471f,0xc(%esp)
0x07fe4eea:  movl   $0xf5060,0x8(%esp)
0x07fe4ef2:  mov    %esi,%eax
0x07fe4ef4:  sub    %ebx,%eax
0x07fe4ef6:  mov    %eax,0x4(%esp)
0x07fe4efa:  mov    %ebx,(%esp)
0x07fe4efd:  call   0x7fe46d2

----------------
IN: 
0x07fe4f02:  add    %eax,%ebx
0x07fe4f04:  mov    (%edi),%eax
0x07fe4f06:  mov    %eax,%edi
0x07fe4f08:  and    $0x7,%edi
0x07fe4f0b:  shr    $0x3,%ax
0x07fe4f0f:  and    $0x1f,%eax
0x07fe4f12:  mov    %eax,0x10(%esp)
0x07fe4f16:  mov    %ebp,0xc(%esp)
0x07fe4f1a:  movl   $0xf472a,0x8(%esp)
0x07fe4f22:  mov    %esi,%eax
0x07fe4f24:  sub    %ebx,%eax
0x07fe4f26:  mov    %eax,0x4(%esp)
0x07fe4f2a:  mov    %ebx,(%esp)
0x07fe4f2d:  call   0x7fe46d2

----------------
IN: 
0x07fe4f32:  add    %eax,%ebx
0x07fe4f34:  test   %edi,%edi
0x07fe4f36:  je     0x7fe4f54

----------------
IN: 
0x07fe4f54:  mov    %ebx,%eax
0x07fe4f56:  add    $0x14,%esp
0x07fe4f59:  pop    %ebx
0x07fe4f5a:  pop    %esi
0x07fe4f5b:  pop    %edi
0x07fe4f5c:  pop    %ebp
0x07fe4f5d:  ret    

----------------
IN: 
0x07fe5621:  mov    %edi,0x10(%esp)
0x07fe5625:  movl   $0x3f0,0xc(%esp)
0x07fe562d:  movl   $0xf4873,0x8(%esp)
0x07fe5635:  lea    0x114(%esp),%edx
0x07fe563c:  sub    %eax,%edx
0x07fe563e:  mov    %edx,0x4(%esp)
0x07fe5642:  mov    %eax,(%esp)
0x07fe5645:  call   0x7fe46d2

----------------
IN: 
0x07fe564a:  lea    0x14(%esp),%eax
0x07fe564e:  call   0x7fe2682

----------------
IN: 
0x07fe2682:  push   %ebp
0x07fe2683:  push   %edi
0x07fe2684:  push   %esi
0x07fe2685:  push   %ebx
0x07fe2686:  sub    $0xc,%esp
0x07fe2689:  mov    %eax,%ebp
0x07fe268b:  mov    %eax,0x4(%esp)
0x07fe268f:  movl   $0xf40c7,(%esp)
0x07fe2696:  call   0xf1787

----------------
IN: 
0x07fe269b:  mov    0x7feff2f,%eax
0x07fe26a0:  mov    %eax,0x8(%esp)
0x07fe26a4:  mov    0x7fefe7f,%edi
0x07fe26aa:  xor    %esi,%esi
0x07fe26ac:  cmp    0x8(%esp),%esi
0x07fe26b0:  jge    0x7fe26f4

----------------
IN: 
0x07fe26f4:  or     $0xffffffff,%eax
0x07fe26f7:  add    $0xc,%esp
0x07fe26fa:  pop    %ebx
0x07fe26fb:  pop    %esi
0x07fe26fc:  pop    %edi
0x07fe26fd:  pop    %ebp
0x07fe26fe:  ret    

----------------
IN: 
0x07fe5653:  mov    0x7fefe7b,%ecx
0x07fe5659:  mov    %eax,%edx
0x07fe565b:  test   %eax,%eax
0x07fe565d:  jns    0x7fe5661

----------------
IN: 
0x07fe565f:  mov    %ecx,%edx
0x07fe5661:  mov    %esi,(%esp)
0x07fe5664:  mov    %ebx,%ecx
0x07fe5666:  mov    $0x1,%eax
0x07fe566b:  call   0x7fe0d22

----------------
IN: 
0x07fe0d22:  push   %ebp
0x07fe0d23:  push   %edi
0x07fe0d24:  push   %esi
0x07fe0d25:  push   %ebx
0x07fe0d26:  push   %esi
0x07fe0d27:  mov    %eax,%esi
0x07fe0d29:  mov    %edx,%edi
0x07fe0d2b:  mov    %ecx,%ebp
0x07fe0d2d:  mov    0x18(%esp),%ebx
0x07fe0d31:  mov    $0x18,%eax
0x07fe0d36:  call   0x7fe0529

----------------
IN: 
0x07fe0d3b:  test   %eax,%eax
0x07fe0d3d:  jne    0x7fe0d52

----------------
IN: 
0x07fe0d52:  mov    %esi,(%eax)
0x07fe0d54:  mov    %edi,0x8(%eax)
0x07fe0d57:  mov    %ebp,0x4(%eax)
0x07fe0d5a:  test   %ebx,%ebx
0x07fe0d5c:  jne    0x7fe0d63

----------------
IN: 
0x07fe0d63:  mov    %ebx,0xc(%eax)
0x07fe0d66:  mov    0x7fefe6b,%ebx
0x07fe0d6c:  movl   $0x7fefe6b,(%esp)
0x07fe0d73:  test   %ebx,%ebx
0x07fe0d75:  jne    0x7fe0d87

----------------
IN: 
0x07fe0d77:  add    $0x10,%eax
0x07fe0d7a:  mov    (%esp),%edx
0x07fe0d7d:  pop    %ecx
0x07fe0d7e:  pop    %ebx
0x07fe0d7f:  pop    %esi
0x07fe0d80:  pop    %edi
0x07fe0d81:  pop    %ebp
0x07fe0d82:  jmp    0x7fdf186

----------------
IN: 
0x07fe5670:  add    $0x114,%esp
0x07fe5676:  pop    %ebx
0x07fe5677:  pop    %esi
0x07fe5678:  pop    %edi
0x07fe5679:  ret    

----------------
IN: 
0x07fe9888:  mov    0x24(%esp),%dl
0x07fe988c:  and    $0xf,%dl
0x07fe988f:  je     0x7fe989e

----------------
IN: 
0x07fe989e:  mov    $0x40,%eax
0x07fe98a3:  call   0x7fe04e5

----------------
IN: 
0x07fe98a8:  mov    $0xfef57,%eax
0x07fe98ad:  mov    %ax,0x38
0x07fe98b3:  movw   $0xf000,0x3a
0x07fe98bc:  mov    $0x7d00,%eax
0x07fe98c1:  call   0xf13e9

----------------
IN: 
0x07fe98c6:  mov    %eax,0x7feff33
0x07fe98cb:  mov    0x7fefee3,%eax
0x07fe98d0:  lea    -0x4(%eax),%ebx
0x07fe98d3:  test   %eax,%eax
0x07fe98d5:  jne    0x7fe9907

----------------
IN: 
0x07fe9907:  cmp    $0xfffffffc,%ebx
0x07fe990a:  je     0x7fe9922

----------------
IN: 
0x07fe990c:  xor    %ecx,%ecx
0x07fe990e:  mov    %ebx,%edx
0x07fe9910:  mov    $0x7fefc53,%eax
0x07fe9915:  call   0x7fdf286

----------------
IN: 
0x07fe991a:  mov    0x4(%ebx),%ebx
0x07fe991d:  sub    $0x4,%ebx
0x07fe9920:  jmp    0x7fe9907

----------------
IN: 
0x07fe4149:  push   %ebp
0x07fe414a:  push   %edi
0x07fe414b:  push   %esi
0x07fe414c:  push   %ebx
0x07fe414d:  sub    $0x8,%esp
0x07fe4150:  mov    %eax,%ebx
0x07fe4152:  movzbl 0x16(%eax),%edi
0x07fe4156:  movl   $0x1,0x1c(%eax)
0x07fe415d:  movzwl (%eax),%esi
0x07fe4160:  mov    $0x3c,%edx
0x07fe4165:  mov    %esi,%eax
0x07fe4167:  call   0xf0e59

----------------
IN: 
0x07fe416c:  mov    %al,0x7(%esp)
0x07fe4170:  test   $0x1,%edi
0x07fe4176:  je     0x7fe419f

----------------
IN: 
0x07fe419f:  mov    $0xe,%edx
0x07fe41a4:  mov    $0x3f4,%eax
0x07fe41a9:  mov    $0x1f0,%ebp
0x07fe41ae:  mov    %eax,(%esp)
0x07fe41b1:  mov    %ebp,%ecx
0x07fe41b3:  mov    %ebx,%eax
0x07fe41b5:  call   0x7fe409e

----------------
IN: 
0x07fe409e:  push   %ebp
0x07fe409f:  push   %edi
0x07fe40a0:  push   %esi
0x07fe40a1:  push   %ebx
0x07fe40a2:  sub    $0x20,%esp
0x07fe40a5:  mov    %eax,%esi
0x07fe40a7:  mov    %edx,0x1c(%esp)
0x07fe40ab:  mov    %ecx,%edi
0x07fe40ad:  mov    0x34(%esp),%ebp
0x07fe40b1:  mov    $0x10,%eax
0x07fe40b6:  call   0x7fdf657

----------------
IN: 
0x07fe40bb:  mov    %eax,%ebx
0x07fe40bd:  test   %eax,%eax
0x07fe40bf:  mov    0x1c(%esp),%edx
0x07fe40c3:  jne    0x7fe40db

----------------
IN: 
0x07fe40db:  mov    0x7feff07,%eax
0x07fe40e0:  lea    0x1(%eax),%ecx
0x07fe40e3:  mov    %ecx,0x7feff07
0x07fe40e9:  mov    %al,0x7(%ebx)
0x07fe40ec:  mov    %dl,0x6(%ebx)
0x07fe40ef:  test   %esi,%esi
0x07fe40f1:  je     0x7fe40f8

----------------
IN: 
0x07fe40f3:  movzwl (%esi),%eax
0x07fe40f6:  jmp    0x7fe40fb

----------------
IN: 
0x07fe40fb:  mov    %eax,0x8(%ebx)
0x07fe40fe:  mov    %esi,0xc(%ebx)
0x07fe4101:  mov    %di,(%ebx)
0x07fe4104:  mov    %bp,0x2(%ebx)
0x07fe4108:  movw   $0x0,0x4(%ebx)
0x07fe410e:  mov    %eax,0x18(%esp)
0x07fe4112:  mov    %edx,0x14(%esp)
0x07fe4116:  movl   $0x0,0x10(%esp)
0x07fe411e:  mov    %ebp,0xc(%esp)
0x07fe4122:  mov    %edi,0x8(%esp)
0x07fe4126:  mov    %ecx,0x4(%esp)
0x07fe412a:  movl   $0xf44aa,(%esp)
0x07fe4131:  call   0xf1787

----------------
IN: 
0x07fe4136:  mov    %ebx,%edx
0x07fe4138:  mov    $0x7fe88bb,%eax
0x07fe413d:  add    $0x20,%esp
0x07fe4140:  pop    %ebx
0x07fe4141:  pop    %esi
0x07fe4142:  pop    %edi
0x07fe4143:  pop    %ebp
0x07fe4144:  jmp    0x7fdf5a8

----------------
IN: 
0x07fe88bb:  push   %ebp
0x07fe88bc:  push   %edi
0x07fe88bd:  push   %esi
0x07fe88be:  push   %ebx
0x07fe88bf:  sub    $0x28c,%esp
0x07fe88c5:  mov    %eax,%edi
0x07fe88c7:  mov    %eax,0x30(%esp)
0x07fe88cb:  lea    0x60(%esp),%ebx
0x07fe88cf:  mov    $0x2c,%ecx
0x07fe88d4:  xor    %edx,%edx
0x07fe88d6:  mov    %ebx,%eax
0x07fe88d8:  call   0xf0d7a

----------------
IN: 
0x07fe88dd:  mov    %edi,0x84(%esp)
0x07fe88e4:  movb   $0x0,0x23(%esp)
0x07fe88e9:  xor    %esi,%esi
0x07fe88eb:  mov    %ebx,0x28(%esp)
0x07fe88ef:  mov    0x30(%esp),%eax
0x07fe88f3:  mov    (%eax),%ebp
0x07fe88f5:  movzwl %bp,%eax
0x07fe88f8:  mov    %eax,%edi
0x07fe88fa:  mov    %eax,0x2c(%esp)
0x07fe88fe:  call   0x7fe1c0b

----------------
IN: 
0x07fe1c0b:  push   %esi
0x07fe1c0c:  push   %ebx
0x07fe1c0d:  xor    %ebx,%ebx
0x07fe1c0f:  lea    0x7(%eax),%esi
0x07fe1c12:  mov    %esi,%edx
0x07fe1c14:  in     (%dx),%al
0x07fe1c15:  test   %al,%al
0x07fe1c17:  jns    0x7fe1c49

----------------
IN: 
0x07fe1c49:  movzbl %al,%eax
0x07fe1c4c:  jmp    0x7fe1c53

----------------
IN: 
0x07fe1c53:  pop    %ebx
0x07fe1c54:  pop    %esi
0x07fe1c55:  ret    

----------------
IN: 
0x07fe8903:  test   %eax,%eax
0x07fe8905:  js     0x7fe8ccf

----------------
IN: 
0x07fe890b:  cmpb   $0x1,0x23(%esp)
0x07fe8910:  sbb    %ebx,%ebx
0x07fe8912:  and    $0xfffffff0,%ebx
0x07fe8915:  sub    $0x50,%ebx
0x07fe8918:  lea    0x6(%ebp),%edx
0x07fe891b:  mov    %bl,%al
0x07fe891d:  out    %al,(%dx)
0x07fe891e:  mov    %edx,0x24(%esp)
0x07fe8922:  call   0xf13cc

----------------
IN: 
0x000f13cc:  imul   $0x190,0xf6374,%eax
0x000f13d6:  add    $0xf423f,%eax
0x000f13db:  mov    $0xf4240,%ecx
0x000f13e0:  xor    %edx,%edx
0x000f13e2:  div    %ecx
0x000f13e4:  jmp    0xf1397

----------------
IN: 
0x000f1397:  push   %ebx
0x000f1398:  mov    %eax,%ebx
0x000f139a:  call   0xf130f

----------------
IN: 
0x000f139f:  add    %eax,%ebx
0x000f13a1:  mov    %ebx,%eax
0x000f13a3:  call   0xf1383

----------------
IN: 
0x000f1383:  push   %ebx
0x000f1384:  mov    %eax,%ebx
0x000f1386:  call   0xf130f

----------------
IN: 
0x000f138b:  sub    %ebx,%eax
0x000f138d:  test   %eax,%eax
0x000f138f:  setg   %al
0x000f1392:  movzbl %al,%eax
0x000f1395:  pop    %ebx
0x000f1396:  ret    

----------------
IN: 
0x000f13a8:  test   %eax,%eax
0x000f13aa:  jne    0xf13b0

----------------
IN: 
0x000f13b0:  pop    %ebx
0x000f13b1:  ret    

----------------
IN: 
0x07fe8927:  mov    %edi,%eax
0x07fe8929:  call   0x7fe1c0b

----------------
IN: 
0x07fe892e:  test   %eax,%eax
0x07fe8930:  js     0x7fe8ccf

----------------
IN: 
0x07fe8936:  mov    %bl,%al
0x07fe8938:  mov    0x24(%esp),%edx
0x07fe893c:  out    %al,(%dx)
0x07fe893d:  in     (%dx),%al
0x07fe893e:  mov    %al,0x24(%esp)
0x07fe8942:  lea    0x2(%ebp),%ecx
0x07fe8945:  mov    $0x55,%al
0x07fe8947:  mov    %ecx,%edx
0x07fe8949:  out    %al,(%dx)
0x07fe894a:  lea    0x3(%ebp),%edi
0x07fe894d:  mov    $0xaa,%al
0x07fe894f:  mov    %edi,%edx
0x07fe8951:  out    %al,(%dx)
0x07fe8952:  mov    %ecx,%edx
0x07fe8954:  in     (%dx),%al
0x07fe8955:  mov    %al,%cl
0x07fe8957:  mov    %edi,%edx
0x07fe8959:  in     (%dx),%al
0x07fe895a:  cmp    $0x55,%cl
0x07fe895d:  jne    0x7fe8ccf

----------------
IN: 
0x07fe8963:  cmp    $0xaa,%al
0x07fe8965:  jne    0x7fe8ccf

----------------
IN: 
0x07fe896b:  cmp    %bl,0x24(%esp)
0x07fe896f:  jne    0x7fe8ccf

----------------
IN: 
0x07fe8975:  mov    0x23(%esp),%al
0x07fe8979:  mov    %al,0x88(%esp)
0x07fe8980:  test   %esi,%esi
0x07fe8982:  jne    0x7fe8a3d

----------------
IN: 
0x07fe8988:  mov    0x84(%esp),%eax
0x07fe898f:  mov    (%eax),%si
0x07fe8992:  mov    0x2(%eax),%ax
0x07fe8996:  lea    0x2(%eax),%edx
0x07fe8999:  mov    %dx,0x24(%esp)
0x07fe899e:  mov    $0xe,%al
0x07fe89a0:  out    %al,(%dx)
0x07fe89a1:  mov    $0x5,%eax
0x07fe89a6:  call   0xf13b2

----------------
IN: 
0x000f13b2:  imul   0xf6374,%eax
0x000f13b9:  add    $0x3e7,%eax
0x000f13be:  mov    $0x3e8,%ecx
0x000f13c3:  xor    %edx,%edx
0x000f13c5:  div    %ecx
0x000f13c7:  jmp    0xf1397

----------------
IN: 
0x000f13ac:  pause  

----------------
IN: 
0x000f13ae:  jmp    0xf13a1

----------------
IN: 
0x000f13a1:  mov    %ebx,%eax
0x000f13a3:  call   0xf1383

----------------
IN: 
0x07fe89ab:  mov    $0xa,%al
0x07fe89ad:  mov    0x24(%esp),%edx
0x07fe89b1:  out    %al,(%dx)
0x07fe89b2:  mov    $0x2,%eax
0x07fe89b7:  call   0x7fe095b

----------------
IN: 
0x07fe095b:  imul   0xf6374,%eax
0x07fe0962:  jmp    0xf16af

----------------
IN: 
0x000f16af:  push   %ebx
0x000f16b0:  mov    %eax,%ebx
0x000f16b2:  call   0xf130f

----------------
IN: 
0x000f16b7:  add    %eax,%ebx
0x000f16b9:  mov    %ebx,%eax
0x000f16bb:  call   0xf1383

----------------
IN: 
0x000f16c0:  test   %eax,%eax
0x000f16c2:  jne    0xf16cb

----------------
IN: 
0x000f16c4:  call   0xf1682

----------------
IN: 
0x000f0c66:  pop    %ebx
0x000f0c67:  pop    %esi
0x000f0c68:  pop    %edi
0x000f0c69:  ret    

----------------
IN: 
0x07fe4313:  andb   $0xef,0x7(%esp)
0x07fe4318:  lea    0x7(%esp),%edx
0x07fe431c:  mov    $0x1060,%eax
0x07fe4321:  call   0x7fe13fb

----------------
IN: 
0x07fe4326:  mov    %eax,%ebx
0x07fe4328:  test   %eax,%eax
0x07fe432a:  jne    0x7fe4451

----------------
IN: 
0x07fe4330:  cmp    $0x2ff,%edi
0x07fe4336:  jne    0x7fe437e

----------------
IN: 
0x07fe4338:  mov    $0x3e8,%edx
0x07fe433d:  mov    $0xff,%eax
0x07fe4342:  call   0x7fe42a5

----------------
IN: 
0x07fe42a5:  push   %ebx
0x07fe42a6:  push   %ecx
0x07fe42a7:  mov    %eax,%ebx
0x07fe42a9:  mov    %edx,(%esp)
0x07fe42ac:  call   0xf17b5

----------------
IN: 
0x07fe42b1:  test   %eax,%eax
0x07fe42b3:  jne    0x7fe42d7

----------------
IN: 
0x07fe42b5:  mov    %bl,%al
0x07fe42b7:  out    %al,$0x60
0x07fe42b9:  mov    (%esp),%edx
0x07fe42bc:  mov    $0x1,%eax
0x07fe42c1:  call   0x7fe4209

----------------
IN: 
0x07fe4209:  push   %edi
0x07fe420a:  push   %esi
0x07fe420b:  push   %ebx
0x07fe420c:  sub    $0xc,%esp
0x07fe420f:  mov    %eax,%edi
0x07fe4211:  mov    %edx,%esi
0x07fe4213:  mov    %edx,%eax
0x07fe4215:  call   0xf13e9

----------------
IN: 
0x07fe421a:  mov    %eax,%ebx
0x07fe421c:  in     $0x64,%al
0x07fe421e:  movzbl %al,%ecx
0x07fe4221:  test   $0x1,%cl
0x07fe4224:  je     0x7fe426c

----------------
IN: 
0x07fe4226:  in     $0x60,%al
0x07fe4228:  test   $0x20,%cl
0x07fe422b:  jne    0x7fe4255

----------------
IN: 
0x07fe422d:  test   %edi,%edi
0x07fe422f:  jne    0x7fe4236

----------------
IN: 
0x07fe4236:  cmp    $0xfa,%al
0x07fe4238:  je     0x7fe4297

----------------
IN: 
0x07fe4297:  mov    $0xfa,%ebx
0x07fe429c:  mov    %ebx,%eax
0x07fe429e:  add    $0xc,%esp
0x07fe42a1:  pop    %ebx
0x07fe42a2:  pop    %esi
0x07fe42a3:  pop    %edi
0x07fe42a4:  ret    

----------------
IN: 
0x07fe42c6:  test   %eax,%eax
0x07fe42c8:  js     0x7fe42d7

----------------
IN: 
0x07fe42ca:  cmp    $0xfa,%eax
0x07fe42cf:  setne  %al
0x07fe42d2:  movzbl %al,%eax
0x07fe42d5:  neg    %eax
0x07fe42d7:  pop    %edx
0x07fe42d8:  pop    %ebx
0x07fe42d9:  ret    

----------------
IN: 
0x07fe4347:  mov    %eax,%ebx
0x07fe4349:  test   %eax,%eax
0x07fe434b:  jne    0x7fe4451

----------------
IN: 
0x07fe4351:  mov    $0xfa0,%edx
0x07fe4356:  xor    %eax,%eax
0x07fe4358:  call   0x7fe4209

----------------
IN: 
0x07fe4231:  movzbl %al,%ebx
0x07fe4234:  jmp    0x7fe429c

----------------
IN: 
0x07fe429c:  mov    %ebx,%eax
0x07fe429e:  add    $0xc,%esp
0x07fe42a1:  pop    %ebx
0x07fe42a2:  pop    %esi
0x07fe42a3:  pop    %edi
0x07fe42a4:  ret    

----------------
IN: 
0x07fe435d:  test   %eax,%eax
0x07fe435f:  js     0x7fe444f

----------------
IN: 
0x07fe4365:  mov    %al,(%esi)
0x07fe4367:  mov    $0x64,%edx
0x07fe436c:  xor    %eax,%eax
0x07fe436e:  call   0x7fe4209

----------------
IN: 
0x07fe426c:  mov    %ebx,%eax
0x07fe426e:  call   0xf1383

----------------
IN: 
0x07fe4273:  test   %eax,%eax
0x07fe4275:  je     0x7fe4290

----------------
IN: 
0x07fe4290:  call   0xf1682

----------------
IN: 
0x07fe41ba:  and    $0x4,%edi
0x07fe41bd:  je     0x7fe41e6

----------------
IN: 
0x07fe41e6:  mov    $0xf,%edx
0x07fe41eb:  mov    $0x374,%eax
0x07fe41f0:  mov    $0x170,%edi
0x07fe41f5:  mov    %eax,(%esp)
0x07fe41f8:  mov    %edi,%ecx
0x07fe41fa:  mov    %ebx,%eax
0x07fe41fc:  call   0x7fe409e

----------------
IN: 
0x000f16c9:  jmp    0xf16b9

----------------
IN: 
0x000f16b9:  mov    %ebx,%eax
0x000f16bb:  call   0xf1383

----------------
IN: 
0x07fe4295:  jmp    0x7fe421c

----------------
IN: 
0x07fe421c:  in     $0x64,%al
0x07fe421e:  movzbl %al,%ecx
0x07fe4221:  test   $0x1,%cl
0x07fe4224:  je     0x7fe426c

----------------
IN: 
0x07fe4201:  add    $0x8,%esp
0x07fe4204:  pop    %ebx
0x07fe4205:  pop    %esi
0x07fe4206:  pop    %edi
0x07fe4207:  pop    %ebp
0x07fe4208:  ret    

----------------
IN: 
0x07fe9922:  movb   $0xc0,0x476
0x07fe9929:  mov    $0x4000,%eax
0x07fe992e:  call   0x7fe04e5

----------------
IN: 
0x07fe9933:  mov    $0xfd5bb,%eax
0x07fe9938:  mov    %ax,0x1d8
0x07fe993e:  movw   $0xf000,0x1da
0x07fe9947:  mov    0x7fefee3,%eax
0x07fe994c:  lea    -0x4(%eax),%edi
0x07fe994f:  cmp    $0xfffffffc,%edi
0x07fe9952:  je     0x7fe9b40

----------------
IN: 
0x07fe9958:  cmpw   $0x106,0x14(%edi)
0x07fe995e:  jne    0x7fe9b35

----------------
IN: 
0x07fe9b35:  mov    0x4(%edi),%edi
0x07fe9b38:  sub    $0x4,%edi
0x07fe9b3b:  jmp    0x7fe994f

----------------
IN: 
0x07fe994f:  cmp    $0xfffffffc,%edi
0x07fe9952:  je     0x7fe9b40

----------------
IN: 
0x07fe9b40:  mov    0x7fefee3,%eax
0x07fe9b45:  lea    -0x4(%eax),%ebx
0x07fe9b48:  cmp    $0xfffffffc,%ebx
0x07fe9b4b:  je     0x7fe9b65

----------------
IN: 
0x07fe9b4d:  cmpl   $0x10011af4,0x10(%ebx)
0x07fe9b54:  jne    0x7fe9b5d

----------------
IN: 
0x07fe9b5d:  mov    0x4(%ebx),%ebx
0x07fe9b60:  sub    $0x4,%ebx
0x07fe9b63:  jmp    0x7fe9b48

----------------
IN: 
0x07fe9b48:  cmp    $0xfffffffc,%ebx
0x07fe9b4b:  je     0x7fe9b65

----------------
IN: 
0x07fe9b65:  mov    0x7fefee3,%eax
0x07fe9b6a:  lea    -0x4(%eax),%esi
0x07fe9b6d:  cmp    $0xfffffffc,%esi
0x07fe9b70:  je     0x7fe9ca4

----------------
IN: 
0x07fe9b76:  cmpl   $0x10041af4,0x10(%esi)
0x07fe9b7d:  jne    0x7fe9c99

----------------
IN: 
0x07fe9c99:  mov    0x4(%esi),%esi
0x07fe9c9c:  sub    $0x4,%esi
0x07fe9c9f:  jmp    0x7fe9b6d

----------------
IN: 
0x07fe9b6d:  cmp    $0xfffffffc,%esi
0x07fe9b70:  je     0x7fe9ca4

----------------
IN: 
0x07fe9ca4:  mov    0x7fefee3,%eax
0x07fe9ca9:  lea    -0x4(%eax),%esi
0x07fe9cac:  cmp    $0xfffffffc,%esi
0x07fe9caf:  je     0x7fe9df2

----------------
IN: 
0x07fe9cb5:  cmpl   $0x121000,0x10(%esi)
0x07fe9cbc:  jne    0x7fe9de7

----------------
IN: 
0x07fe9de7:  mov    0x4(%esi),%esi
0x07fe9dea:  sub    $0x4,%esi
0x07fe9ded:  jmp    0x7fe9cac

----------------
IN: 
0x07fe9cac:  cmp    $0xfffffffc,%esi
0x07fe9caf:  je     0x7fe9df2

----------------
IN: 
0x07fe9df2:  mov    0x7fefee3,%eax
0x07fe9df7:  lea    -0x4(%eax),%esi
0x07fe9dfa:  cmp    $0xfffffffc,%esi
0x07fe9dfd:  je     0x7fe9f40

----------------
IN: 
0x07fe9e03:  cmpl   $0x20201022,0x10(%esi)
0x07fe9e0a:  jne    0x7fe9f35

----------------
IN: 
0x07fe9f35:  mov    0x4(%esi),%esi
0x07fe9f38:  sub    $0x4,%esi
0x07fe9f3b:  jmp    0x7fe9dfa

----------------
IN: 
0x07fe9dfa:  cmp    $0xfffffffc,%esi
0x07fe9dfd:  je     0x7fe9f40

----------------
IN: 
0x07fe9f40:  mov    0x7fefee3,%eax
0x07fe9f45:  lea    -0x4(%eax),%esi
0x07fe9f48:  cmp    $0xfffffffc,%esi
0x07fe9f4b:  je     0x7fea1c3

----------------
IN: 
0x07fe9f51:  mov    0x10(%esi),%eax
0x07fe9f54:  cmp    $0x1028,%ax
0x07fe9f58:  je     0x7fe9f64

----------------
IN: 
0x07fe9f5a:  cmp    $0x1000,%ax
0x07fe9f5e:  jne    0x7fea1b8

----------------
IN: 
0x07fea1b8:  mov    0x4(%esi),%esi
0x07fea1bb:  sub    $0x4,%esi
0x07fea1be:  jmp    0x7fe9f48

----------------
IN: 
0x07fe9f48:  cmp    $0xfffffffc,%esi
0x07fe9f4b:  je     0x7fea1c3

----------------
IN: 
0x07fea1c3:  mov    0x7fefee3,%eax
0x07fea1c8:  lea    -0x4(%eax),%esi
0x07fea1cb:  cmp    $0xfffffffc,%esi
0x07fea1ce:  je     0x7fea342

----------------
IN: 
0x07fea1d4:  cmpl   $0x7c015ad,0x10(%esi)
0x07fea1db:  jne    0x7fea329

----------------
IN: 
0x07fea329:  mov    0x4(%esi),%esi
0x07fea32c:  sub    $0x4,%esi
0x07fea32f:  jmp    0x7fea1cb

----------------
IN: 
0x07fea1cb:  cmp    $0xfffffffc,%esi
0x07fea1ce:  je     0x7fea342

----------------
IN: 
0x07fea342:  add    $0x40,%esp
0x07fea345:  pop    %ebx
0x07fea346:  pop    %esi
0x07fea347:  pop    %edi
0x07fea348:  pop    %ebp
0x07fea349:  ret    

----------------
IN: 
0x07febc87:  call   0x7fe0930

----------------
IN: 
0x07fe0930:  cmpl   $0xf6648,0xf6648
0x07fe093a:  je     0x7fe0943

----------------
IN: 
0x07fe093c:  call   0xf1682

Servicing hardware INT=0x09
----------------
IN: 
0x000fe987:  pushl  $0xc767
0x000fe98d:  jmp    0xfd4a9

----------------
IN: 
0x000fc767:  push   %edx
0x000fc769:  in     $0x64,%al
0x000fc76b:  test   $0x20,%al
0x000fc76d:  je     0xfc780

----------------
IN: 
0x000fc780:  in     $0x60,%al
0x000fc782:  mov    $0xe000,%edx
0x000fc788:  mov    %dx,%es
0x000fc78a:  mov    %es:-0x860,%dl
0x000fc78f:  and    $0x1,%dl
0x000fc792:  je     0xfc7ad

----------------
IN: 
0x000fc7ad:  mov    $0x20,%al
0x000fc7af:  out    %al,$0x20
0x000fc7b1:  pop    %eax
0x000fc7b3:  retl   

----------------
IN: 
0x000f16cb:  pop    %ebx
0x000f16cc:  ret    

----------------
IN: 
0x07fe89bc:  movzwl %si,%ebx
0x07fe89bf:  mov    %ebx,%eax
0x07fe89c1:  call   0xf18fe

----------------
IN: 
0x000f18fe:  movzwl %ax,%ecx
0x000f1901:  xor    %edx,%edx
0x000f1903:  mov    $0x80,%eax
0x000f1908:  jmp    0xf18a8

----------------
IN: 
0x000f18a8:  push   %ebp
0x000f18a9:  push   %edi
0x000f18aa:  push   %esi
0x000f18ab:  push   %ebx
0x000f18ac:  mov    %eax,%esi
0x000f18ae:  mov    %edx,%edi
0x000f18b0:  mov    %ecx,%ebp
0x000f18b2:  mov    $0x7d00,%eax
0x000f18b7:  call   0xf13e9

----------------
IN: 
0x000f18bc:  mov    %eax,%ebx
0x000f18be:  add    $0x7,%ebp
0x000f18c1:  mov    %ebp,%edx
0x000f18c3:  in     (%dx),%al
0x000f18c4:  mov    %esi,%edx
0x000f18c6:  and    %eax,%edx
0x000f18c8:  mov    %edi,%ecx
0x000f18ca:  cmp    %cl,%dl
0x000f18cc:  jne    0xf18d3

----------------
IN: 
0x000f18ce:  movzbl %al,%eax
0x000f18d1:  jmp    0xf18f9

----------------
IN: 
0x000f18f9:  pop    %ebx
0x000f18fa:  pop    %esi
0x000f18fb:  pop    %edi
0x000f18fc:  pop    %ebp
0x000f18fd:  ret    

----------------
IN: 
0x07fe89c6:  test   %eax,%eax
0x07fe89c8:  js     0x7fe8a36

----------------
IN: 
0x07fe89ca:  cmpb   $0x0,0x23(%esp)
0x07fe89cf:  je     0x7fe8a18

----------------
IN: 
0x07fe8a18:  lea    0x6(%esi),%edx
0x07fe8a1b:  mov    $0xa0,%al
0x07fe8a1d:  out    %al,(%dx)
0x07fe8a1e:  cmpb   $0x2,0x60(%esp)
0x07fe8a23:  jne    0x7fe8a36

----------------
IN: 
0x07fe8a36:  mov    $0x8,%al
0x07fe8a38:  mov    0x24(%esp),%edx
0x07fe8a3c:  out    %al,(%dx)
0x07fe8a3d:  mov    $0xa1,%ecx
0x07fe8a42:  lea    0x8c(%esp),%edx
0x07fe8a49:  mov    0x28(%esp),%edi
0x07fe8a4d:  mov    %edi,%eax
0x07fe8a4f:  call   0x7fe1b5d

----------------
IN: 
0x07fe1b5d:  push   %edi
0x07fe1b5e:  push   %esi
0x07fe1b5f:  push   %ebx
0x07fe1b60:  sub    $0x20,%esp
0x07fe1b63:  mov    %eax,%edi
0x07fe1b65:  mov    %edx,%ebx
0x07fe1b67:  mov    %ecx,%esi
0x07fe1b69:  mov    $0x200,%ecx
0x07fe1b6e:  xor    %edx,%edx
0x07fe1b70:  mov    %ebx,%eax
0x07fe1b72:  call   0xf0d7a

----------------
IN: 
0x07fe1b77:  mov    $0x14,%ecx
0x07fe1b7c:  xor    %edx,%edx
0x07fe1b7e:  lea    0xc(%esp),%eax
0x07fe1b82:  call   0xf0d7a

----------------
IN: 
0x07fe1b87:  mov    %edi,0x18(%esp)
0x07fe1b8b:  movw   $0x1,0x1c(%esp)
0x07fe1b92:  movl   $0x1,0xc(%esp)
0x07fe1b9a:  movl   $0x0,0x10(%esp)
0x07fe1ba2:  mov    %ebx,0x14(%esp)
0x07fe1ba6:  mov    $0xc,%ecx
0x07fe1bab:  xor    %edx,%edx
0x07fe1bad:  mov    %esp,%eax
0x07fe1baf:  call   0xf0d7a

----------------
IN: 
0x07fe1bb4:  mov    %esi,%eax
0x07fe1bb6:  mov    %al,0x6(%esp)
0x07fe1bba:  mov    0x18(%esp),%ecx
0x07fe1bbe:  mov    0x24(%ecx),%eax
0x07fe1bc1:  mov    (%eax),%si
0x07fe1bc4:  mov    0x2(%eax),%bx
0x07fe1bc8:  add    $0x2,%ebx
0x07fe1bcb:  mov    $0xa,%al
0x07fe1bcd:  mov    %ebx,%edx
0x07fe1bcf:  out    %al,(%dx)
0x07fe1bd0:  mov    %esp,%edx
0x07fe1bd2:  mov    %ecx,%eax
0x07fe1bd4:  call   0xf190d

----------------
IN: 
0x000f190d:  push   %ebp
0x000f190e:  push   %edi
0x000f190f:  push   %esi
0x000f1910:  push   %ebx
0x000f1911:  mov    %edx,%edi
0x000f1913:  mov    0x28(%eax),%bl
0x000f1916:  mov    0x24(%eax),%eax
0x000f1919:  mov    (%eax),%si
0x000f191c:  movzwl %si,%ebp
0x000f191f:  mov    %ebp,%eax
0x000f1921:  call   0xf18fe

----------------
IN: 
0x000f1926:  test   %eax,%eax
0x000f1928:  js     0xf19c1

----------------
IN: 
0x000f192e:  mov    0x5(%edi),%al
0x000f1931:  and    $0x4f,%eax
0x000f1934:  cmp    $0x1,%bl
0x000f1937:  sbb    %ecx,%ecx
0x000f1939:  and    $0xfffffff0,%ecx
0x000f193c:  sub    $0x50,%ecx
0x000f193f:  or     %eax,%ecx
0x000f1941:  lea    0x6(%esi),%edx
0x000f1944:  in     (%dx),%al
0x000f1945:  mov    %al,%bl
0x000f1947:  mov    %cl,%al
0x000f1949:  out    %al,(%dx)
0x000f194a:  xor    %ecx,%ebx
0x000f194c:  and    $0x10,%bl
0x000f194f:  jne    0xf1985

----------------
IN: 
0x000f1951:  mov    0x6(%edi),%cl
0x000f1954:  mov    %ecx,%eax
0x000f1956:  and    $0xee,%eax
0x000f195b:  cmp    $0x24,%eax
0x000f195e:  jne    0xf1997

----------------
IN: 
0x000f1997:  mov    (%edi),%al
0x000f1999:  lea    0x1(%esi),%edx
0x000f199c:  out    %al,(%dx)
0x000f199d:  mov    0x1(%edi),%al
0x000f19a0:  lea    0x2(%esi),%edx
0x000f19a3:  out    %al,(%dx)
0x000f19a4:  mov    0x2(%edi),%al
0x000f19a7:  lea    0x3(%esi),%edx
0x000f19aa:  out    %al,(%dx)
0x000f19ab:  mov    0x3(%edi),%al
0x000f19ae:  lea    0x4(%esi),%edx
0x000f19b1:  out    %al,(%dx)
0x000f19b2:  mov    0x4(%edi),%al
0x000f19b5:  lea    0x5(%esi),%edx
0x000f19b8:  out    %al,(%dx)
0x000f19b9:  lea    0x7(%esi),%edx
0x000f19bc:  mov    %cl,%al
0x000f19be:  out    %al,(%dx)
0x000f19bf:  xor    %eax,%eax
0x000f19c1:  pop    %ebx
0x000f19c2:  pop    %esi
0x000f19c3:  pop    %edi
0x000f19c4:  pop    %ebp
0x000f19c5:  ret    

----------------
IN: 
0x07fe1bd9:  mov    %eax,%ecx
0x07fe1bdb:  test   %eax,%eax
0x07fe1bdd:  jne    0x7fe1bfd

----------------
IN: 
0x07fe1bdf:  movzwl %si,%eax
0x07fe1be2:  call   0xf1a5d

----------------
IN: 
0x000f1a5d:  push   %ebx
0x000f1a5e:  mov    %eax,%ebx
0x000f1a60:  call   0xf13cc

----------------
IN: 
0x000f1a65:  movzwl %bx,%eax
0x000f1a68:  call   0xf18fe

----------------
IN: 
0x000f1a6d:  test   %eax,%eax
0x000f1a6f:  js     0xf1a87

----------------
IN: 
0x000f1a71:  test   $0x1,%al
0x000f1a73:  jne    0xf1a82

----------------
IN: 
0x000f1a82:  mov    $0xfffffffc,%eax
0x000f1a87:  pop    %ebx
0x000f1a88:  ret    

----------------
IN: 
0x07fe1be7:  mov    %eax,%ecx
0x07fe1be9:  test   %eax,%eax
0x07fe1beb:  jne    0x7fe1bfd

----------------
IN: 
0x07fe1bfd:  mov    $0x8,%al
0x07fe1bff:  mov    %ebx,%edx
0x07fe1c01:  out    %al,(%dx)
0x07fe1c02:  mov    %ecx,%eax
0x07fe1c04:  add    $0x20,%esp
0x07fe1c07:  pop    %ebx
0x07fe1c08:  pop    %esi
0x07fe1c09:  pop    %edi
0x07fe1c0a:  ret    

----------------
IN: 
0x07fe8a54:  test   %eax,%eax
0x07fe8a56:  jne    0x7fe8b54

----------------
IN: 
0x07fe8b54:  lea    0x7(%ebp),%edx
0x07fe8b57:  in     (%dx),%al
0x07fe8b58:  test   %al,%al
0x07fe8b5a:  je     0x7fe8cca

----------------
IN: 
0x07fe8b60:  mov    0x2c(%esp),%ecx
0x07fe8b64:  mov    $0x40,%edx
0x07fe8b69:  mov    $0x40,%eax
0x07fe8b6e:  call   0xf18a8

----------------
IN: 
0x07fe8b73:  test   %eax,%eax
0x07fe8b75:  js     0x7fe8cca

----------------
IN: 
0x07fe8b7b:  mov    $0xec,%ecx
0x07fe8b80:  lea    0x8c(%esp),%edx
0x07fe8b87:  mov    0x28(%esp),%edi
0x07fe8b8b:  mov    %edi,%eax
0x07fe8b8d:  call   0x7fe1b5d

----------------
IN: 
0x000f1a75:  and    $0x8,%eax
0x000f1a78:  cmp    $0x1,%eax
0x000f1a7b:  sbb    %eax,%eax
0x000f1a7d:  and    $0xfffffffb,%eax
0x000f1a80:  jmp    0xf1a87

----------------
IN: 
0x000f1a87:  pop    %ebx
0x000f1a88:  ret    

----------------
IN: 
0x07fe1bed:  mov    $0x200,%edx
0x07fe1bf2:  lea    0xc(%esp),%eax
0x07fe1bf6:  call   0xf19c6

----------------
IN: 
0x000f19c6:  push   %ebp
0x000f19c7:  push   %edi
0x000f19c8:  push   %esi
0x000f19c9:  push   %ebx
0x000f19ca:  sub    $0x10,%esp
0x000f19cd:  mov    %eax,%ebx
0x000f19cf:  mov    %edx,(%esp)
0x000f19d2:  mov    0xc(%eax),%eax
0x000f19d5:  mov    0x24(%eax),%eax
0x000f19d8:  mov    (%eax),%cx
0x000f19db:  mov    %cx,0x8(%esp)
0x000f19e0:  mov    0x2(%eax),%di
0x000f19e4:  movzwl 0x10(%ebx),%esi
0x000f19e8:  mov    0x8(%ebx),%ebp
0x000f19eb:  mov    $0x2,%ecx
0x000f19f0:  mov    %edx,%eax
0x000f19f2:  cltd   
0x000f19f3:  idiv   %ecx
0x000f19f5:  mov    %eax,0x4(%esp)
0x000f19f9:  lea    0x2(%edi),%eax
0x000f19fc:  mov    %ax,0xa(%esp)
0x000f1a01:  movzwl 0x8(%esp),%eax
0x000f1a06:  mov    %eax,0xc(%esp)
0x000f1a0a:  mov    0x4(%esp),%ecx
0x000f1a0e:  mov    %ebp,%edi
0x000f1a10:  mov    0x8(%esp),%edx
0x000f1a14:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000f1a14:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000f1a17:  add    (%esp),%ebp
0x000f1a1a:  mov    0xa(%esp),%dx
0x000f1a1f:  in     (%dx),%al
0x000f1a20:  mov    0xc(%esp),%eax
0x000f1a24:  call   0xf18fe

----------------
IN: 
0x000f1a29:  test   %eax,%eax
0x000f1a2b:  jns    0xf1a33

----------------
IN: 
0x000f1a33:  and    $0x89,%eax
0x000f1a38:  dec    %esi
0x000f1a39:  je     0xf1a4b

----------------
IN: 
0x000f1a4b:  cmp    $0x1,%eax
0x000f1a4e:  sbb    %eax,%eax
0x000f1a50:  not    %eax
0x000f1a52:  and    $0xfffffff9,%eax
0x000f1a55:  add    $0x10,%esp
0x000f1a58:  pop    %ebx
0x000f1a59:  pop    %esi
0x000f1a5a:  pop    %edi
0x000f1a5b:  pop    %ebp
0x000f1a5c:  ret    

----------------
IN: 
0x07fe1bfb:  mov    %eax,%ecx
0x07fe1bfd:  mov    $0x8,%al
0x07fe1bff:  mov    %ebx,%edx
0x07fe1c01:  out    %al,(%dx)
0x07fe1c02:  mov    %ecx,%eax
0x07fe1c04:  add    $0x20,%esp
0x07fe1c07:  pop    %ebx
0x07fe1c08:  pop    %esi
0x07fe1c09:  pop    %edi
0x07fe1c0a:  ret    

----------------
IN: 
0x07fe8b92:  test   %eax,%eax
0x07fe8b94:  jne    0x7fe8cca

----------------
IN: 
0x07fe8b9a:  lea    0x8c(%esp),%edx
0x07fe8ba1:  mov    %edi,%eax
0x07fe8ba3:  call   0x7fe0c0e

----------------
IN: 
0x07fe0c0e:  push   %edi
0x07fe0c0f:  push   %esi
0x07fe0c10:  push   %ebx
0x07fe0c11:  mov    %eax,%esi
0x07fe0c13:  mov    %edx,%edi
0x07fe0c15:  mov    $0x2c,%eax
0x07fe0c1a:  call   0x7fdf657

----------------
IN: 
0x07fe0c1f:  mov    %eax,%ebx
0x07fe0c21:  test   %eax,%eax
0x07fe0c23:  jne    0x7fe0c38

----------------
IN: 
0x07fe0c38:  mov    $0x2c,%ecx
0x07fe0c3d:  xor    %edx,%edx
0x07fe0c3f:  call   0xf0d7a

----------------
IN: 
0x07fe0c44:  mov    0x24(%esi),%eax
0x07fe0c47:  mov    %eax,0x24(%ebx)
0x07fe0c4a:  mov    0x28(%esi),%dl
0x07fe0c4d:  mov    %dl,0x28(%ebx)
0x07fe0c50:  movzbl 0x7(%eax),%eax
0x07fe0c54:  add    %eax,%eax
0x07fe0c56:  movzbl 0x28(%esi),%edx
0x07fe0c5a:  add    %edx,%eax
0x07fe0c5c:  mov    %eax,0x14(%ebx)
0x07fe0c5f:  mov    (%edi),%ax
0x07fe0c62:  shr    $0x7,%ax
0x07fe0c66:  and    $0x1,%eax
0x07fe0c69:  mov    %al,0x18(%ebx)
0x07fe0c6c:  mov    %ebx,%eax
0x07fe0c6e:  pop    %ebx
0x07fe0c6f:  pop    %esi
0x07fe0c70:  pop    %edi
0x07fe0c71:  ret    

----------------
IN: 
0x07fe8ba8:  mov    %eax,%ebx
0x07fe8baa:  test   %eax,%eax
0x07fe8bac:  je     0x7fe8cca

----------------
IN: 
0x07fe8bb2:  movb   $0x2,(%eax)
0x07fe8bb5:  movw   $0x200,0x1a(%eax)
0x07fe8bbb:  mov    0x8e(%esp),%ax
0x07fe8bc3:  mov    %ax,0x1e(%ebx)
0x07fe8bc7:  mov    0x92(%esp),%ax
0x07fe8bcf:  mov    %ax,0x1c(%ebx)
0x07fe8bd3:  mov    0x98(%esp),%eax
0x07fe8bda:  mov    %ax,0x20(%ebx)
0x07fe8bde:  testb  $0x4,0x133(%esp)
0x07fe8be6:  je     0x7fe8bf8

----------------
IN: 
0x07fe8be8:  mov    0x154(%esp),%esi
0x07fe8bef:  mov    0x158(%esp),%edi
0x07fe8bf6:  jmp    0x7fe8c01

----------------
IN: 
0x07fe8c01:  mov    %esi,0xc(%ebx)
0x07fe8c04:  mov    %edi,0x10(%ebx)
0x07fe8c07:  shrd   $0xb,%edi,%esi
0x07fe8c0b:  shr    $0xb,%edi
0x07fe8c0e:  cmp    $0x0,%edi
0x07fe8c11:  ja     0x7fe8c1d

----------------
IN: 
0x07fe8c13:  mov    $0x4d,%cl
0x07fe8c15:  cmp    $0xffff,%esi
0x07fe8c1b:  jbe    0x7fe8c26

----------------
IN: 
0x07fe8c26:  mov    %ecx,0x24(%esp)
0x07fe8c2a:  lea    0x8c(%esp),%eax
0x07fe8c31:  call   0x7fdf4ab

----------------
IN: 
0x07fdf4ab:  mov    $0xf,%edx
0x07fdf4b0:  movzwl 0xa0(%eax),%ecx
0x07fdf4b7:  movzbl %dl,%eax
0x07fdf4ba:  bt     %edx,%ecx
0x07fdf4bd:  jb     0x7fdf4c4

----------------
IN: 
0x07fdf4bf:  dec    %edx
0x07fdf4c0:  jne    0x7fdf4b7

----------------
IN: 
0x07fdf4b7:  movzbl %dl,%eax
0x07fdf4ba:  bt     %edx,%ecx
0x07fdf4bd:  jb     0x7fdf4c4

----------------
IN: 
0x07fdf4c4:  ret    

----------------
IN: 
0x07fe8c36:  mov    %eax,%edi
0x07fe8c38:  lea    0x8c(%esp),%edx
0x07fe8c3f:  lea    0x37(%esp),%eax
0x07fe8c43:  call   0x7fe0437

----------------
IN: 
0x07fe0437:  push   %ebx
0x07fe0438:  mov    %eax,%ebx
0x07fe043a:  xor    %ecx,%ecx
0x07fe043c:  mov    0x36(%edx,%ecx,2),%ax
0x07fe0441:  xchg   %ah,%al
0x07fe0443:  mov    %ax,(%ebx,%ecx,2)
0x07fe0447:  inc    %ecx
0x07fe0448:  cmp    $0x14,%ecx
0x07fe044b:  jne    0x7fe043c

----------------
IN: 
0x07fe043c:  mov    0x36(%edx,%ecx,2),%ax
0x07fe0441:  xchg   %ah,%al
0x07fe0443:  mov    %ax,(%ebx,%ecx,2)
0x07fe0447:  inc    %ecx
0x07fe0448:  cmp    $0x14,%ecx
0x07fe044b:  jne    0x7fe043c

----------------
IN: 
0x07fe044d:  movb   $0x0,0x28(%ebx)
0x07fe0451:  mov    %ebx,%eax
0x07fe0453:  call   0x7fdf1f5

----------------
IN: 
0x07fdf1f5:  push   %ebx
0x07fdf1f6:  mov    %eax,%ebx
0x07fdf1f8:  call   0x7fdf1a5

----------------
IN: 
0x07fdf1fd:  lea    -0x1(%ebx,%eax,1),%edx
0x07fdf201:  cmp    %ebx,%edx
0x07fdf203:  jb     0x7fdf211

----------------
IN: 
0x07fdf205:  cmpb   $0x20,(%edx)
0x07fdf208:  jg     0x7fdf211

----------------
IN: 
0x07fdf20a:  dec    %edx
0x07fdf20b:  movb   $0x0,0x1(%edx)
0x07fdf20f:  jmp    0x7fdf201

----------------
IN: 
0x07fdf201:  cmp    %ebx,%edx
0x07fdf203:  jb     0x7fdf211

----------------
IN: 
0x07fdf211:  pop    %ebx
0x07fdf212:  ret    

----------------
IN: 
0x07fe0458:  mov    %ebx,%eax
0x07fe045a:  pop    %ebx
0x07fe045b:  ret    

----------------
IN: 
0x07fe8c48:  mov    0x24(%esp),%ecx
0x07fe8c4c:  movsbl %cl,%ecx
0x07fe8c4f:  mov    %ecx,0x1c(%esp)
0x07fe8c53:  mov    %esi,0x18(%esp)
0x07fe8c57:  mov    %edi,0x14(%esp)
0x07fe8c5b:  mov    %eax,0x10(%esp)
0x07fe8c5f:  movzbl 0x28(%ebx),%eax
0x07fe8c63:  mov    %eax,0xc(%esp)
0x07fe8c67:  mov    0x24(%ebx),%eax
0x07fe8c6a:  movzbl 0x7(%eax),%eax
0x07fe8c6e:  mov    %eax,0x8(%esp)
0x07fe8c72:  movl   $0xf4d7b,0x4(%esp)
0x07fe8c7a:  movl   $0x50,(%esp)
0x07fe8c81:  call   0x7fe5355

----------------
IN: 
0x07fe8c86:  mov    %eax,%esi
0x07fe8c88:  mov    %eax,0x4(%esp)
0x07fe8c8c:  movl   $0xf59f4,(%esp)
0x07fe8c93:  call   0xf1787

----------------
IN: 
0x07fe8c98:  mov    0x24(%ebx),%eax
0x07fe8c9b:  movzbl 0x28(%ebx),%ecx
0x07fe8c9f:  movzbl 0x7(%eax),%edx
0x07fe8ca3:  mov    0xc(%eax),%eax
0x07fe8ca6:  call   0x7fe529f

----------------
IN: 
0x07fe529f:  test   %eax,%eax
0x07fe52a1:  je     0x7fe52f6

----------------
IN: 
0x07fe52a3:  push   %esi
0x07fe52a4:  push   %ebx
0x07fe52a5:  sub    $0x114,%esp
0x07fe52ab:  mov    %edx,%ebx
0x07fe52ad:  mov    %ecx,%esi
0x07fe52af:  mov    %eax,%ecx
0x07fe52b1:  mov    $0xf475a,%edx
0x07fe52b6:  lea    0x14(%esp),%eax
0x07fe52ba:  call   0x7fe4e94

----------------
IN: 
0x07fe4f38:  mov    %edi,0xc(%esp)
0x07fe4f3c:  movl   $0xf4731,0x8(%esp)
0x07fe4f44:  sub    %ebx,%esi
0x07fe4f46:  mov    %esi,0x4(%esp)
0x07fe4f4a:  mov    %ebx,(%esp)
0x07fe4f4d:  call   0x7fe46d2

----------------
IN: 
0x07fe4f52:  add    %eax,%ebx
0x07fe4f54:  mov    %ebx,%eax
0x07fe4f56:  add    $0x14,%esp
0x07fe4f59:  pop    %ebx
0x07fe4f5a:  pop    %esi
0x07fe4f5b:  pop    %edi
0x07fe4f5c:  pop    %ebp
0x07fe4f5d:  ret    

----------------
IN: 
0x07fe52bf:  mov    %esi,0x10(%esp)
0x07fe52c3:  mov    %ebx,0xc(%esp)
0x07fe52c7:  movl   $0xf47a4,0x8(%esp)
0x07fe52cf:  lea    0x114(%esp),%edx
0x07fe52d6:  sub    %eax,%edx
0x07fe52d8:  mov    %edx,0x4(%esp)
0x07fe52dc:  mov    %eax,(%esp)
0x07fe52df:  call   0x7fe46d2

----------------
IN: 
0x07fe52e4:  lea    0x14(%esp),%eax
0x07fe52e8:  call   0x7fe2682

----------------
IN: 
0x07fe52ed:  add    $0x114,%esp
0x07fe52f3:  pop    %ebx
0x07fe52f4:  pop    %esi
0x07fe52f5:  ret    

----------------
IN: 
0x07fe8cab:  mov    %eax,%ecx
0x07fe8cad:  mov    %esi,%edx
0x07fe8caf:  mov    %ebx,%eax
0x07fe8cb1:  call   0x7fe0db5

----------------
IN: 
0x07fe0db5:  push   %esi
0x07fe0db6:  push   %ebx
0x07fe0db7:  push   %ebx
0x07fe0db8:  mov    0x7fefe73,%esi
0x07fe0dbe:  mov    %ecx,%ebx
0x07fe0dc0:  test   %ecx,%ecx
0x07fe0dc2:  jns    0x7fe0dc6

----------------
IN: 
0x07fe0dc4:  mov    %esi,%ebx
0x07fe0dc6:  mov    %edx,(%esp)
0x07fe0dc9:  mov    %eax,%ecx
0x07fe0dcb:  mov    %ebx,%edx
0x07fe0dcd:  mov    $0x2,%eax
0x07fe0dd2:  call   0x7fe0d22

----------------
IN: 
0x07fe0d87:  cmp    -0x8(%ebx),%edi
0x07fe0d8a:  jl     0x7fe0d77

----------------
IN: 
0x07fe0dd7:  pop    %eax
0x07fe0dd8:  pop    %ebx
0x07fe0dd9:  pop    %esi
0x07fe0dda:  ret    

----------------
IN: 
0x07fe8cb6:  test   %ebx,%ebx
0x07fe8cb8:  jne    0x7fe8b3c

----------------
IN: 
0x07fe8b3c:  mov    0x146(%esp),%ax
0x07fe8b44:  cmpb   $0x0,0x23(%esp)
0x07fe8b49:  jne    0x7fe8cca

----------------
IN: 
0x07fe8b4f:  jmp    0x7fe8cc0

----------------
IN: 
0x07fe8cc0:  and    $0xdf61,%ax
0x07fe8cc4:  cmp    $0x4041,%ax
0x07fe8cc8:  je     0x7fe8cde

----------------
IN: 
0x07fe8cca:  mov    $0x1,%esi
0x07fe8ccf:  incb   0x23(%esp)
0x07fe8cd3:  cmpb   $0x2,0x23(%esp)
0x07fe8cd8:  jne    0x7fe88ef

----------------
IN: 
0x07fe88ef:  mov    0x30(%esp),%eax
0x07fe88f3:  mov    (%eax),%ebp
0x07fe88f5:  movzwl %bp,%eax
0x07fe88f8:  mov    %eax,%edi
0x07fe88fa:  mov    %eax,0x2c(%esp)
0x07fe88fe:  call   0x7fe1c0b

----------------
IN: 
0x07fe8a3d:  mov    $0xa1,%ecx
0x07fe8a42:  lea    0x8c(%esp),%edx
0x07fe8a49:  mov    0x28(%esp),%edi
0x07fe8a4d:  mov    %edi,%eax
0x07fe8a4f:  call   0x7fe1b5d

----------------
IN: 
0x07fe8cde:  add    $0x28c,%esp
0x07fe8ce4:  pop    %ebx
0x07fe8ce5:  pop    %esi
0x07fe8ce6:  pop    %edi
0x07fe8ce7:  pop    %ebp
0x07fe8ce8:  ret    

----------------
IN: 
0x07fdf60a:  mov    0x4(%ebx),%ecx
0x07fdf60d:  mov    -0x4(%ecx),%esp
0x07fdf610:  mov    %ebx,%eax
0x07fdf612:  call   0x7fe0ac2

----------------
IN: 
0x07fe0ac2:  push   %ebx
0x07fe0ac3:  push   %edx
0x07fe0ac4:  mov    %eax,%ebx
0x07fe0ac6:  lea    0x4(%eax),%eax
0x07fe0ac9:  call   0x7fdf177

----------------
IN: 
0x07fe0ace:  mov    %ebx,%eax
0x07fe0ad0:  call   0x7fdf6b3

----------------
IN: 
0x07fe0ad5:  cmpl   $0xf6648,0xf6648
0x07fe0adf:  jne    0x7fe0aed

----------------
IN: 
0x07fe0aed:  pop    %eax
0x07fe0aee:  pop    %ebx
0x07fe0aef:  ret    

----------------
IN: 
0x07fdf617:  pop    %ebp
0x07fdf618:  ret    

----------------
IN: 
0x07fe0941:  jmp    0x7fe0930

Servicing hardware INT=0x08
----------------
IN: 
0x07fe8a5c:  lea    0x8c(%esp),%edx
0x07fe8a63:  mov    %edi,%eax
0x07fe8a65:  call   0x7fe0c0e

----------------
IN: 
0x07fe8a6a:  mov    %eax,%ebx
0x07fe8a6c:  test   %eax,%eax
0x07fe8a6e:  je     0x7fe8b54

----------------
IN: 
0x07fe8a74:  movb   $0x3,(%eax)
0x07fe8a77:  movw   $0x800,0x1a(%eax)
0x07fe8a7d:  movl   $0xffffffff,0xc(%eax)
0x07fe8a84:  movl   $0xffffffff,0x10(%eax)
0x07fe8a8b:  movzbl 0x8d(%esp),%eax
0x07fe8a93:  and    $0x1f,%eax
0x07fe8a96:  cmp    $0x5,%ax
0x07fe8a9a:  sete   %cl
0x07fe8a9d:  mov    $0xf4d52,%esi
0x07fe8aa2:  test   %cl,%cl
0x07fe8aa4:  je     0x7fe8aab

----------------
IN: 
0x07fe8aa6:  mov    $0xf4d4b,%esi
0x07fe8aab:  mov    %ecx,0x24(%esp)
0x07fe8aaf:  lea    0x8c(%esp),%eax
0x07fe8ab6:  call   0x7fdf4ab

----------------
IN: 
0x07fe8abb:  mov    %eax,%edi
0x07fe8abd:  lea    0x8c(%esp),%edx
0x07fe8ac4:  lea    0x37(%esp),%eax
0x07fe8ac8:  call   0x7fe0437

----------------
IN: 
0x07fe8acd:  mov    %esi,0x18(%esp)
0x07fe8ad1:  mov    %edi,0x14(%esp)
0x07fe8ad5:  mov    %eax,0x10(%esp)
0x07fe8ad9:  movzbl 0x28(%ebx),%eax
0x07fe8add:  mov    %eax,0xc(%esp)
0x07fe8ae1:  mov    0x24(%ebx),%eax
0x07fe8ae4:  movzbl 0x7(%eax),%eax
0x07fe8ae8:  mov    %eax,0x8(%esp)
0x07fe8aec:  movl   $0xf4d59,0x4(%esp)
0x07fe8af4:  movl   $0x50,(%esp)
0x07fe8afb:  call   0x7fe5355

----------------
IN: 
0x07fe8b00:  mov    %eax,%esi
0x07fe8b02:  mov    %eax,0x4(%esp)
0x07fe8b06:  movl   $0xf59f4,(%esp)
0x07fe8b0d:  call   0xf1787

----------------
IN: 
0x07fe8b12:  mov    0x24(%esp),%ecx
0x07fe8b16:  test   %cl,%cl
0x07fe8b18:  je     0x7fe8b38

----------------
IN: 
0x07fe8b1a:  mov    0x24(%ebx),%eax
0x07fe8b1d:  movzbl 0x28(%ebx),%ecx
0x07fe8b21:  movzbl 0x7(%eax),%edx
0x07fe8b25:  mov    0xc(%eax),%eax
0x07fe8b28:  call   0x7fe529f

----------------
IN: 
0x07fe8b2d:  mov    %eax,%ecx
0x07fe8b2f:  mov    %esi,%edx
0x07fe8b31:  mov    %ebx,%eax
0x07fe8b33:  call   0x7fe0ddb

----------------
IN: 
0x07fe0ddb:  push   %esi
0x07fe0ddc:  push   %ebx
0x07fe0ddd:  push   %ebx
0x07fe0dde:  mov    0x7fefe77,%esi
0x07fe0de4:  mov    %ecx,%ebx
0x07fe0de6:  test   %ecx,%ecx
0x07fe0de8:  jns    0x7fe0dec

----------------
IN: 
0x07fe0dea:  mov    %esi,%ebx
0x07fe0dec:  mov    %edx,(%esp)
0x07fe0def:  mov    %eax,%ecx
0x07fe0df1:  mov    %ebx,%edx
0x07fe0df3:  mov    $0x3,%eax
0x07fe0df8:  call   0x7fe0d22

----------------
IN: 
0x07fe0d8c:  jg     0x7fe0dae

----------------
IN: 
0x07fe0dae:  mov    %ebx,(%esp)
0x07fe0db1:  mov    (%ebx),%ebx
0x07fe0db3:  jmp    0x7fe0d73

----------------
IN: 
0x07fe0d73:  test   %ebx,%ebx
0x07fe0d75:  jne    0x7fe0d87

----------------
IN: 
0x07fe0dfd:  pop    %eax
0x07fe0dfe:  pop    %ebx
0x07fe0dff:  pop    %esi
0x07fe0e00:  ret    

----------------
IN: 
0x07fe8b38:  test   %ebx,%ebx
0x07fe8b3a:  je     0x7fe8b54

Servicing hardware INT=0x08
----------------
IN: 
0x07fe4277:  or     $0xffffffff,%ebx
0x07fe427a:  cmp    $0x64,%esi
0x07fe427d:  jle    0x7fe429c

----------------
IN: 
0x07fe4373:  mov    %eax,%edx
0x07fe4375:  not    %edx
0x07fe4377:  sar    $0x1f,%edx
0x07fe437a:  and    %edx,%eax
0x07fe437c:  jmp    0x7fe43e4

----------------
IN: 
0x07fe43e4:  mov    %al,0x1(%esi)
0x07fe43e7:  jmp    0x7fe4451

----------------
IN: 
0x07fe4451:  lea    0x6(%esp),%edx
0x07fe4455:  mov    $0x1060,%eax
0x07fe445a:  call   0x7fe13fb

----------------
IN: 
0x07fe445f:  test   %eax,%eax
0x07fe4461:  je     0x7fe4465

----------------
IN: 
0x07fe4465:  mov    %ebx,%eax
0x07fe4467:  add    $0x8,%esp
0x07fe446a:  pop    %ebx
0x07fe446b:  pop    %esi
0x07fe446c:  pop    %edi
0x07fe446d:  pop    %ebp
0x07fe446e:  ret    

----------------
IN: 
0x07fe8d40:  test   %eax,%eax
0x07fe8d42:  je     0x7fe8dd5

----------------
IN: 
0x07fe8dd5:  movzbl 0xa(%esp),%eax
0x07fe8dda:  cmp    $0xaa,%al
0x07fe8ddc:  je     0x7fe8df0

----------------
IN: 
0x07fe8df0:  xor    %edx,%edx
0x07fe8df2:  mov    $0xf5,%eax
0x07fe8df7:  call   0x7fe42da

----------------
IN: 
0x07fe437e:  cmp    $0x2f2,%edi
0x07fe4384:  jne    0x7fe43ef

----------------
IN: 
0x07fe43ef:  mov    %edi,%eax
0x07fe43f1:  movzbl %al,%eax
0x07fe43f4:  mov    $0xc8,%edx
0x07fe43f9:  call   0x7fe42a5

----------------
IN: 
0x07fe43fe:  mov    %eax,%ebx
0x07fe4400:  test   %eax,%eax
0x07fe4402:  jne    0x7fe4451

----------------
IN: 
0x07fe4404:  mov    %edi,%ecx
0x07fe4406:  sar    $0xc,%ecx
0x07fe4409:  and    $0xf,%ecx
0x07fe440c:  xor    %ebp,%ebp
0x07fe440e:  cmp    %ecx,%ebp
0x07fe4410:  jge    0x7fe442d

----------------
IN: 
0x07fe442d:  sar    $0x8,%edi
0x07fe4430:  and    $0xf,%edi
0x07fe4433:  xor    %ebp,%ebp
0x07fe4435:  cmp    %edi,%ebp
0x07fe4437:  jge    0x7fe4451

----------------
IN: 
0x07fe8dfc:  test   %eax,%eax
0x07fe8dfe:  jne    0x7fe8e36

----------------
IN: 
0x07fe8e00:  movb   $0x2,0xa(%esp)
0x07fe8e05:  lea    0xa(%esp),%edx
0x07fe8e09:  mov    $0x10f0,%ax
0x07fe8e0d:  call   0x7fe42da

----------------
IN: 
0x07fe4412:  mov    %ecx,(%esp)
0x07fe4415:  movzbl (%esi,%ebp,1),%eax
0x07fe4419:  mov    $0xc8,%edx
0x07fe441e:  call   0x7fe42a5

----------------
IN: 
0x07fe4423:  test   %eax,%eax
0x07fe4425:  jne    0x7fe444f

----------------
IN: 
0x07fe4427:  inc    %ebp
0x07fe4428:  mov    (%esp),%ecx
0x07fe442b:  jmp    0x7fe440e

----------------
IN: 
0x07fe440e:  cmp    %ecx,%ebp
0x07fe4410:  jge    0x7fe442d

----------------
IN: 
0x07fe8e12:  test   %eax,%eax
0x07fe8e14:  jne    0x7fe8e36

----------------
IN: 
0x07fe8e16:  movb   $0x61,0xef7a0
0x07fe8e1d:  xor    %edx,%edx
0x07fe8e1f:  mov    $0xf4,%al
0x07fe8e21:  call   0x7fe42da

----------------
IN: 
0x07fe8e26:  test   %eax,%eax
0x07fe8e28:  jne    0x7fe8e36

----------------
IN: 
0x07fe8e2a:  movl   $0xf4e44,(%esp)
0x07fe8e31:  call   0xf1787

----------------
IN: 
0x07fe8e36:  add    $0xc,%esp
0x07fe8e39:  pop    %ebx
0x07fe8e3a:  pop    %esi
0x07fe8e3b:  ret    

----------------
IN: 
0x07fe0ae1:  movl   $0xf3e4c,(%esp)
0x07fe0ae8:  call   0xf1787

----------------
IN: 
0x07fe0943:  ret    

----------------
IN: 
0x07febc8c:  call   0x7fe5092

----------------
IN: 
0x07fe5092:  push   %ebp
0x07fe5093:  mov    %esp,%ebp
0x07fe5095:  push   %edi
0x07fe5096:  push   %esi
0x07fe5097:  push   %ebx
0x07fe5098:  and    $0xfffffff8,%esp
0x07fe509b:  sub    $0x318,%esp
0x07fe50a1:  movl   $0xf4785,(%esp)
0x07fe50a8:  call   0xf1787

----------------
IN: 
0x07fe50ad:  mov    $0x300,%ecx
0x07fe50b2:  xor    %edx,%edx
0x07fe50b4:  lea    0x18(%esp),%eax
0x07fe50b8:  call   0xf0d7a

----------------
IN: 
0x07fe50bd:  mov    0x7fefe87,%ebx
0x07fe50c3:  mov    0x7fefee3,%eax
0x07fe50c8:  lea    -0x4(%eax),%esi
0x07fe50cb:  cmp    $0xfffffffc,%esi
0x07fe50ce:  je     0x7fe50f3

----------------
IN: 
0x07fe50d0:  cmpw   $0x300,0x14(%esi)
0x07fe50d6:  je     0x7fe50eb

----------------
IN: 
0x07fe50d8:  cmpl   $0x0,0x1c(%esi)
0x07fe50dc:  jne    0x7fe50eb

----------------
IN: 
0x07fe50de:  lea    0x18(%esp),%ecx
0x07fe50e2:  xor    %edx,%edx
0x07fe50e4:  mov    %esi,%eax
0x07fe50e6:  call   0x7fe471d

----------------
IN: 
0x07fe48c2:  mov    %esi,%ecx
0x07fe48c4:  mov    $0x30,%edx
0x07fe48c9:  mov    0x14(%esp),%eax
0x07fe48cd:  call   0xf0dde

----------------
IN: 
0x07fe48d2:  jmp    0x7fe4902

----------------
IN: 
0x07fe4902:  or     $0xffffffff,%eax
0x07fe4905:  add    $0x40,%esp
0x07fe4908:  pop    %ebx
0x07fe4909:  pop    %esi
0x07fe490a:  pop    %edi
0x07fe490b:  pop    %ebp
0x07fe490c:  ret    

----------------
IN: 
0x07fe50eb:  mov    0x4(%esi),%esi
0x07fe50ee:  sub    $0x4,%esi
0x07fe50f1:  jmp    0x7fe50cb

----------------
IN: 
0x07fe50cb:  cmp    $0xfffffffc,%esi
0x07fe50ce:  je     0x7fe50f3

----------------
IN: 
0x07fe48dc:  lea    -0xc0000(%edi),%eax
0x07fe48e2:  shr    $0xb,%eax
0x07fe48e5:  mov    %ebx,(%esi,%eax,8)
0x07fe48e8:  movl   $0x2,0x4(%esi,%eax,8)
0x07fe48f0:  movzwl 0x1a(%esp),%edx
0x07fe48f5:  mov    0x1c(%esp),%ecx
0x07fe48f9:  mov    %edi,%eax
0x07fe48fb:  call   0x7fe2577

----------------
IN: 
0x07fe25c9:  movzwl 0x1a(%ebx),%eax
0x07fe25cd:  add    %ebx,%eax
0x07fe25cf:  cmpl   $0x506e5024,(%eax)
0x07fe25d5:  jne    0x7fe25ea

----------------
IN: 
0x07fe25d7:  test   %eax,%eax
0x07fe25d9:  je     0x7fe25ea

Servicing hardware INT=0x08
----------------
IN: 
0x000c9003:  jmp    0xc90a5

----------------
IN: 
0x000c90a5:  pusha  
0x000c90a6:  push   %ds
0x000c90a7:  push   %es
0x000c90a8:  push   %fs
0x000c90aa:  push   %gs
0x000c90ac:  cld    
0x000c90ad:  push   %cs
0x000c90ae:  pop    %ds
0x000c90af:  mov    %bx,%gs
0x000c90b1:  mov    %di,%bx
0x000c90b3:  mov    %ax,0x357
0x000c90b6:  mov    $0x304,%si
0x000c90b9:  xor    %di,%di
0x000c90bb:  call   0xc94ec

----------------
IN: 
0x000c94ec:  push   %ax
0x000c94ed:  lods   %ds:(%si),%al
0x000c94ee:  test   %al,%al
0x000c94f0:  je     0xc94f7

----------------
IN: 
0x000c94f2:  call   0xc94cd

----------------
IN: 
0x000c94cd:  push   %ax
0x000c94ce:  push   %bx
0x000c94cf:  push   %bp
0x000c94d0:  test   %di,%di
0x000c94d2:  je     0xc94d9

----------------
IN: 
0x000c94d9:  mov    $0x7,%bx
0x000c94dc:  mov    $0xe,%ah
0x000c94de:  cmp    $0xa,%al
0x000c94e0:  jne    0xc94e6

----------------
IN: 
0x000c94e2:  int    $0x10

----------------
IN: 
0x000c94e4:  mov    $0xd,%al
0x000c94e6:  int    $0x10

----------------
IN: 
0x000c94e8:  pop    %bp
0x000c94e9:  pop    %bx
0x000c94ea:  pop    %ax
0x000c94eb:  ret    

----------------
IN: 
0x000c94f5:  jmp    0xc94ed

----------------
IN: 
0x000c94ed:  lods   %ds:(%si),%al
0x000c94ee:  test   %al,%al
0x000c94f0:  je     0xc94f7

----------------
IN: 
0x000c94e6:  int    $0x10

----------------
IN: 
0x000c94f7:  pop    %ax
0x000c94f8:  ret    

----------------
IN: 
0x000c90be:  call   0xc9521

----------------
IN: 
0x000c9521:  push   %ax
0x000c9522:  xchg   %al,%ah
0x000c9524:  call   0xc950b

----------------
IN: 
0x000c950b:  ror    $0x4,%al
0x000c950e:  call   0xc9514

----------------
IN: 
0x000c9514:  push   %ax
0x000c9515:  and    $0xf,%al
0x000c9517:  cmp    $0xa,%al
0x000c9519:  sbb    $0x69,%al
0x000c951b:  das    
0x000c951c:  call   0xc94cd

----------------
IN: 
0x000c951f:  pop    %ax
0x000c9520:  ret    

----------------
IN: 
0x000c9511:  ror    $0x4,%al
0x000c9514:  push   %ax
0x000c9515:  and    $0xf,%al
0x000c9517:  cmp    $0xa,%al
0x000c9519:  sbb    $0x69,%al
0x000c951b:  das    
0x000c951c:  call   0xc94cd

----------------
IN: 
0x000c9527:  mov    $0x3a,%al
0x000c9529:  call   0xc94cd

----------------
IN: 
0x000c952c:  mov    %ah,%al
0x000c952e:  shr    $0x3,%al
0x000c9531:  call   0xc950b

----------------
IN: 
0x000c9534:  mov    $0x2e,%al
0x000c9536:  call   0xc94cd

----------------
IN: 
0x000c9539:  mov    %ah,%al
0x000c953b:  and    $0x7,%al
0x000c953d:  call   0xc9514

----------------
IN: 
0x000c9540:  pop    %ax
0x000c9541:  ret    

----------------
IN: 
0x000c90c1:  mov    $0x7a,%di
0x000c90c4:  call   0xc9521

----------------
IN: 
0x000c94d4:  mov    %al,(%di)
0x000c94d6:  inc    %di
0x000c94d7:  jmp    0xc94e8

----------------
IN: 
0x000c90c7:  movb   $0x20,0x74
0x000c90cc:  mov    $0x20,%al
0x000c90ce:  xor    %di,%di
0x000c90d0:  call   0xc94cd

----------------
IN: 
0x000c90d3:  mov    %cs,%ax
0x000c90d5:  call   0xc9504

----------------
IN: 
0x000c9504:  xchg   %al,%ah
0x000c9506:  call   0xc950b

----------------
IN: 
0x000c9509:  xchg   %al,%ah
0x000c950b:  ror    $0x4,%al
0x000c950e:  call   0xc9514

----------------
IN: 
0x000c90d8:  push   %ebx
0x000c90da:  push   %edx
0x000c90dc:  push   %edi
0x000c90de:  stc    
0x000c90df:  mov    $0xb101,%ax
0x000c90e2:  int    $0x1a

----------------
IN: 
0x000ffe6e:  cmp    $0xb1,%ah
0x000ffe71:  je     0xfd3ed

----------------
IN: 
0x000fd3ed:  cli    
0x000fd3ee:  cld    
0x000fd3ef:  push   %eax
0x000fd3f1:  push   %ecx
0x000fd3f3:  push   %edx
0x000fd3f5:  push   %ebx
0x000fd3f7:  push   %ebp
0x000fd3f9:  push   %esi
0x000fd3fb:  push   %edi
0x000fd3fd:  push   %es
0x000fd3fe:  push   %ds
0x000fd3ff:  mov    %ss,%ax
0x000fd401:  mov    %ax,%ds
0x000fd403:  mov    %esp,%ebx
0x000fd406:  movzwl %sp,%esp
0x000fd40a:  mov    %esp,%eax
0x000fd40d:  calll  0xfc3c5

----------------
IN: 
0x000fc3c5:  push   %ebp
0x000fc3c7:  push   %edi
0x000fc3c9:  push   %esi
0x000fc3cb:  push   %ebx
0x000fc3cd:  mov    %eax,%ebx
0x000fc3d0:  addr32 mov 0x1c(%eax),%al
0x000fc3d4:  cmp    $0x9,%al
0x000fc3d6:  je     0xfc5bb

----------------
IN: 
0x000fc3da:  ja     0xfc45b

----------------
IN: 
0x000fc3dc:  cmp    $0x2,%al
0x000fc3de:  je     0xfc4ba

----------------
IN: 
0x000fc3e2:  ja     0xfc413

----------------
IN: 
0x000fc3e4:  dec    %al
0x000fc3e6:  jne    0xfc713

----------------
IN: 
0x000fc3ea:  addr32 movb $0x1,0x1c(%ebx)
0x000fc3ef:  addr32 movw $0x210,0x10(%ebx)
0x000fc3f5:  mov    %cs:0x6378,%eax
0x000fc3fa:  addr32 mov %al,0x18(%ebx)
0x000fc3fe:  addr32 movl $0x20494350,0x14(%ebx)
0x000fc407:  addr32 movl $0xfd3bf,0x4(%ebx)
0x000fc410:  jmp    0xfc705

----------------
IN: 
0x000fc705:  mov    %ebx,%eax
0x000fc708:  pop    %ebx
0x000fc70a:  pop    %esi
0x000fc70c:  pop    %edi
0x000fc70e:  pop    %ebp
0x000fc710:  jmp    0xfff45

----------------
IN: 
0x000fff45:  addr32 movb $0x0,0x1d(%eax)
0x000fff4a:  addr32 andw $0xfffffffe,0x24(%eax)
0x000fff4f:  retl   

----------------
IN: 
0x000fd413:  mov    %ebx,%esp
0x000fd416:  pop    %ds
0x000fd417:  pop    %es
0x000fd418:  pop    %edi
0x000fd41a:  pop    %esi
0x000fd41c:  pop    %ebp
0x000fd41e:  pop    %ebx
0x000fd420:  pop    %edx
0x000fd422:  pop    %ecx
0x000fd424:  pop    %eax
0x000fd426:  iret   

----------------
IN: 
0x000c90e4:  jb     0xc913c

----------------
IN: 
0x000c90e6:  cmp    $0x20494350,%edx
0x000c90ed:  jne    0xc913c

----------------
IN: 
0x000c90ef:  test   %ah,%ah
0x000c90f1:  jne    0xc913c

----------------
IN: 
0x000c90f3:  mov    $0x31e,%si
0x000c90f6:  xor    %di,%di
0x000c90f8:  call   0xc94ec

----------------
IN: 
0x000c90fb:  mov    %bh,%al
0x000c90fd:  call   0xc9514

----------------
IN: 
0x000c9100:  mov    $0x2e,%al
0x000c9102:  call   0xc94cd

----------------
IN: 
0x000c9105:  mov    %bl,%al
0x000c9107:  call   0xc950b

----------------
IN: 
0x000c910a:  cmp    $0x3,%bh
0x000c910d:  jb     0xc913c

----------------
IN: 
0x000c913c:  push   %cs
0x000c913d:  pop    %gs
0x000c913f:  pop    %edi
0x000c9141:  pop    %edx
0x000c9143:  pop    %ebx
0x000c9145:  mov    $0xefff,%bx
0x000c9148:  inc    %bx
0x000c9149:  je     0xc9175

----------------
IN: 
0x000c914b:  mov    %bx,%es
0x000c914d:  cmpl   $0x506e5024,%es:0x0
0x000c9157:  jne    0xc9148

----------------
IN: 
0x000c9148:  inc    %bx
0x000c9149:  je     0xc9175

----------------
IN: 
0x000c9159:  xor    %dx,%dx
0x000c915b:  xor    %si,%si
0x000c915d:  movzbw %es:0x5,%cx
0x000c9163:  lods   %es:(%si),%al
0x000c9165:  add    %al,%dl
0x000c9167:  loop   0xc9163

----------------
IN: 
0x000c9163:  lods   %es:(%si),%al
0x000c9165:  add    %al,%dl
0x000c9167:  loop   0xc9163

----------------
IN: 
0x000c9169:  jne    0xc9148

----------------
IN: 
0x000c916b:  mov    $0x323,%si
0x000c916e:  xor    %di,%di
0x000c9170:  call   0xc94ec

----------------
IN: 
0x000c9173:  jmp    0xc9175

----------------
IN: 
0x000c9175:  mov    $0xdfff,%bx
0x000c9178:  inc    %bx
0x000c9179:  je     0xc921c

----------------
IN: 
0x000c917d:  mov    %bx,%es
0x000c917f:  cmpl   $0x4d4d5024,%es:0x0
0x000c9189:  jne    0xc9178

----------------
IN: 
0x000c9178:  inc    %bx
0x000c9179:  je     0xc921c

----------------
IN: 
0x000c918b:  xor    %dx,%dx
0x000c918d:  xor    %si,%si
0x000c918f:  movzbw %es:0x5,%cx
0x000c9195:  lods   %es:(%si),%al
0x000c9197:  add    %al,%dl
0x000c9199:  loop   0xc9195

----------------
IN: 
0x000c9195:  lods   %es:(%si),%al
0x000c9197:  add    %al,%dl
0x000c9199:  loop   0xc9195

----------------
IN: 
0x000c919b:  jne    0xc9178

----------------
IN: 
0x000c919d:  mov    $0x328,%si
0x000c91a0:  xor    %di,%di
0x000c91a2:  call   0xc94ec

----------------
IN: 
0x000c91a5:  pushal 
0x000c91a7:  movzbl 0x2,%ecx
0x000c91ad:  add    0x35d,%cx
0x000c91b1:  add    $0x7,%cx
0x000c91b4:  and    $0xfffffff8,%cx
0x000c91b7:  shl    $0x5,%ecx
0x000c91bb:  mov    $0x18ae1000,%ebx
0x000c91c1:  mov    $0x2eb,%bp
0x000c91c4:  call   0xc9297

Servicing hardware INT=0x08
----------------
IN: 
0x000c9297:  push   %eax
0x000c9299:  push   %di
0x000c929a:  mov    $0x20,%di
0x000c929d:  push   %ebx
0x000c929f:  push   $0x1
0x000c92a1:  lcall  *%es:0x7

----------------
IN: 
0x000fd2cb:  push   %esp
0x000fd2cd:  movzwl %sp,%esp
0x000fd2d1:  pushfl 
0x000fd2d3:  cli    
0x000fd2d4:  cld    
0x000fd2d5:  push   %eax
0x000fd2d7:  push   %ecx
0x000fd2d9:  push   %edx
0x000fd2db:  push   %es
0x000fd2dc:  push   %ds
0x000fd2dd:  mov    %ss,%cx
0x000fd2df:  mov    %cx,%ds
0x000fd2e1:  mov    $0x7fee053,%eax
0x000fd2e7:  addr32 lea 0x1c(%esp),%edx
0x000fd2ed:  mov    $0xffffffff,%ecx
0x000fd2f3:  calll  0xfa097

----------------
IN: 
0x000fa097:  push   %ebx
0x000fa099:  mov    %cr0,%ebx
0x000fa09c:  and    $0x1,%bl
0x000fa09f:  jne    0xfa0a6

----------------
IN: 
0x000fa0a1:  pop    %ebx
0x000fa0a3:  jmp    0xf735e

----------------
IN: 
0x000f735e:  push   %ebp
0x000f7360:  push   %edi
0x000f7362:  push   %esi
0x000f7364:  push   %ebx
0x000f7366:  sub    $0xf,%esp
0x000f736a:  mov    %eax,%esi
0x000f736d:  in     $0x70,%al
0x000f736f:  addr32 mov %al,(%esp)
0x000f7373:  mov    %al,%cl
0x000f7375:  or     $0xffffff80,%ecx
0x000f7379:  mov    %cl,%al
0x000f737b:  out    %al,$0x70
0x000f737d:  in     $0x71,%al
0x000f737f:  addr32 mov %fs,0x1(%esp)
0x000f7384:  addr32 mov %gs,0x3(%esp)
0x000f7389:  addr32 sgdtl 0x9(%esp)
0x000f7390:  mov    $0xe000,%eax
0x000f7396:  movzwl %ax,%ebp
0x000f739a:  mov    %bp,%es
0x000f739c:  mov    %es:0xf7ec,%ax
0x000f73a0:  addr32 mov %ax,0x5(%esp)
0x000f73a5:  mov    %ss,%ax
0x000f73a7:  mov    %bp,%es
0x000f73a9:  mov    %ax,%es:0xf7ec
0x000f73ad:  mov    %edx,%eax
0x000f73b0:  mov    %ss,%ebx
0x000f73b3:  mov    %esp,%edi
0x000f73b6:  shl    $0x4,%ebx
0x000f73ba:  add    %ebx,%esp
0x000f73bd:  shr    $0x4,%ebx
0x000f73c1:  mov    $0xf73ca,%edx
0x000f73c7:  jmp    0xfd124

----------------
IN: 
0x000f73ca:  call   *%esi

----------------
IN: 
0x07fee053:  push   %ebp
0x07fee054:  push   %edi
0x07fee055:  push   %esi
0x07fee056:  push   %ebx
0x07fee057:  sub    $0x8,%esp
0x07fee05a:  mov    %eax,%ebx
0x07fee05c:  mov    (%eax),%si
0x07fee05f:  movzwl %si,%eax
0x07fee062:  mov    %eax,0x4(%esp)
0x07fee066:  movl   $0xf5d1c,(%esp)
0x07fee06d:  call   0xf1787

----------------
IN: 
0x07fee072:  cmp    $0x1,%si
0x07fee076:  je     0x7fee16c

----------------
IN: 
0x07fee16c:  mov    0x2(%ebx),%ecx
0x07fee16f:  xor    %eax,%eax
0x07fee171:  xor    %edx,%edx
0x07fee173:  cmp    $0xffffffff,%ecx
0x07fee176:  je     0x7fee19f

----------------
IN: 
0x07fee178:  mov    0x7fefe8b(,%edx,4),%eax
0x07fee17f:  mov    (%eax),%eax
0x07fee181:  test   %eax,%eax
0x07fee183:  je     0x7fee194

----------------
IN: 
0x07fee185:  cmp    %eax,0x8(%eax)
0x07fee188:  jne    0x7fee17f

----------------
IN: 
0x07fee17f:  mov    (%eax),%eax
0x07fee181:  test   %eax,%eax
0x07fee183:  je     0x7fee194

----------------
IN: 
0x07fee194:  inc    %edx
0x07fee195:  cmp    $0x5,%edx
0x07fee198:  jne    0x7fee178

----------------
IN: 
0x07fee18a:  cmp    %ecx,0x28(%eax)
0x07fee18d:  jne    0x7fee17f

----------------
IN: 
0x07fee19a:  jmp    0x7fee19f

----------------
IN: 
0x07fee19f:  add    $0x8,%esp
0x07fee1a2:  pop    %ebx
0x07fee1a3:  pop    %esi
0x07fee1a4:  pop    %edi
0x07fee1a5:  pop    %ebp
0x07fee1a6:  ret    

----------------
IN: 
0x000f73cc:  mov    $0x73d6,%edx
0x000f73d1:  jmp    0xfd181

----------------
IN: 
0x000f73d6:  mov    %bx,%ds
0x000f73d8:  mov    %bx,%ss

----------------
IN: 
0x000f73da:  mov    %edi,%esp

----------------
IN: 
0x000f73dd:  mov    %eax,%ebx
0x000f73e0:  mov    %bp,%es
0x000f73e2:  addr32 mov 0x5(%esp),%ax
0x000f73e7:  mov    %ax,%es:0xf7ec
0x000f73eb:  addr32 lgdtl 0x9(%esp)
0x000f73f2:  addr32 mov 0x1(%esp),%fs
0x000f73f7:  addr32 mov 0x3(%esp),%gs
0x000f73fc:  addr32 mov (%esp),%al
0x000f7400:  out    %al,$0x70
0x000f7402:  in     $0x71,%al
0x000f7404:  mov    %ebx,%eax
0x000f7407:  add    $0xf,%esp
0x000f740b:  pop    %ebx
0x000f740d:  pop    %esi
0x000f740f:  pop    %edi
0x000f7411:  pop    %ebp
0x000f7413:  retl   

----------------
IN: 
0x000fd2f9:  addr32 mov %ax,0xc(%esp)
0x000fd2fe:  shr    $0x10,%eax
0x000fd302:  addr32 mov %ax,0x4(%esp)
0x000fd307:  pop    %ds
0x000fd308:  pop    %es
0x000fd309:  pop    %edx
0x000fd30b:  pop    %ecx
0x000fd30d:  pop    %eax
0x000fd30f:  popfl  

----------------
IN: 
0x000fd311:  pop    %esp
0x000fd313:  lret   

----------------
IN: 
0x000c92a6:  add    $0x6,%sp
0x000c92a9:  push   %dx
0x000c92aa:  push   %ax
0x000c92ab:  pop    %esi
0x000c92ad:  inc    %esi
0x000c92af:  je     0xc92bd

----------------
IN: 
0x000c92b1:  dec    %esi
0x000c92b3:  je     0xc92bd

----------------
IN: 
0x000c92bd:  push   $0x2
0x000c92bf:  push   %ebx
0x000c92c1:  push   %ecx
0x000c92c3:  push   $0x0
0x000c92c5:  lcall  *%es:0x7

----------------
IN: 
0x07fee07c:  jb     0x7fee09d

----------------
IN: 
0x07fee09d:  mov    0x2(%ebx),%esi
0x07fee0a0:  mov    0x6(%ebx),%edi
0x07fee0a3:  mov    0xa(%ebx),%dx
0x07fee0a7:  test   $0x8,%dl
0x07fee0aa:  jne    0x7fee0b8

----------------
IN: 
0x07fee0ac:  mov    $0x7fefe9f,%ebp
0x07fee0b1:  mov    $0x7fefea3,%eax
0x07fee0b6:  jmp    0x7fee0c2

----------------
IN: 
0x07fee0c2:  test   %esi,%esi
0x07fee0c4:  jne    0x7fee10a

----------------
IN: 
0x07fee10a:  shl    $0x4,%esi
0x07fee10d:  test   %esi,%esi
0x07fee10f:  jle    0x7fee168

----------------
IN: 
0x07fee111:  mov    $0x10,%ebx
0x07fee116:  test   $0x4,%dl
0x07fee119:  je     0x7fee12c

----------------
IN: 
0x07fee12c:  and    $0x3,%edx
0x07fee12f:  cmp    $0x2,%dx
0x07fee133:  je     0x7fee158

----------------
IN: 
0x07fee158:  mov    %ebx,(%esp)
0x07fee15b:  mov    %esi,%ecx
0x07fee15d:  mov    %edi,%edx
0x07fee15f:  mov    %ebp,%eax
0x07fee161:  call   0x7fdf52c

----------------
IN: 
0x07fee166:  jmp    0x7fee19f

----------------
IN: 
0x000c92ca:  add    $0xc,%sp
0x000c92cd:  push   %dx
0x000c92ce:  push   %ax
0x000c92cf:  pop    %esi
0x000c92d1:  mov    $0x2b,%di
0x000c92d4:  mov    %di,%ax
0x000c92d6:  xor    %di,%di
0x000c92d8:  call   0xc94cd

----------------
IN: 
0x000c92db:  mov    %esi,%eax
0x000c92de:  call   0xc94f9

----------------
IN: 
0x000c94f9:  ror    $0x10,%eax
0x000c94fd:  call   0xc9504

----------------
IN: 
0x000c9500:  ror    $0x10,%eax
0x000c9504:  xchg   %al,%ah
0x000c9506:  call   0xc950b

----------------
IN: 
0x000c92e1:  inc    %esi
0x000c92e3:  je     0xc92e7

----------------
IN: 
0x000c92e5:  dec    %esi
0x000c92e7:  pop    %di
0x000c92e8:  pop    %eax
0x000c92ea:  ret    

----------------
IN: 
0x000c91c7:  mov    %esi,0x359
0x000c91cc:  je     0xc91ee

----------------
IN: 
0x000c91ce:  push   %es
0x000c91cf:  xor    %ax,%ax
0x000c91d1:  mov    %ax,%es
0x000c91d3:  mov    %esi,%edi
0x000c91d6:  xor    %esi,%esi
0x000c91d9:  movzbl 0x2,%ecx
0x000c91df:  shl    $0x7,%ecx
0x000c91e3:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000c91e3:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000c91e7:  pop    %es
0x000c91e8:  mov    0x9f,%al
0x000c91eb:  mov    %al,0x2
0x000c91ee:  mov    $0x9ff6,%ecx
0x000c91f4:  add    $0x1fff,%ecx
0x000c91fb:  and    $0xffffe000,%ecx
0x000c9202:  mov    %ecx,%ebx
0x000c9205:  shr    $0xc,%bx
0x000c9208:  or     $0x18ae2000,%ebx
0x000c920f:  mov    $0x302,%bp
0x000c9212:  call   0xc9297

----------------
IN: 
0x000c9215:  mov    %esi,0x35f
0x000c921a:  popal  
0x000c921c:  xor    %bx,%bx
0x000c921e:  xor    %si,%si
0x000c9220:  movzbw 0x2,%cx
0x000c9225:  shl    $0x9,%cx
0x000c9228:  lods   %ds:(%si),%al
0x000c9229:  add    %al,%bl
0x000c922b:  loop   0xc9228

----------------
IN: 
0x000c9228:  lods   %ds:(%si),%al
0x000c9229:  add    %al,%bl
0x000c922b:  loop   0xc9228

----------------
IN: 
0x000c922d:  sub    %bl,0x6
0x000c9231:  mov    $0x20,%al
0x000c9233:  xor    %di,%di
0x000c9235:  call   0xc94cd

----------------
IN: 
0x000c9238:  mov    %gs,%ax
0x000c923a:  call   0xc9504

----------------
IN: 
0x000c923d:  movzbw 0x2,%cx
0x000c9242:  shl    $0x9,%cx
0x000c9245:  mov    %ax,%es
0x000c9247:  xor    %si,%si
0x000c9249:  xor    %di,%di
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924e:  testb  $0x7,0x357
0x000c9253:  jne    0xc9285

----------------
IN: 
0x000c9255:  mov    $0x334,%si
0x000c9258:  xor    %di,%di
0x000c925a:  call   0xc94ec

----------------
IN: 
0x000c94ec:  push   %ax
0x000c94ed:  lods   %ds:(%si),%al
0x000c94ee:  test   %al,%al
0x000c94f0:  je     0xc94f7

----------------
IN: 
0x000c94f2:  call   0xc94cd

----------------
IN: 
0x000c94cd:  push   %ax
0x000c94ce:  push   %bx
0x000c94cf:  push   %bp
0x000c94d0:  test   %di,%di
0x000c94d2:  je     0xc94d9

----------------
IN: 
0x000c94d9:  mov    $0x7,%bx
0x000c94dc:  mov    $0xe,%ah
0x000c94de:  cmp    $0xa,%al
0x000c94e0:  jne    0xc94e6

----------------
IN: 
0x000c94e2:  int    $0x10

----------------
IN: 
0x000c94e4:  mov    $0xd,%al
0x000c94e6:  int    $0x10

----------------
IN: 
0x000c94e8:  pop    %bp
0x000c94e9:  pop    %bx
0x000c94ea:  pop    %ax
0x000c94eb:  ret    

----------------
IN: 
0x000c94f5:  jmp    0xc94ed

----------------
IN: 
0x000c94ed:  lods   %ds:(%si),%al
0x000c94ee:  test   %al,%al
0x000c94f0:  je     0xc94f7

----------------
IN: 
0x000c94e6:  int    $0x10

----------------
IN: 
0x000c94f7:  pop    %ax
0x000c94f8:  ret    

----------------
IN: 
0x000c925d:  mov    $0x70,%si
0x000c9260:  call   0xc94ec

----------------
IN: 
0x000c9263:  mov    $0x350,%si
0x000c9266:  call   0xc94ec

----------------
IN: 
0x000c9269:  mov    $0xff02,%bx
0x000c926c:  call   0xc9437

----------------
IN: 
0x000c9437:  push   %cx
0x000c9438:  push   %ax
0x000c9439:  mov    $0x1,%ah
0x000c943b:  int    $0x16

----------------
IN: 
0x000fe82e:  pushl  $0xbadf
0x000fe834:  jmp    0xfd50f

----------------
IN: 
0x000fd50f:  cli    
0x000fd510:  cld    
0x000fd511:  push   %ds
0x000fd512:  push   %eax
0x000fd514:  mov    $0xe000,%eax
0x000fd51a:  mov    %ax,%ds
0x000fd51c:  mov    0xf7f0,%eax
0x000fd520:  sub    $0x2e,%eax
0x000fd524:  addr32 popl 0x1c(%eax)
0x000fd529:  addr32 popw (%eax)
0x000fd52c:  addr32 mov %edi,0x4(%eax)
0x000fd531:  addr32 mov %esi,0x8(%eax)
0x000fd536:  addr32 mov %ebp,0xc(%eax)
0x000fd53b:  addr32 mov %ebx,0x10(%eax)
0x000fd540:  addr32 mov %edx,0x14(%eax)
0x000fd545:  addr32 mov %ecx,0x18(%eax)
0x000fd54a:  pop    %ecx
0x000fd54c:  addr32 mov %es,0x2(%eax)
0x000fd550:  addr32 mov %esp,0x26(%eax)
0x000fd555:  addr32 mov %ss,0x2a(%eax)
0x000fd559:  addr32 popl 0x20(%eax)
0x000fd55e:  addr32 popw 0x24(%eax)
0x000fd562:  mov    %ds,%dx
0x000fd564:  mov    %dx,%ss

----------------
IN: 
0x000fd566:  mov    %eax,%esp

----------------
IN: 
0x000fd569:  calll  *%ecx

----------------
IN: 
0x000fbadf:  push   %ebx
0x000fbae1:  mov    %eax,%ebx
0x000fbae4:  calll  0xf7233

----------------
IN: 
0x000f7233:  push   %esi
0x000f7235:  push   %ebx
0x000f7237:  push   %edx
0x000f7239:  mov    $0x40,%ebx
0x000f723f:  mov    %bx,%es
0x000f7241:  mov    %es:0x17,%al
0x000f7245:  shr    $0x4,%al
0x000f7248:  and    $0x7,%eax
0x000f724c:  addr32 mov %al,0x3(%esp)
0x000f7251:  mov    %bx,%es
0x000f7253:  mov    %es:0x97,%cl
0x000f7258:  mov    %ecx,%esi
0x000f725b:  mov    %cl,%dl
0x000f725d:  and    $0x7,%edx
0x000f7261:  cmp    %dl,%al
0x000f7263:  je     0xf728e

----------------
IN: 
0x000f728e:  pop    %eax
0x000f7290:  pop    %ebx
0x000f7292:  pop    %esi
0x000f7294:  retl   

----------------
IN: 
0x000fbaea:  addr32 mov 0x1d(%ebx),%al
0x000fbaee:  cmp    $0xa,%al
0x000fbaf0:  je     0xfbb83

----------------
IN: 
0x000fbaf4:  ja     0xfbb1e

----------------
IN: 
0x000fbaf6:  cmp    $0x2,%al
0x000fbaf8:  je     0xfbb50

----------------
IN: 
0x000fbafa:  ja     0xfbb0c

----------------
IN: 
0x000fbafc:  test   %al,%al
0x000fbafe:  je     0xfbb4b

----------------
IN: 
0x000fbb00:  dec    %al
0x000fbb02:  jne    0xfbbe5

----------------
IN: 
0x000fbb06:  xor    %ecx,%ecx
0x000fbb09:  jmp    0xfbb99

----------------
IN: 
0x000fbb99:  xor    %edx,%edx
0x000fbb9c:  mov    %ebx,%eax
0x000fbb9f:  pop    %ebx
0x000fbba1:  jmp    0xf7016

----------------
IN: 
0x000f7016:  push   %ebp
0x000f7018:  push   %edi
0x000f701a:  push   %esi
0x000f701c:  push   %ebx
0x000f701e:  push   %ebx
0x000f7020:  mov    %eax,%ebx
0x000f7023:  mov    %edx,%edi
0x000f7026:  addr32 mov %ecx,(%esp)
0x000f702b:  calll  0xf6fd4

----------------
IN: 
0x000f6fdf:  mov    $0x6fd4,%ecx
0x000f6fe5:  xor    %edx,%edx
0x000f6fe8:  xor    %eax,%eax
0x000f6feb:  jmp    0xf6ec9

----------------
IN: 
0x000f7031:  mov    $0x40,%esi
0x000f7037:  mov    $0x40,%ebp
0x000f703d:  mov    %si,%es
0x000f703f:  mov    %es:0x1a,%ax
0x000f7043:  mov    %si,%es
0x000f7045:  mov    %es:0x1c,%dx
0x000f704a:  cmp    %dx,%ax
0x000f704c:  jne    0xf7063

----------------
IN: 
0x000f704e:  test   %edi,%edi
0x000f7051:  jne    0xf705b

----------------
IN: 
0x000f7053:  addr32 orw $0x40,0x24(%ebx)
0x000f7058:  jmp    0xf70e9

----------------
IN: 
0x000f70e9:  pop    %eax
0x000f70eb:  pop    %ebx
0x000f70ed:  pop    %esi
0x000f70ef:  pop    %edi
0x000f70f1:  pop    %ebp
0x000f70f3:  retl   

----------------
IN: 
0x000fd56c:  mov    %esp,%eax
0x000fd56f:  addr32 mov 0x2a(%eax),%ss

----------------
IN: 
0x000fd573:  addr32 mov 0x26(%eax),%esp

----------------
IN: 
0x000fd578:  pop    %edx
0x000fd57a:  pop    %dx
0x000fd57b:  addr32 pushw 0x24(%eax)
0x000fd57f:  addr32 pushl 0x20(%eax)
0x000fd584:  addr32 mov 0x4(%eax),%edi
0x000fd589:  addr32 mov 0x8(%eax),%esi
0x000fd58e:  addr32 mov 0xc(%eax),%ebp
0x000fd593:  addr32 mov 0x10(%eax),%ebx
0x000fd598:  addr32 mov 0x14(%eax),%edx
0x000fd59d:  addr32 mov 0x18(%eax),%ecx
0x000fd5a2:  addr32 mov 0x2(%eax),%es
0x000fd5a6:  addr32 pushw (%eax)
0x000fd5a9:  addr32 pushl 0x1c(%eax)
0x000fd5ae:  pop    %eax
0x000fd5b0:  pop    %ds
0x000fd5b1:  iret   

----------------
IN: 
0x000c943d:  je     0xc9445

----------------
IN: 
0x000c9445:  mov    $0x0,%cx
0x000c9448:  dec    %cx
0x000c9449:  js     0xc9460

----------------
IN: 
0x000c9460:  pop    %ax
0x000c9461:  pop    %cx
0x000c9462:  ret    

----------------
IN: 
0x000c926f:  pushf  
0x000c9270:  xor    %di,%di
0x000c9272:  call   0xc9542

----------------
IN: 
0x000c9542:  push   %ax
0x000c9543:  push   %cx
0x000c9544:  mov    $0xd,%al
0x000c9546:  call   0xc94cd

----------------
IN: 
0x000c9549:  mov    $0x20,%al
0x000c954b:  mov    $0x4f,%cx
0x000c954e:  call   0xc94cd

----------------
IN: 
0x000c9551:  loop   0xc954e

----------------
IN: 
0x000c954e:  call   0xc94cd

----------------
IN: 
0x000c9553:  mov    $0xd,%al
0x000c9555:  call   0xc94cd

----------------
IN: 
0x000c9558:  pop    %cx
0x000c9559:  pop    %ax
0x000c955a:  ret    

----------------
IN: 
0x000c9275:  mov    $0x354,%si
0x000c9278:  call   0xc94ec

----------------
IN: 
0x000c927b:  popf   

----------------
IN: 
0x000c927c:  jne    0xc9285

----------------
IN: 
0x000c9285:  mov    $0xa,%al
0x000c9287:  xor    %di,%di
0x000c9289:  call   0xc94cd

----------------
IN: 
0x000c928c:  pop    %gs
0x000c928e:  pop    %fs
0x000c9290:  pop    %es
0x000c9291:  pop    %ds
0x000c9292:  popa   
0x000c9293:  mov    $0x20,%ax
0x000c9296:  lret   

----------------
IN: 
0x07fe50f3:  lea    0x18(%esp),%ecx
0x07fe50f7:  xor    %edx,%edx
0x07fe50f9:  mov    $0xf479b,%eax
0x07fe50fe:  call   0x7fe262c

----------------
IN: 
0x07fdf7f5:  mov    %ebx,%eax
0x07fdf7f7:  pop    %ebx
0x07fdf7f8:  pop    %esi
0x07fdf7f9:  pop    %edi
0x07fdf7fa:  pop    %ebp
0x07fdf7fb:  ret    

----------------
IN: 
0x07fe264e:  call   0x7fe0cdb

----------------
IN: 
0x07fe0cdb:  push   %edi
0x07fe0cdc:  push   %esi
0x07fe0cdd:  push   %ebx
0x07fe0cde:  mov    %eax,%esi
0x07fe0ce0:  mov    0x84(%eax),%edi
0x07fe0ce6:  mov    %edi,%eax
0x07fe0ce8:  call   0x7fdf72e

----------------
IN: 
0x07fe0ced:  mov    %eax,%ebx
0x07fe0cef:  test   %eax,%eax
0x07fe0cf1:  jne    0x7fe0d06

----------------
IN: 
0x07fe0d06:  mov    %edi,%ecx
0x07fe0d08:  mov    %eax,%edx
0x07fe0d0a:  mov    %esi,%eax
0x07fe0d0c:  call   *0x88(%esi)

----------------
IN: 
0x07fe0d12:  test   %eax,%eax
0x07fe0d14:  setg   %al
0x07fe0d17:  movzbl %al,%eax
0x07fe0d1a:  neg    %eax
0x07fe0d1c:  and    %ebx,%eax
0x07fe0d1e:  pop    %ebx
0x07fe0d1f:  pop    %esi
0x07fe0d20:  pop    %edi
0x07fe0d21:  ret    

----------------
IN: 
0x07fe2653:  test   %eax,%eax
0x07fe2655:  je     0x7fe263e

----------------
IN: 
0x07fe2657:  xor    %ebp,%ebp
0x07fe2659:  test   %esi,%esi
0x07fe265b:  je     0x7fe266d

----------------
IN: 
0x07fe265d:  lea    -0xc0000(%eax),%edx
0x07fe2663:  shr    $0xb,%edx
0x07fe2666:  mov    %ebx,(%esi,%edx,8)
0x07fe2669:  mov    %ebp,0x4(%esi,%edx,8)
0x07fe266d:  mov    0x4(%esp),%ecx
0x07fe2671:  xor    %edx,%edx
0x07fe2673:  call   0x7fe2577

----------------
IN: 
0x07fe2678:  jmp    0x7fe263e

----------------
IN: 
0x07fe263e:  mov    %ebx,%edx
0x07fe2640:  mov    (%esp),%eax
0x07fe2643:  call   0x7fdf7be

----------------
IN: 
0x07fdf7d7:  mov    (%edi),%ebx
0x07fdf7d9:  jmp    0x7fdf7ed

----------------
IN: 
0x07fe5103:  xor    %eax,%eax
0x07fe5105:  call   0x7fdf72e

----------------
IN: 
0x07fe510a:  cmp    0x7fefe87,%ebx
0x07fe5110:  jae    0x7fe5297

----------------
IN: 
0x07fe5116:  cmpw   $0xaa55,(%ebx)
0x07fe511b:  je     0x7fe512c

----------------
IN: 
0x07fe512c:  mov    %ebx,%eax
0x07fe512e:  call   0xf1e44

----------------
IN: 
0x07fe5133:  test   %eax,%eax
0x07fe5135:  je     0x7fe511d

----------------
IN: 
0x07fe5137:  movzbl 0x2(%ebx),%eax
0x07fe513b:  shl    $0x9,%eax
0x07fe513e:  add    $0x7ff,%eax
0x07fe5143:  and    $0xfffff800,%eax
0x07fe5148:  add    %ebx,%eax
0x07fe514a:  mov    %eax,0x14(%esp)
0x07fe514e:  movzwl 0x1a(%ebx),%esi
0x07fe5152:  add    %ebx,%esi
0x07fe5154:  cmpl   $0x506e5024,(%esi)
0x07fe515a:  jne    0x7fe5160

----------------
IN: 
0x07fe515c:  test   %esi,%esi
0x07fe515e:  jne    0x7fe519c

----------------
IN: 
0x07fe519c:  mov    %ebx,%eax
0x07fe519e:  shr    $0x4,%eax
0x07fe51a1:  movzwl %ax,%eax
0x07fe51a4:  mov    %eax,%edi
0x07fe51a6:  shl    $0x4,%edi
0x07fe51a9:  mov    %edi,0xc(%esp)
0x07fe51ad:  movl   $0x1,0x10(%esp)
0x07fe51b5:  shl    $0x10,%eax
0x07fe51b8:  mov    %eax,0x8(%esp)
0x07fe51bc:  mov    0x10(%esp),%eax
0x07fe51c0:  lea    -0x1(%eax),%ecx
0x07fe51c3:  cmpw   $0x0,0x1a(%esi)
0x07fe51c8:  je     0x7fe521f

----------------
IN: 
0x07fe51ca:  mov    %ebx,%edx
0x07fe51cc:  lea    0x18(%esp),%eax
0x07fe51d0:  call   0x7fe4ffd

----------------
IN: 
0x07fe4ffd:  push   %esi
0x07fe4ffe:  push   %ebx
0x07fe4fff:  sub    $0x110,%esp
0x07fe5005:  mov    %ecx,%esi
0x07fe5007:  sub    $0xc0000,%edx
0x07fe500d:  shr    $0xb,%edx
0x07fe5010:  mov    (%eax,%edx,8),%ecx
0x07fe5013:  mov    0x4(%eax,%edx,8),%eax
0x07fe5017:  mov    %eax,%ebx
0x07fe5019:  or     %ecx,%ebx
0x07fe501b:  je     0x7fe5086

----------------
IN: 
0x07fe501d:  test   $0x2,%al
0x07fe501f:  lea    0x10(%esp),%ebx
0x07fe5023:  je     0x7fe5037

----------------
IN: 
0x07fe5025:  mov    $0xf475a,%edx
0x07fe502a:  mov    %ebx,%eax
0x07fe502c:  call   0x7fe4e94

----------------
IN: 
0x07fe5031:  test   %esi,%esi
0x07fe5033:  je     0x7fe507d

----------------
IN: 
0x07fe507d:  mov    %ebx,%eax
0x07fe507f:  call   0x7fe2682

----------------
IN: 
0x07fe5084:  jmp    0x7fe5089

----------------
IN: 
0x07fe5089:  add    $0x110,%esp
0x07fe508f:  pop    %ebx
0x07fe5090:  pop    %esi
0x07fe5091:  ret    

----------------
IN: 
0x07fe51d5:  mov    0x10(%esi),%dx
0x07fe51d9:  movzwl 0x1a(%esi),%ecx
0x07fe51dd:  mov    $0xf476b,%edi
0x07fe51e2:  test   %dx,%dx
0x07fe51e5:  je     0x7fe51ee

----------------
IN: 
0x07fe51e7:  movzwl %dx,%edi
0x07fe51ea:  add    0xc(%esp),%edi
0x07fe51ee:  or     0x8(%esp),%ecx
0x07fe51f2:  mov    0x7fefe6f,%edx
0x07fe51f8:  mov    %edx,0x4(%esp)
0x07fe51fc:  mov    %eax,%edx
0x07fe51fe:  test   %eax,%eax
0x07fe5200:  jns    0x7fe5206

----------------
IN: 
0x07fe5202:  mov    0x4(%esp),%edx
0x07fe5206:  mov    %edi,(%esp)
0x07fe5209:  mov    $0x80,%eax
0x07fe520e:  call   0x7fe0d22

----------------
IN: 
0x07fe5213:  movl   $0x270f,0x7fefe6f
0x07fe521d:  jmp    0x7fe526f

----------------
IN: 
0x07fe526f:  movzwl 0x6(%esi),%esi
0x07fe5273:  test   %si,%si
0x07fe5276:  je     0x7fe528e

----------------
IN: 
0x07fe528e:  mov    0x14(%esp),%ebx
0x07fe5292:  jmp    0x7fe510a

----------------
IN: 
0x07fe5160:  xor    %ecx,%ecx
0x07fe5162:  mov    %ebx,%edx
0x07fe5164:  lea    0x18(%esp),%eax
0x07fe5168:  call   0x7fe4ffd

----------------
IN: 
0x07fe5037:  add    $0x4,%ecx
0x07fe503a:  mov    %ecx,0xc(%esp)
0x07fe503e:  movl   $0xf4763,0x8(%esp)
0x07fe5046:  movl   $0x100,0x4(%esp)
0x07fe504e:  mov    %ebx,(%esp)
0x07fe5051:  call   0x7fe46d2

----------------
IN: 
0x07fe5056:  test   %esi,%esi
0x07fe5058:  je     0x7fe507d

----------------
IN: 
0x07fe516d:  shr    $0x4,%ebx
0x07fe5170:  mov    %ebx,%ecx
0x07fe5172:  shl    $0x10,%ecx
0x07fe5175:  or     $0x3,%ecx
0x07fe5178:  mov    0x7fefe73,%ebx
0x07fe517e:  mov    %eax,%edx
0x07fe5180:  test   %eax,%eax
0x07fe5182:  jns    0x7fe5186

----------------
IN: 
0x07fe5184:  mov    %ebx,%edx
0x07fe5186:  movl   $0xf4773,(%esp)
0x07fe518d:  mov    $0x81,%eax
0x07fe5192:  call   0x7fe0d22

----------------
IN: 
0x07fe0d8e:  cmp    -0x10(%ebx),%esi
0x07fe0d91:  jl     0x7fe0d77

----------------
IN: 
0x07fe0d93:  jg     0x7fe0dae

----------------
IN: 
0x07fe5197:  jmp    0x7fe528e

----------------
IN: 
0x07fe5297:  lea    -0xc(%ebp),%esp
0x07fe529a:  pop    %ebx
0x07fe529b:  pop    %esi
0x07fe529c:  pop    %edi
0x07fe529d:  pop    %ebp
0x07fe529e:  ret    

----------------
IN: 
0x07febc91:  mov    $0x1,%edx
0x07febc96:  xor    %ecx,%ecx
0x07febc98:  mov    $0xf572a,%eax
0x07febc9d:  call   0x7fe081e

----------------
IN: 
0x07febca2:  or     %eax,%edx
0x07febca4:  je     0x7fed4f9

----------------
IN: 
0x07fed4f9:  call   0x7fe0930

----------------
IN: 
0x07fed4fe:  mov    $0xf59f8,%eax
0x07fed503:  call   0x7fe2682

----------------
IN: 
0x07fed508:  test   %eax,%eax
0x07fed50a:  js     0x7fed521

----------------
IN: 
0x07fed521:  mov    0x7fefe6b,%eax
0x07fed526:  lea    -0x10(%eax),%ebp
0x07fed529:  cmp    $0xfffffff0,%ebp
0x07fed52c:  je     0x7fed912

----------------
IN: 
0x07fed532:  mov    0x0(%ebp),%eax
0x07fed535:  cmp    $0x2,%eax
0x07fed538:  je     0x7fed5c5

----------------
IN: 
0x07fed5c5:  mov    0x4(%ebp),%ebx
0x07fed5c8:  movzbl 0x475,%eax
0x07fed5cf:  mov    %eax,0x3c(%esp)
0x07fed5d3:  mov    %ebx,%ecx
0x07fed5d5:  mov    $0x475,%edx
0x07fed5da:  mov    $0xf65c0,%eax
0x07fed5df:  call   0x7fe0b3f

----------------
IN: 
0x07fe0b3f:  push   %ebx
0x07fe0b40:  movzbl (%edx),%ebx
0x07fe0b43:  cmp    $0xf,%bl
0x07fe0b46:  jbe    0x7fe0b58

----------------
IN: 
0x07fe0b58:  mov    %ecx,(%eax,%ebx,4)
0x07fe0b5b:  incb   (%edx)
0x07fe0b5d:  pop    %ebx
0x07fe0b5e:  ret    

----------------
IN: 
0x07fed5e4:  cmpb   $0x2,(%ebx)
0x07fed5e7:  jne    0x7fed60d

----------------
IN: 
0x07fed5e9:  mov    0x14(%ebx),%ecx
0x07fed5ec:  mov    %cl,%al
0x07fed5ee:  shr    $0x2,%al
0x07fed5f1:  add    $0x39,%eax
0x07fed5f4:  or     $0xffffff80,%eax
0x07fed5f7:  out    %al,$0x70
0x07fed5f9:  in     $0x71,%al
0x07fed5fb:  movzbl %al,%eax
0x07fed5fe:  and    $0x3,%ecx
0x07fed601:  add    %ecx,%ecx
0x07fed603:  sar    %cl,%eax
0x07fed605:  and    $0x3,%eax
0x07fed608:  jmp    0x7fed69f

----------------
IN: 
0x07fed69f:  mov    %al,0x19(%ebx)
0x07fed6a2:  mov    0x1c(%ebx),%edi
0x07fed6a5:  mov    %di,0x30(%esp)
0x07fed6aa:  movzwl 0x1e(%ebx),%ecx
0x07fed6ae:  mov    0x20(%ebx),%edi
0x07fed6b1:  mov    %di,0x34(%esp)
0x07fed6b6:  mov    0xc(%ebx),%edi
0x07fed6b9:  mov    %edi,0x40(%esp)
0x07fed6bd:  mov    0x10(%ebx),%edx
0x07fed6c0:  cmp    $0x2,%al
0x07fed6c2:  je     0x7fed770

----------------
IN: 
0x07fed6c8:  cmp    $0x3,%al
0x07fed6ca:  je     0x7fed742

----------------
IN: 
0x07fed6cc:  dec    %al
0x07fed6ce:  jne    0x7fed7a3

----------------
IN: 
0x07fed7a3:  mov    0x34(%esp),%eax
0x07fed7a7:  mov    %ax,0x28(%esp)
0x07fed7ac:  mov    %ecx,%edi
0x07fed7ae:  mov    0x30(%esp),%esi
0x07fed7b2:  mov    $0xf56e2,%eax
0x07fed7b7:  cmp    $0x400,%di
0x07fed7bc:  jbe    0x7fed7c3

----------------
IN: 
0x07fed7c3:  mov    0x40(%esp),%edx
0x07fed7c7:  mov    %edx,0x24(%esp)
0x07fed7cb:  movzwl 0x28(%esp),%edx
0x07fed7d0:  mov    %edx,0x20(%esp)
0x07fed7d4:  movzwl %si,%edx
0x07fed7d7:  mov    %edx,0x1c(%esp)
0x07fed7db:  movzwl %di,%edx
0x07fed7de:  mov    %edx,0x18(%esp)
0x07fed7e2:  mov    %eax,0x14(%esp)
0x07fed7e6:  movzwl 0x34(%esp),%eax
0x07fed7eb:  mov    %eax,0x10(%esp)
0x07fed7ef:  movzwl 0x30(%esp),%eax
0x07fed7f4:  mov    %eax,0xc(%esp)
0x07fed7f8:  mov    %ecx,0x8(%esp)
0x07fed7fc:  mov    %ebx,0x4(%esp)
0x07fed800:  movl   $0xf59fd,(%esp)
0x07fed807:  call   0xf1787

----------------
IN: 
0x07fed80c:  mov    %si,0x2(%ebx)
0x07fed810:  mov    %di,0x4(%ebx)
0x07fed814:  mov    0x28(%esp),%eax
0x07fed818:  mov    %ax,0x6(%ebx)
0x07fed81c:  cmpl   $0x1,0x3c(%esp)
0x07fed821:  jg     0x7fed8e4

----------------
IN: 
0x07fed827:  mov    0x1e(%ebx),%dx
0x07fed82b:  mov    0x1c(%ebx),%eax
0x07fed82e:  mov    %ax,0x30(%esp)
0x07fed833:  mov    0x20(%ebx),%ebx
0x07fed836:  mov    %bx,0x34(%esp)
0x07fed83b:  movzwl 0x40e,%eax
0x07fed842:  mov    0x3c(%esp),%ebx
0x07fed846:  lea    0x3(%ebx,%eax,1),%ecx
0x07fed84a:  shl    $0x4,%ecx
0x07fed84d:  lea    0xd(%ecx),%ebx
0x07fed850:  movw   $0xffff,0x5(%ebx)
0x07fed856:  cmpw   $0x9,0x30(%esp)
0x07fed85c:  sbb    %eax,%eax
0x07fed85e:  and    $0xfffffff8,%eax
0x07fed861:  sub    $0x38,%eax
0x07fed864:  mov    %al,0x8(%ebx)
0x07fed867:  mov    %dx,0xc(%ebx)
0x07fed86b:  mov    %di,0xd(%ecx)
0x07fed86f:  mov    %esi,%eax
0x07fed871:  mov    %al,0x2(%ebx)
0x07fed874:  mov    0x28(%esp),%al
0x07fed878:  mov    %al,0xe(%ebx)
0x07fed87b:  cmp    %dx,%di
0x07fed87e:  jne    0x7fed892

----------------
IN: 
0x07fed880:  cmp    0x30(%esp),%si
0x07fed885:  jne    0x7fed892

----------------
IN: 
0x07fed887:  mov    0x34(%esp),%eax
0x07fed88b:  cmp    %ax,0x28(%esp)
0x07fed890:  je     0x7fed8b7

----------------
IN: 
0x07fed8b7:  cmpl   $0x0,0x3c(%esp)
0x07fed8bc:  mov    0x40e,%ax
0x07fed8c2:  jne    0x7fed8d5

----------------
IN: 
0x07fed8c4:  movw   $0x3d,0x104
0x07fed8cd:  mov    %ax,0x106
0x07fed8d3:  jmp    0x7fed8e4

----------------
IN: 
0x07fed8e4:  xor    %edx,%edx
0x07fed8e6:  mov    $0x2,%eax
0x07fed8eb:  jmp    0x7fed905

----------------
IN: 
0x07fed905:  call   0x7fdf7fc

----------------
IN: 
0x07fdf7fc:  push   %ebx
0x07fdf7fd:  cmp    $0x2,%eax
0x07fdf800:  jne    0x7fdf839

----------------
IN: 
0x07fdf802:  mov    0x7feff2b,%ecx
0x07fdf808:  lea    0x1(%ecx),%ebx
0x07fdf80b:  mov    %ebx,0x7feff2b
0x07fdf811:  test   %ecx,%ecx
0x07fdf813:  jne    0x7fdf84f

----------------
IN: 
0x07fdf815:  mov    0xf5f10,%ecx
0x07fdf81b:  cmp    $0x13,%ecx
0x07fdf81e:  ja     0x7fdf84f

----------------
IN: 
0x07fdf820:  lea    0x1(%ecx),%ebx
0x07fdf823:  mov    %ebx,0xf5f10
0x07fdf829:  mov    %eax,0xf5f14(,%ecx,8)
0x07fdf830:  mov    %edx,0xf5f18(,%ecx,8)
0x07fdf837:  jmp    0x7fdf84f

----------------
IN: 
0x07fdf84f:  pop    %ebx
0x07fdf850:  ret    

----------------
IN: 
0x07fed90a:  mov    0x10(%ebp),%eax
0x07fed90d:  jmp    0x7fed526

----------------
IN: 
0x07fed526:  lea    -0x10(%eax),%ebp
0x07fed529:  cmp    $0xfffffff0,%ebp
0x07fed52c:  je     0x7fed912

----------------
IN: 
0x07fed53e:  jg     0x7fed548

----------------
IN: 
0x07fed548:  cmp    $0x3,%eax
0x07fed54b:  je     0x7fed8ed

----------------
IN: 
0x07fed551:  cmp    $0x81,%eax
0x07fed556:  jne    0x7fed8ff

----------------
IN: 
0x07fed55c:  movzwl 0x4(%ebp),%edx
0x07fed560:  movzwl 0x6(%ebp),%eax
0x07fed564:  shl    $0x4,%eax
0x07fed567:  xor    %ecx,%ecx
0x07fed569:  call   0xf1dc1

----------------
IN: 
0x000ca003:  push   %es
0x000ca004:  push   %cs
0x000ca005:  pop    %es
0x000ca006:  xor    %ax,%ax
0x000ca008:  mov    $0x1000,%cx
0x000ca00b:  lea    0x300,%di
0x000ca00f:  cld    
0x000ca010:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000ca010:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000ca012:  pop    %es
0x000ca013:  mov    $0x20,%ax
0x000ca016:  out    %ax,$0x7e
0x000ca018:  lret   

----------------
IN: 
0x07fed56e:  jmp    0x7fed8e4

----------------
IN: 
0x07fed540:  dec    %eax
0x07fed541:  je     0x7fed573

----------------
IN: 
0x07fed573:  mov    0x4(%ebp),%ecx
0x07fed576:  mov    $0xf6640,%edx
0x07fed57b:  mov    $0xf6580,%eax
0x07fed580:  call   0x7fe0b3f

----------------
IN: 
0x07fed585:  cmpb   $0x1,0xf6640
0x07fed58c:  jne    0x7fed5a8

----------------
IN: 
0x07fed58e:  mov    0x410,%eax
0x07fed593:  and    $0xffffffbe,%eax
0x07fed596:  or     $0x1,%eax
0x07fed599:  mov    %ax,0x410
0x07fed59f:  movb   $0x7,0x48f
0x07fed5a6:  jmp    0x7fed5b9

----------------
IN: 
0x07fed5b9:  xor    %edx,%edx
0x07fed5bb:  mov    $0x1,%eax
0x07fed5c0:  jmp    0x7fed905

----------------
IN: 
0x07fdf839:  cmp    $0x1,%eax
0x07fdf83c:  jne    0x7fdf815

----------------
IN: 
0x07fdf83e:  mov    0x7feff27,%ecx
0x07fdf844:  lea    0x1(%ecx),%ebx
0x07fdf847:  mov    %ebx,0x7feff27
0x07fdf84d:  jmp    0x7fdf811

----------------
IN: 
0x07fdf811:  test   %ecx,%ecx
0x07fdf813:  jne    0x7fdf84f

----------------
IN: 
0x07fed8ed:  mov    0x4(%ebp),%ecx
0x07fed8f0:  mov    $0x7feff3b,%edx
0x07fed8f5:  mov    $0xf6600,%eax
0x07fed8fa:  call   0x7fe0b3f

----------------
IN: 
0x07fed8ff:  mov    0x4(%ebp),%edx
0x07fed902:  mov    0x0(%ebp),%eax
0x07fed905:  call   0x7fdf7fc

----------------
IN: 
0x07fed912:  xor    %edx,%edx
0x07fed914:  mov    $0x1,%eax
0x07fed919:  call   0x7fdf7fc

----------------
IN: 
0x07fed91e:  xor    %edx,%edx
0x07fed920:  mov    $0x2,%eax
0x07fed925:  call   0x7fdf7fc

----------------
IN: 
0x07fed92a:  cmpb   $0x0,0x7feff3b
0x07fed931:  je     0x7fed98c

----------------
IN: 
0x07fed933:  call   0x7fe0b0b

----------------
IN: 
0x07fe0b0b:  push   %ebx
0x07fe0b0c:  xor    %ebx,%ebx
0x07fe0b0e:  cmpl   $0x0,0xf657c
0x07fe0b15:  jne    0x7fe0b3b

----------------
IN: 
0x07fe0b17:  mov    $0x800,%eax
0x07fe0b1c:  call   0x7fdf63e

----------------
IN: 
0x07fdf63e:  push   %edx
0x07fdf63f:  movl   $0x10,(%esp)
0x07fdf646:  mov    %eax,%ecx
0x07fdf648:  or     $0xffffffff,%edx
0x07fdf64b:  mov    $0x7fefeaf,%eax
0x07fdf650:  call   0x7fdf52c

----------------
IN: 
0x07fdf655:  pop    %ecx
0x07fdf656:  ret    

----------------
IN: 
0x07fe0b21:  test   %eax,%eax
0x07fe0b23:  jne    0x7fe0b36

----------------
IN: 
0x07fe0b36:  mov    %eax,0xf657c
0x07fe0b3b:  mov    %ebx,%eax
0x07fe0b3d:  pop    %ebx
0x07fe0b3e:  ret    

----------------
IN: 
0x07fed938:  test   %eax,%eax
0x07fed93a:  js     0x7fed98c

----------------
IN: 
0x07fed93c:  mov    $0x24,%eax
0x07fed941:  call   0x7fdf657

----------------
IN: 
0x07fed946:  mov    %eax,%ebx
0x07fed948:  test   %eax,%eax
0x07fed94a:  jne    0x7fed964

----------------
IN: 
0x07fed964:  mov    %eax,0xf6578
0x07fed969:  mov    $0x24,%ecx
0x07fed96e:  xor    %edx,%edx
0x07fed970:  call   0xf0d7a

----------------
IN: 
0x07fed975:  movb   $0x5,(%ebx)
0x07fed978:  movw   $0x200,0x1a(%ebx)
0x07fed97e:  movl   $0xffffffff,0xc(%ebx)
0x07fed985:  movl   $0xffffffff,0x10(%ebx)
0x07fed98c:  movl   $0x0,0xf6060
0x07fed996:  movl   $0x0,0xf6067
0x07fed9a0:  call   0xf0f64

----------------
IN: 
0x07fed9a5:  mov    %eax,%ebx
0x07fed9a7:  mov    0x7fefe87,%eax
0x07fed9ac:  mov    %ebx,%ecx
0x07fed9ae:  sub    %eax,%ecx
0x07fed9b0:  xor    %edx,%edx
0x07fed9b2:  call   0xf0d7a

----------------
IN: 
0x07fed9b7:  movw   $0xaa55,(%ebx)
0x07fed9bc:  mov    $0xf0000,%edx
0x07fed9c1:  sub    %ebx,%edx
0x07fed9c3:  shr    $0x9,%edx
0x07fed9c6:  cmp    $0xff,%edx
0x07fed9cc:  jle    0x7fed9d3

----------------
IN: 
0x07fed9d3:  mov    %dl,0x2(%ebx)
0x07fed9d6:  movzwl 0x413,%ecx
0x07fed9dd:  shl    $0xa,%ecx
0x07fed9e0:  mov    %ecx,%eax
0x07fed9e2:  cltd   
0x07fed9e3:  movl   $0x2,0x8(%esp)
0x07fed9eb:  mov    $0xa0000,%esi
0x07fed9f0:  sub    %ecx,%esi
0x07fed9f2:  mov    %esi,(%esp)
0x07fed9f5:  movl   $0x0,0x4(%esp)
0x07fed9fd:  call   0x7fe11b8

----------------
IN: 
0x07fe1131:  add    0x8(%ecx),%eax
0x07fe1134:  adc    0xc(%ecx),%edx
0x07fe1137:  cmp    %edx,0x10(%esp)
0x07fe113b:  jb     0x7fe114e

----------------
IN: 
0x07fe113d:  ja     0x7fe1145

----------------
IN: 
0x07fe113f:  cmp    %eax,0xc(%esp)
0x07fe1143:  jb     0x7fe114e

----------------
IN: 
0x07fe1145:  mov    %esi,%eax
0x07fe1147:  call   0x7fdfe1c

----------------
IN: 
0x07fdfe1c:  mov    0xf6074,%edx
0x07fdfe22:  lea    -0x1(%edx),%ecx
0x07fdfe25:  mov    %ecx,0xf6074
0x07fdfe2b:  sub    %eax,%ecx
0x07fdfe2d:  imul   $0x14,%ecx,%ecx
0x07fdfe30:  lea    0x1(%eax),%edx
0x07fdfe33:  imul   $0x14,%edx,%edx
0x07fdfe36:  add    $0xf6078,%edx
0x07fdfe3c:  imul   $0x14,%eax,%eax
0x07fdfe3f:  add    $0xf6078,%eax
0x07fdfe44:  jmp    0x7fdfddf

----------------
IN: 
0x07fdfde7:  mov    %eax,%edi
0x07fdfde9:  mov    %edx,%esi
0x07fdfdeb:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fdfdeb:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fdfded:  jmp    0x7fdfe17

----------------
IN: 
0x07fdfe17:  pop    %ebx
0x07fdfe18:  pop    %esi
0x07fdfe19:  pop    %edi
0x07fdfe1a:  pop    %ebp
0x07fdfe1b:  ret    

----------------
IN: 
0x07fe114c:  jmp    0x7fe1109

----------------
IN: 
0x07fe1109:  cmp    0xf6074,%esi
0x07fe110f:  jge    0x7fe117d

----------------
IN: 
0x07feda02:  mov    0x7fefea7,%esi
0x07feda08:  xor    %edi,%edi
0x07feda0a:  test   %esi,%esi
0x07feda0c:  je     0x7feda14

----------------
IN: 
0x07feda0e:  mov    %esi,%edi
0x07feda10:  mov    (%esi),%esi
0x07feda12:  jmp    0x7feda0a

----------------
IN: 
0x07feda0a:  test   %esi,%esi
0x07feda0c:  je     0x7feda14

----------------
IN: 
0x07feda14:  mov    0xc(%edi),%eax
0x07feda17:  mov    0x10(%edi),%ecx
0x07feda1a:  sub    %eax,%ecx
0x07feda1c:  xor    %edx,%edx
0x07feda1e:  call   0xf0d7a

----------------
IN: 
0x07feda23:  mov    0x10(%edi),%eax
0x07feda26:  mov    %eax,0x10(%esp)
0x07feda2a:  mov    0xc(%edi),%eax
0x07feda2d:  mov    %eax,0xc(%esp)
0x07feda31:  mov    %ebx,0x8(%esp)
0x07feda35:  mov    0x7fefe87,%eax
0x07feda3a:  mov    %eax,0x4(%esp)
0x07feda3e:  movl   $0xf5a38,(%esp)
0x07feda45:  call   0xf1787

----------------
IN: 
0x07feda4a:  mov    0x7fefeab,%eax
0x07feda4f:  test   %eax,%eax
0x07feda51:  je     0x7feda59

----------------
IN: 
0x07feda53:  mov    %eax,%esi
0x07feda55:  mov    (%eax),%eax
0x07feda57:  jmp    0x7feda4f

----------------
IN: 
0x07feda4f:  test   %eax,%eax
0x07feda51:  je     0x7feda59

----------------
IN: 
0x07feda59:  test   %esi,%esi
0x07feda5b:  je     0x7feda99

----------------
IN: 
0x07feda5d:  mov    0xc(%esi),%ecx
0x07feda60:  xor    %ebx,%ebx
0x07feda62:  mov    0x10(%esi),%esi
0x07feda65:  sub    %ecx,%esi
0x07feda67:  and    $0xfffff000,%esi
0x07feda6d:  mov    %ecx,%eax
0x07feda6f:  mov    %ebx,%edx
0x07feda71:  movl   $0x1,0x8(%esp)
0x07feda79:  mov    %esi,(%esp)
0x07feda7c:  movl   $0x0,0x4(%esp)
0x07feda84:  call   0x7fe11b8

----------------
IN: 
0x07fe1069:  inc    %esi
0x07fe106a:  jmp    0x7fe1031

----------------
IN: 
0x07fe1031:  cmp    %edx,%esi
0x07fe1033:  jge    0x7fe1106

----------------
IN: 
0x07fe1091:  mov    0xc(%esp),%edi
0x07fe1095:  mov    0x10(%esp),%ebp
0x07fe1099:  sub    %ecx,%edi
0x07fe109b:  sbb    %ebx,%ebp
0x07fe109d:  mov    %edi,0x24(%esp)
0x07fe10a1:  mov    %ebp,0x28(%esp)
0x07fe10a5:  mov    %ecx,0x14(%esp)
0x07fe10a9:  mov    %ebx,0x18(%esp)
0x07fe10ad:  jmp    0x7fe1106

----------------
IN: 
0x07fe114e:  mov    0xc(%esp),%edi
0x07fe1152:  mov    0x10(%esp),%ebp
0x07fe1156:  mov    %edi,(%ecx)
0x07fe1158:  mov    %ebp,0x4(%ecx)
0x07fe115b:  sub    %edi,%eax
0x07fe115d:  sbb    %ebp,%edx
0x07fe115f:  mov    %eax,0x8(%ecx)
0x07fe1162:  mov    %edx,0xc(%ecx)
0x07fe1165:  mov    0x2c(%esp),%ebx
0x07fe1169:  cmp    0x10(%ecx),%ebx
0x07fe116c:  jne    0x7fe117d

----------------
IN: 
0x07feda89:  mov    %esi,0x4(%esp)
0x07feda8d:  movl   $0xf5a5f,(%esp)
0x07feda94:  call   0xf1787

----------------
IN: 
0x07feda99:  call   0x7fdf770

----------------
IN: 
0x07feda9e:  mov    0xf6074,%eax
0x07fedaa3:  mov    %eax,0x4(%esp)
0x07fedaa7:  movl   $0xf5a7e,(%esp)
0x07fedaae:  call   0xf1787

----------------
IN: 
0x07fedab3:  mov    $0xf6078,%esi
0x07fedab8:  xor    %edi,%edi
0x07fedaba:  cmp    0xf6074,%edi
0x07fedac0:  jge    0x7fedb5d

----------------
IN: 
0x07fedac6:  mov    (%esi),%eax
0x07fedac8:  mov    0x4(%esi),%edx
0x07fedacb:  mov    %eax,%ecx
0x07fedacd:  mov    %edx,%ebx
0x07fedacf:  add    0x8(%esi),%ecx
0x07fedad2:  adc    0xc(%esi),%ebx
0x07fedad5:  mov    %ecx,0x28(%esp)
0x07fedad9:  mov    %ebx,0x2c(%esp)
0x07fedadd:  mov    0x10(%esi),%ebx
0x07fedae0:  cmp    $0x3,%ebx
0x07fedae3:  je     0x7fedb18

----------------
IN: 
0x07fedae5:  ja     0x7fedafb

----------------
IN: 
0x07fedae7:  mov    $0xf56eb,%ecx
0x07fedaec:  cmp    $0x1,%ebx
0x07fedaef:  je     0x7fedb24

----------------
IN: 
0x07fedb24:  mov    %ecx,0x1c(%esp)
0x07fedb28:  mov    %ebx,0x18(%esp)
0x07fedb2c:  mov    0x28(%esp),%ecx
0x07fedb30:  mov    0x2c(%esp),%ebx
0x07fedb34:  mov    %ecx,0x10(%esp)
0x07fedb38:  mov    %ebx,0x14(%esp)
0x07fedb3c:  mov    %eax,0x8(%esp)
0x07fedb40:  mov    %edx,0xc(%esp)
0x07fedb44:  mov    %edi,0x4(%esp)
0x07fedb48:  movl   $0xf5a96,(%esp)
0x07fedb4f:  call   0xf1787

----------------
IN: 
0x07fedb54:  inc    %edi
0x07fedb55:  add    $0x14,%esi
0x07fedb58:  jmp    0x7fedaba

----------------
IN: 
0x07fedaba:  cmp    0xf6074,%edi
0x07fedac0:  jge    0x7fedb5d

----------------
IN: 
0x07fedaf1:  mov    $0xf56ef,%ecx
0x07fedaf6:  cmp    $0x2,%ebx
0x07fedaf9:  jmp    0x7fedb0f

----------------
IN: 
0x07fedb0f:  je     0x7fedb24

----------------
IN: 
0x000f1586:  sub    $0x8,%ecx
0x000f1589:  mov    %eax,(%esp)
0x000f158c:  mov    0x4(%esp),%esi
0x000f1590:  mov    %esi,%eax
0x000f1592:  call   0xf0d13

----------------
IN: 
0x07fedb5d:  mov    0xfffff,%bl
0x07fedb63:  mov    $0x10000,%edx
0x07fedb68:  mov    $0xf0000,%eax
0x07fedb6d:  call   0xf10c1

----------------
IN: 
0x07fedb72:  sub    %eax,%ebx
0x07fedb74:  mov    %bl,0xfffff
0x07fedb7a:  call   0xf1ef3

----------------
IN: 
0x000f1ef3:  testb  $0x2,0xf6058
0x000f1efa:  jne    0xf1f44

----------------
IN: 
0x000f1efc:  mov    0xf5ecc,%ecx
0x000f1f02:  test   %ecx,%ecx
0x000f1f04:  jns    0xf1f16

----------------
IN: 
0x000f1f16:  movzwl %cx,%ecx
0x000f1f19:  mov    %ecx,%eax
0x000f1f1b:  shl    $0x8,%eax
0x000f1f1e:  or     $0x80000000,%eax
0x000f1f23:  mov    $0xcf8,%edx
0x000f1f28:  out    %eax,(%dx)
0x000f1f29:  mov    $0xfe,%dl
0x000f1f2b:  in     (%dx),%ax
0x000f1f2d:  mov    $0x59,%edx
0x000f1f32:  cmp    $0x1237,%ax
0x000f1f36:  je     0xf1f3d

----------------
IN: 
0x000f1f3d:  mov    %ecx,%eax
0x000f1f3f:  jmp    0xf0f99

----------------
IN: 
0x000f0f99:  push   %ebp
0x000f0f9a:  push   %edi
0x000f0f9b:  push   %esi
0x000f0f9c:  push   %ebx
0x000f0f9d:  push   %esi
0x000f0f9e:  mov    %eax,%esi
0x000f0fa0:  mov    %edx,%edi
0x000f0fa2:  movzwl %ax,%ebp
0x000f0fa5:  wbinvd 
0x000f0fa7:  call   0xf0f64

----------------
IN: 
0x000f0fac:  mov    %eax,(%esp)
0x000f0faf:  mov    $0x1,%ebx
0x000f0fb4:  lea    0x17(%ebx),%eax
0x000f0fb7:  shl    $0xf,%eax
0x000f0fba:  lea    (%ebx,%edi,1),%edx
0x000f0fbd:  lea    0x8000(%eax),%ecx
0x000f0fc3:  cmp    %ecx,(%esp)
0x000f0fc6:  jae    0xf0fe1

----------------
IN: 
0x000f0fe1:  mov    $0x11,%ecx
0x000f0fe6:  mov    %ebp,%eax
0x000f0fe8:  call   0xf0e04

----------------
IN: 
0x000f0fed:  inc    %ebx
0x000f0fee:  cmp    $0x7,%ebx
0x000f0ff1:  jne    0xf0fb4

----------------
IN: 
0x000f0fb4:  lea    0x17(%ebx),%eax
0x000f0fb7:  shl    $0xf,%eax
0x000f0fba:  lea    (%ebx,%edi,1),%edx
0x000f0fbd:  lea    0x8000(%eax),%ecx
0x000f0fc3:  cmp    %ecx,(%esp)
0x000f0fc6:  jae    0xf0fe1

----------------
IN: 
0x000f0fc8:  add    $0x4000,%eax
0x000f0fcd:  cmp    %eax,(%esp)
0x000f0fd0:  jb     0xf0ff3

----------------
IN: 
0x000f0fd2:  movzwl %si,%eax
0x000f0fd5:  mov    $0x31,%ecx
0x000f0fda:  call   0xf0e04

----------------
IN: 
0x000f0fdf:  jmp    0xf0ff3

----------------
IN: 
0x000f0ff3:  movzwl %si,%eax
0x000f0ff6:  mov    $0x10,%ecx
0x000f0ffb:  mov    %edi,%edx
0x000f0ffd:  pop    %ebx
0x000f0ffe:  pop    %ebx
0x000f0fff:  pop    %esi
0x000f1000:  pop    %edi
0x000f1001:  pop    %ebp
0x000f1002:  jmp    0xf0e04

----------------
IN: 
0x07fedb7f:  call   0xf3bdb

----------------
IN: 
0x000f3bdb:  sub    $0x28,%esp
0x000f3bde:  mov    $0x89000,%ecx
0x000f3be3:  xor    %edx,%edx
0x000f3be5:  mov    $0x7000,%eax
0x000f3bea:  call   0xf0d7a

----------------
IN: 
0x000f3bef:  mov    $0x26,%ecx
0x000f3bf4:  xor    %edx,%edx
0x000f3bf6:  lea    0x2(%esp),%eax
0x000f3bfa:  call   0xf0d7a

----------------
IN: 
0x000f3bff:  movw   $0x200,0x26(%esp)
0x000f3c06:  movw   $0xf000,0x24(%esp)
0x000f3c0d:  mov    $0xfd2ad,%eax
0x000f3c12:  mov    %ax,0x22(%esp)
0x000f3c17:  lea    0x2(%esp),%eax
0x000f3c1b:  call   0xf16e7

Servicing hardware INT=0x08
----------------
IN: 
0x000fd2ad:  int    $0x19

----------------
IN: 
0x000fe6f2:  jmp    0xfd5f1

----------------
IN: 
0x000fd5f1:  xor    %ax,%ax
0x000fd5f3:  mov    %ax,%ss

----------------
IN: 
0x000fd5f5:  mov    $0x7000,%esp

----------------
IN: 
0x000fd5fb:  mov    $0xf3d57,%edx
0x000fd601:  jmp    0xfd124

----------------
IN: 
0x000f3d57:  sub    $0x8,%esp
0x000f3d5a:  movl   $0xf5e00,0x4(%esp)
0x000f3d62:  movl   $0xf5d2e,(%esp)
0x000f3d69:  call   0xf1787

----------------
IN: 
0x000f3d6e:  movl   $0xf5d39,(%esp)
0x000f3d75:  call   0xf1787

----------------
IN: 
0x000f3d7a:  movl   $0x0,0xef790
0x000f3d84:  xor    %eax,%eax
0x000f3d86:  add    $0x8,%esp
0x000f3d89:  jmp    0xf361f

----------------
IN: 
0x000f361f:  push   %ebx
0x000f3620:  sub    $0x30,%esp
0x000f3623:  mov    %eax,%ebx
0x000f3625:  cmp    0xf5f10,%eax
0x000f362b:  jl     0xf3632

----------------
IN: 
0x000f3632:  lea    0xf5f14(,%ebx,8),%edx
0x000f3639:  mov    0xf5f14(,%ebx,8),%eax
0x000f3640:  cmp    $0x3,%eax
0x000f3643:  je     0xf36a8

----------------
IN: 
0x000f3645:  jg     0xf366d

----------------
IN: 
0x000f3647:  cmp    $0x1,%eax
0x000f364a:  je     0xf368d

----------------
IN: 
0x000f364c:  cmp    $0x2,%eax
0x000f364f:  jne    0xf3711

----------------
IN: 
0x000f3655:  movl   $0xf54bb,(%esp)
0x000f365c:  call   0xf2364

----------------
IN: 
0x000f3661:  mov    $0x1,%edx
0x000f3666:  mov    $0x80,%eax
0x000f366b:  jmp    0xf36a1

----------------
IN: 
0x000f36a1:  call   0xf2377

----------------
IN: 
0x000f2377:  push   %esi
0x000f2378:  push   %ebx
0x000f2379:  sub    $0x2c,%esp
0x000f237c:  mov    %eax,%ebx
0x000f237e:  mov    %edx,%esi
0x000f2380:  mov    $0x26,%ecx
0x000f2385:  xor    %edx,%edx
0x000f2387:  lea    0x6(%esp),%eax
0x000f238b:  call   0xf0d7a

----------------
IN: 
0x000f2390:  movw   $0x200,0x2a(%esp)
0x000f2397:  mov    %bl,0x1a(%esp)
0x000f239b:  movw   $0x7c0,0x8(%esp)
0x000f23a2:  movb   $0x2,0x23(%esp)
0x000f23a7:  movb   $0x1,0x22(%esp)
0x000f23ac:  movb   $0x1,0x1e(%esp)
0x000f23b1:  movw   $0xf000,0x28(%esp)
0x000f23b8:  mov    $0xfd2a1,%eax
0x000f23bd:  mov    %ax,0x26(%esp)
0x000f23c2:  lea    0x6(%esp),%eax
0x000f23c6:  call   0xf16e7

----------------
IN: 
0x000fd2a1:  int    $0x13

----------------
IN: 
0x000fe3fe:  jmp    0xfd5b2

----------------
IN: 
0x000fd5b2:  pushl  $0xcf84
0x000fd5b8:  jmp    0xfd50f

----------------
IN: 
0x000fcf84:  push   %esi
0x000fcf86:  push   %ebx
0x000fcf88:  addr32 mov 0x14(%eax),%dl
0x000fcf8c:  addr32 cmpb $0x4b,0x1d(%eax)
0x000fcf91:  jne    0xfd0ca

----------------
IN: 
0x000fd0ca:  mov    $0xe000,%ecx
0x000fd0d0:  movzwl %cx,%ecx
0x000fd0d4:  mov    %cx,%es
0x000fd0d6:  mov    %es:-0x842,%bl
0x000fd0db:  test   %bl,%bl
0x000fd0dd:  je     0xfd119

----------------
IN: 
0x000fd119:  movzbl %dl,%edx
0x000fd11d:  pop    %ebx
0x000fd11f:  pop    %esi
0x000fd121:  jmp    0xfeed2

----------------
IN: 
0x000feed2:  test   %dl,%dl
0x000feed4:  js     0xfef10

----------------
IN: 
0x000fef10:  cmp    $0xdf,%dl
0x000fef13:  jbe    0xfef2e

----------------
IN: 
0x000fef2e:  add    $0xffffff80,%edx
0x000fef32:  cmp    $0xf,%dl
0x000fef35:  ja     0xfef4d

----------------
IN: 
0x000fef37:  movzbl %dl,%edx
0x000fef3b:  addr32 mov %cs:0x65c0(,%edx,4),%edx
0x000fef45:  test   %edx,%edx
0x000fef48:  je     0xfef4d

----------------
IN: 
0x000fef4a:  jmp    0xf9d18

----------------
IN: 
0x000f9d18:  push   %ebx
0x000f9d1a:  mov    %eax,%ebx
0x000f9d1d:  mov    $0x40,%ecx
0x000f9d23:  mov    %cx,%es
0x000f9d25:  xor    %eax,%eax
0x000f9d28:  mov    %al,%es:0x8e
0x000f9d2c:  addr32 mov 0x1d(%ebx),%al
0x000f9d30:  cmp    $0x14,%al
0x000f9d32:  je     0xf9e7c

----------------
IN: 
0x000f9d36:  ja     0xf9da4

----------------
IN: 
0x000f9d38:  cmp    $0x5,%al
0x000f9d3a:  je     0xf9e52

----------------
IN: 
0x000f9d3e:  ja     0xf9d6c

----------------
IN: 
0x000f9d40:  cmp    $0x2,%al
0x000f9d42:  je     0xf9e3c

----------------
IN: 
0x000f9e3c:  mov    $0x2,%ecx
0x000f9e42:  jmp    0xf9e4a

----------------
IN: 
0x000f9e4a:  mov    %ebx,%eax
0x000f9e4d:  pop    %ebx
0x000f9e4f:  jmp    0xfe2cc

----------------
IN: 
0x000fe2cc:  push   %edi
0x000fe2ce:  push   %esi
0x000fe2d0:  push   %ebx
0x000fe2d2:  sub    $0x18,%esp
0x000fe2d6:  mov    %eax,%ebx
0x000fe2d9:  addr32 mov %edx,0x10(%esp)
0x000fe2df:  addr32 mov %cl,0x16(%esp)
0x000fe2e4:  addr32 movzbl 0x1c(%eax),%ecx
0x000fe2ea:  addr32 mov 0x19(%eax),%al
0x000fe2ee:  addr32 mov %al,0x2(%esp)
0x000fe2f3:  addr32 movzbl 0x18(%ebx),%esi
0x000fe2f9:  mov    %esi,%eax
0x000fe2fc:  and    $0x3f,%eax
0x000fe300:  addr32 mov %al,0x3(%esp)
0x000fe305:  movzbl %al,%edi
0x000fe309:  addr32 mov 0x15(%ebx),%al
0x000fe30d:  addr32 mov %al,0x1(%esp)
0x000fe312:  mov    %cl,%al
0x000fe314:  dec    %al
0x000fe316:  js     0xfe31c

----------------
IN: 
0x000fe318:  test   %di,%di
0x000fe31a:  jne    0xfe325

----------------
IN: 
0x000fe325:  shl    $0x2,%esi
0x000fe329:  and    $0x300,%si
0x000fe32d:  addr32 movzbl 0x2(%esp),%eax
0x000fe334:  or     %eax,%esi
0x000fe337:  addr32 mov %cx,0x14(%esp)
0x000fe33c:  mov    %edx,%eax
0x000fe33f:  calll  0xf72f7

----------------
IN: 
0x000f72f7:  mov    %cs:0x6578,%edx
0x000f72fd:  cmp    %edx,%eax
0x000f7300:  jne    0xf7331

----------------
IN: 
0x000f7331:  push   %ebx
0x000f7333:  addr32 mov %cs:-0xefffc(%eax),%cx
0x000f733b:  addr32 mov %cs:-0xefffe(%eax),%bx
0x000f7343:  addr32 mov %cs:-0xefffa(%eax),%dx
0x000f734b:  shl    $0x10,%ecx
0x000f734f:  movzwl %bx,%eax
0x000f7353:  or     %ecx,%eax
0x000f7356:  movzwl %dx,%edx
0x000f735a:  pop    %ebx
0x000f735c:  retl   

----------------
IN: 
0x000fe345:  mov    %eax,%ecx
0x000fe348:  shr    $0x10,%ecx
0x000fe34c:  cmp    %cx,%si
0x000fe34e:  jae    0xfe35f

----------------
IN: 
0x000fe350:  addr32 movzbl 0x1(%esp),%ecx
0x000fe357:  cmp    %ax,%cx
0x000fe359:  jae    0xfe35f

----------------
IN: 
0x000fe35b:  cmp    %dx,%di
0x000fe35d:  jbe    0xfe367

----------------
IN: 
0x000fe367:  addr32 movzbl 0x3(%esp),%ecx
0x000fe36e:  movzwl %si,%esi
0x000fe372:  movzwl %ax,%eax
0x000fe376:  imul   %eax,%esi
0x000fe37a:  addr32 movzbl 0x1(%esp),%eax
0x000fe381:  add    %eax,%esi
0x000fe384:  movzwl %dx,%edx
0x000fe388:  imul   %edx,%esi
0x000fe38c:  addr32 lea -0x1(%ecx,%esi,1),%eax
0x000fe392:  addr32 mov %eax,0x4(%esp)
0x000fe398:  addr32 movl $0x0,0x8(%esp)
0x000fe3a2:  addr32 movzwl 0x2(%ebx),%eax
0x000fe3a8:  shl    $0x4,%eax
0x000fe3ac:  addr32 movzwl 0x10(%ebx),%edx
0x000fe3b2:  add    %edx,%eax
0x000fe3b5:  addr32 mov %eax,0xc(%esp)
0x000fe3bb:  addr32 lea 0x4(%esp),%eax
0x000fe3c1:  calll  0xf6eba

----------------
IN: 
0x000f6eba:  mov    %ss,%dx
0x000f6ebc:  movzwl %dx,%edx
0x000f6ec0:  mov    $0xb8ae,%ecx
0x000f6ec6:  jmp    0xfe694

----------------
IN: 
0x000fe694:  push   %edi
0x000fe696:  push   %esi
0x000fe698:  push   %ebx
0x000fe69a:  push   %ebx
0x000fe69c:  mov    %eax,%ebx
0x000fe69f:  addr32 mov %edx,(%esp)
0x000fe6a4:  mov    %ecx,%esi
0x000fe6a7:  calll  0xf6c75

----------------
IN: 
0x000fe6ad:  test   %eax,%eax
0x000fe6b0:  addr32 mov (%esp),%edx
0x000fe6b5:  mov    %ebx,%eax
0x000fe6b8:  je     0xfe6bf

----------------
IN: 
0x000fe6ba:  calll  *%esi

----------------
IN: 
0x000fb8ae:  push   %ebp
0x000fb8b0:  push   %edi
0x000fb8b2:  push   %esi
0x000fb8b4:  push   %ebx
0x000fb8b6:  sub    $0x14,%esp
0x000fb8ba:  mov    %eax,%ebp
0x000fb8bd:  mov    %edx,%ebx
0x000fb8c0:  mov    %ss,%ax
0x000fb8c2:  mov    %ax,%es
0x000fb8c4:  mov    $0x14,%ecx
0x000fb8ca:  mov    %ebp,%esi
0x000fb8cd:  mov    %esp,%edi
0x000fb8d0:  mov    %ds,%ax
0x000fb8d2:  mov    %dx,%ds
0x000fb8d4:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000fb8d4:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000fb8d6:  mov    %ax,%ds
0x000fb8d8:  mov    %esp,%eax
0x000fb8db:  calll  0xfb50f

----------------
IN: 
0x000fb50f:  push   %ebp
0x000fb511:  push   %edi
0x000fb513:  push   %esi
0x000fb515:  push   %ebx
0x000fb517:  sub    $0x8,%esp
0x000fb51b:  mov    %eax,%esi
0x000fb51e:  addr32 mov 0xc(%eax),%ebx
0x000fb523:  addr32 mov %cs:-0xf0000(%ebx),%al
0x000fb52b:  cmp    $0x6,%al
0x000fb52d:  je     0xfb826

----------------
IN: 
0x000fb531:  ja     0xfb557

----------------
IN: 
0x000fb533:  cmp    $0x3,%al
0x000fb535:  je     0xfb841

----------------
IN: 
0x000fb539:  ja     0xfb548

----------------
IN: 
0x000fb53b:  cmp    $0x1,%al
0x000fb53d:  je     0xfb577

----------------
IN: 
0x000fb53f:  cmp    $0x2,%al
0x000fb541:  je     0xfb636

----------------
IN: 
0x000fb636:  addr32 mov 0x12(%esi),%al
0x000fb63a:  cmp    $0x5,%al
0x000fb63c:  ja     0xfb651

----------------
IN: 
0x000fb63e:  cmp    $0x4,%al
0x000fb640:  jae    0xfb89d

----------------
IN: 
0x000fb644:  cmp    $0x2,%al
0x000fb646:  je     0xfb68b

----------------
IN: 
0x000fb68b:  xor    %edx,%edx
0x000fb68e:  jmp    0xfb696

----------------
IN: 
0x000fb696:  mov    %esi,%eax
0x000fb699:  add    $0x8,%esp
0x000fb69d:  pop    %ebx
0x000fb69f:  pop    %esi
0x000fb6a1:  pop    %edi
0x000fb6a3:  pop    %ebp
0x000fb6a5:  jmp    0xf89a3

----------------
IN: 
0x000f89a3:  push   %ebp
0x000f89a5:  push   %edi
0x000f89a7:  push   %esi
0x000f89a9:  push   %ebx
0x000f89ab:  sub    $0xc,%esp
0x000f89af:  mov    %eax,%edi
0x000f89b2:  mov    %edx,%ebp
0x000f89b5:  addr32 mov (%eax),%ebx
0x000f89b9:  addr32 mov 0x4(%eax),%esi
0x000f89be:  mov    $0xc,%ecx
0x000f89c4:  xor    %edx,%edx
0x000f89c7:  mov    %esp,%eax
0x000f89ca:  calll  0xf6c99

----------------
IN: 
0x000f89d0:  addr32 mov 0x10(%edi),%ecx
0x000f89d5:  cmp    $0xff,%cx
0x000f89d9:  ja     0xf89f6

----------------
IN: 
0x000f89db:  movzwl %cx,%eax
0x000f89df:  xor    %edx,%edx
0x000f89e2:  add    %ebx,%eax
0x000f89e5:  adc    %esi,%edx
0x000f89e8:  cmp    $0x0,%edx
0x000f89ec:  ja     0xf89f6

----------------
IN: 
0x000f89ee:  cmp    $0xfffffff,%eax
0x000f89f4:  jbe    0xf8a46

----------------
IN: 
0x000f8a46:  cmp    $0x1,%ebp
0x000f8a4a:  sbb    %eax,%eax
0x000f8a4d:  and    $0xfffffff0,%eax
0x000f8a51:  add    $0x30,%eax
0x000f8a55:  addr32 mov %al,0x6(%esp)
0x000f8a5a:  addr32 mov %cl,0x1(%esp)
0x000f8a5f:  addr32 mov %bl,0x2(%esp)
0x000f8a64:  mov    %ebx,%eax
0x000f8a67:  mov    %esi,%edx
0x000f8a6a:  shrd   $0x8,%edx,%eax
0x000f8a6f:  shr    $0x8,%edx
0x000f8a73:  addr32 mov %al,0x3(%esp)
0x000f8a78:  mov    %ebx,%eax
0x000f8a7b:  mov    %esi,%edx
0x000f8a7e:  shrd   $0x10,%edx,%eax
0x000f8a83:  shr    $0x10,%edx
0x000f8a87:  addr32 mov %al,0x4(%esp)
0x000f8a8c:  mov    %ebx,%eax
0x000f8a8f:  mov    %esi,%edx
0x000f8a92:  shrd   $0x18,%edx,%eax
0x000f8a97:  shr    $0x18,%edx
0x000f8a9b:  mov    %al,%bl
0x000f8a9d:  and    $0xf,%ebx
0x000f8aa1:  or     $0x40,%ebx
0x000f8aa5:  addr32 mov %bl,0x5(%esp)
0x000f8aaa:  addr32 mov 0xc(%edi),%ecx
0x000f8aaf:  addr32 mov %cs:-0xeffdc(%ecx),%eax
0x000f8ab8:  addr32 mov %cs:-0xf0000(%eax),%si
0x000f8ac0:  addr32 mov %cs:-0xefffe(%eax),%bx
0x000f8ac8:  add    $0x2,%ebx
0x000f8acc:  mov    $0xa,%al
0x000f8ace:  mov    %ebx,%edx
0x000f8ad1:  out    %al,(%dx)
0x000f8ad2:  mov    %esp,%edx
0x000f8ad5:  mov    %ecx,%eax
0x000f8ad8:  calll  0xf8863

----------------
IN: 
0x000f8863:  push   %ebp
0x000f8865:  push   %edi
0x000f8867:  push   %esi
0x000f8869:  push   %ebx
0x000f886b:  mov    %edx,%edi
0x000f886e:  addr32 mov %cs:-0xeffdc(%eax),%edx
0x000f8877:  addr32 mov %cs:-0xeffd8(%eax),%bl
0x000f887f:  addr32 mov %cs:-0xf0000(%edx),%si
0x000f8887:  movzwl %si,%ebp
0x000f888b:  mov    %ebp,%eax
0x000f888e:  calll  0xff831

----------------
IN: 
0x000ff831:  movzwl %ax,%ecx
0x000ff835:  xor    %edx,%edx
0x000ff838:  mov    $0x80,%eax
0x000ff83e:  jmp    0xf87f0

----------------
IN: 
0x000f87f0:  push   %ebp
0x000f87f2:  push   %edi
0x000f87f4:  push   %esi
0x000f87f6:  push   %ebx
0x000f87f8:  mov    %eax,%esi
0x000f87fb:  mov    %edx,%edi
0x000f87fe:  mov    %ecx,%ebp
0x000f8801:  mov    $0x7d00,%eax
0x000f8807:  calll  0xf7dd7

----------------
IN: 
0x000f7dd7:  push   %ebx
0x000f7dd9:  mov    %eax,%ebx
0x000f7ddc:  calll  0xf7ca6

----------------
IN: 
0x000f7ca6:  mov    %cs:0x6370,%dx
0x000f7cab:  test   %dx,%dx
0x000f7cad:  jne    0xf7cca

----------------
IN: 
0x000f7cca:  push   %esi
0x000f7ccc:  push   %ebx
0x000f7cce:  cmp    $0x40,%dx
0x000f7cd1:  je     0xf7d09

----------------
IN: 
0x000f7cd3:  in     (%dx),%eax
0x000f7cd5:  mov    $0xe000,%edx
0x000f7cdb:  movzwl %dx,%edx
0x000f7cdf:  mov    %dx,%es
0x000f7ce1:  mov    %es:-0x858,%ecx
0x000f7ce7:  and    $0xffffff,%eax
0x000f7ced:  mov    %ecx,%ebx
0x000f7cf0:  and    $0xff000000,%ebx
0x000f7cf7:  or     %ebx,%eax
0x000f7cfa:  cmp    %ecx,%eax
0x000f7cfd:  jae    0xf7d05

----------------
IN: 
0x000f7d05:  mov    %dx,%es
0x000f7d07:  jmp    0xf7d4a

----------------
IN: 
0x000f7d4a:  mov    %eax,%es:0xf7a8
0x000f7d4f:  pop    %ebx
0x000f7d51:  pop    %esi
0x000f7d53:  retl   

----------------
IN: 
0x000f7de2:  mov    %cs:0x6374,%edx
0x000f7de8:  imul   %ebx,%edx
0x000f7dec:  add    %edx,%eax
0x000f7def:  pop    %ebx
0x000f7df1:  retl   

----------------
IN: 
0x000f880d:  mov    %eax,%ebx
0x000f8810:  add    $0x7,%ebp
0x000f8814:  mov    %ebp,%edx
0x000f8817:  in     (%dx),%al
0x000f8818:  mov    %esi,%edx
0x000f881b:  and    %eax,%edx
0x000f881e:  mov    %edi,%ecx
0x000f8821:  cmp    %cl,%dl
0x000f8823:  jne    0xf882b

----------------
IN: 
0x000f8825:  movzbl %al,%eax
0x000f8829:  jmp    0xf8859

----------------
IN: 
0x000f8859:  pop    %ebx
0x000f885b:  pop    %esi
0x000f885d:  pop    %edi
0x000f885f:  pop    %ebp
0x000f8861:  retl   

----------------
IN: 
0x000f8894:  test   %eax,%eax
0x000f8897:  js     0xf8960

----------------
IN: 
0x000f889b:  addr32 mov 0x5(%edi),%al
0x000f889f:  and    $0x4f,%eax
0x000f88a3:  cmp    $0x1,%bl
0x000f88a6:  sbb    %ecx,%ecx
0x000f88a9:  and    $0xfffffff0,%ecx
0x000f88ad:  sub    $0x50,%ecx
0x000f88b1:  or     %eax,%ecx
0x000f88b4:  addr32 lea 0x6(%esi),%edx
0x000f88b9:  in     (%dx),%al
0x000f88ba:  mov    %al,%bl
0x000f88bc:  mov    %cl,%al
0x000f88be:  out    %al,(%dx)
0x000f88bf:  xor    %ecx,%ebx
0x000f88c2:  and    $0x10,%bl
0x000f88c5:  jne    0xf890e

----------------
IN: 
0x000f890e:  calll  0xf7db6

----------------
IN: 
0x000f7db6:  mov    %cs:0x6374,%eax
0x000f7dbb:  imul   $0x190,%eax,%eax
0x000f7dc2:  add    $0xf423f,%eax
0x000f7dc8:  mov    $0xf4240,%ecx
0x000f7dce:  xor    %edx,%edx
0x000f7dd1:  div    %ecx
0x000f7dd4:  jmp    0xf7d71

----------------
IN: 
0x000f7d71:  push   %ebx
0x000f7d73:  mov    %eax,%ebx
0x000f7d76:  calll  0xf7ca6

----------------
IN: 
0x000f7d7c:  add    %eax,%ebx
0x000f7d7f:  mov    %ebx,%eax
0x000f7d82:  calll  0xf7d55

----------------
IN: 
0x000f7d55:  push   %ebx
0x000f7d57:  mov    %eax,%ebx
0x000f7d5a:  calll  0xf7ca6

----------------
IN: 
0x000f7d60:  sub    %ebx,%eax
0x000f7d63:  test   %eax,%eax
0x000f7d66:  setg   %al
0x000f7d69:  movzbl %al,%eax
0x000f7d6d:  pop    %ebx
0x000f7d6f:  retl   

----------------
IN: 
0x000f7d88:  test   %eax,%eax
0x000f7d8b:  jne    0xf7d91

----------------
IN: 
0x000f7d91:  pop    %ebx
0x000f7d93:  retl   

----------------
IN: 
0x000f8914:  mov    %ebp,%eax
0x000f8917:  calll  0xff831

----------------
IN: 
0x000f891d:  test   %eax,%eax
0x000f8920:  jns    0xf88c7

----------------
IN: 
0x000f88c7:  addr32 mov 0x6(%edi),%cl
0x000f88cb:  mov    %ecx,%eax
0x000f88ce:  and    $0xee,%eax
0x000f88d4:  cmp    $0x24,%eax
0x000f88d8:  jne    0xf8924

----------------
IN: 
0x000f8924:  addr32 mov (%edi),%al
0x000f8927:  addr32 lea 0x1(%esi),%edx
0x000f892c:  out    %al,(%dx)
0x000f892d:  addr32 mov 0x1(%edi),%al
0x000f8931:  addr32 lea 0x2(%esi),%edx
0x000f8936:  out    %al,(%dx)
0x000f8937:  addr32 mov 0x2(%edi),%al
0x000f893b:  addr32 lea 0x3(%esi),%edx
0x000f8940:  out    %al,(%dx)
0x000f8941:  addr32 mov 0x3(%edi),%al
0x000f8945:  addr32 lea 0x4(%esi),%edx
0x000f894a:  out    %al,(%dx)
0x000f894b:  addr32 mov 0x4(%edi),%al
0x000f894f:  addr32 lea 0x5(%esi),%edx
0x000f8954:  out    %al,(%dx)
0x000f8955:  addr32 lea 0x7(%esi),%edx
0x000f895a:  mov    %cl,%al
0x000f895c:  out    %al,(%dx)
0x000f895d:  xor    %eax,%eax
0x000f8960:  pop    %ebx
0x000f8962:  pop    %esi
0x000f8964:  pop    %edi
0x000f8966:  pop    %ebp
0x000f8968:  retl   

----------------
IN: 
0x000f8ade:  mov    %eax,%ecx
0x000f8ae1:  test   %eax,%eax
0x000f8ae4:  jne    0xf8b0a

----------------
IN: 
0x000f8ae6:  movzwl %si,%eax
0x000f8aea:  calll  0xf896a

----------------
IN: 
0x000f896a:  push   %ebx
0x000f896c:  mov    %eax,%ebx
0x000f896f:  calll  0xf7db6

----------------
IN: 
0x000f8975:  movzwl %bx,%eax
0x000f8979:  calll  0xff831

----------------
IN: 
0x000f897f:  test   %eax,%eax
0x000f8982:  js     0xf899f

----------------
IN: 
0x000f8984:  test   $0x1,%al
0x000f8986:  jne    0xf8999

----------------
IN: 
0x000f8988:  and    $0x8,%eax
0x000f898c:  cmp    $0x1,%eax
0x000f8990:  sbb    %eax,%eax
0x000f8993:  and    $0xfffffffb,%eax
0x000f8997:  jmp    0xf899f

----------------
IN: 
0x000f899f:  pop    %ebx
0x000f89a1:  retl   

----------------
IN: 
0x000f8af0:  mov    %eax,%ecx
0x000f8af3:  test   %eax,%eax
0x000f8af6:  jne    0xf8b0a

----------------
IN: 
0x000f8af8:  mov    $0x200,%cx
0x000f8afb:  mov    %ebp,%edx
0x000f8afe:  mov    %edi,%eax
0x000f8b01:  calll  0xff6e8

----------------
IN: 
0x000ff6e8:  push   %ebp
0x000ff6ea:  push   %edi
0x000ff6ec:  push   %esi
0x000ff6ee:  push   %ebx
0x000ff6f0:  sub    $0x18,%esp
0x000ff6f4:  mov    %eax,%ebx
0x000ff6f7:  addr32 mov %edx,0x8(%esp)
0x000ff6fd:  mov    %ecx,%edx
0x000ff700:  addr32 mov %ecx,0xc(%esp)
0x000ff706:  addr32 mov 0xc(%eax),%eax
0x000ff70b:  addr32 mov %cs:-0xeffdc(%eax),%eax
0x000ff714:  addr32 mov %cs:-0xf0000(%eax),%di
0x000ff71c:  addr32 mov %di,0x10(%esp)
0x000ff721:  addr32 mov %cs:-0xefffe(%eax),%si
0x000ff729:  addr32 movzwl 0x10(%ebx),%ebp
0x000ff72f:  addr32 mov 0x8(%ebx),%eax
0x000ff734:  addr32 mov %eax,(%esp)
0x000ff739:  mov    $0x2,%ecx
0x000ff73f:  mov    %edx,%eax
0x000ff742:  cltd   
0x000ff744:  idiv   %ecx
0x000ff747:  movzwl %ax,%eax
0x000ff74b:  addr32 mov %eax,0x4(%esp)
0x000ff751:  addr32 lea 0x2(%esi),%eax
0x000ff756:  addr32 mov %ax,0x12(%esp)
0x000ff75b:  movzwl %di,%eax
0x000ff75f:  addr32 mov %eax,0x14(%esp)
0x000ff765:  addr32 cmpl $0x0,0x8(%esp)
0x000ff76c:  je     0xff792

----------------
IN: 
0x000ff792:  addr32 mov (%esp),%edi
0x000ff797:  mov    %edi,%eax
0x000ff79a:  shr    $0x4,%eax
0x000ff79e:  mov    %ax,%es
0x000ff7a0:  and    $0xf,%edi
0x000ff7a4:  addr32 mov 0x4(%esp),%ecx
0x000ff7aa:  addr32 mov 0x10(%esp),%edx
0x000ff7b0:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x000ff7b0:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x000ff7b3:  addr32 mov 0xc(%esp),%eax
0x000ff7b9:  addr32 add %eax,(%esp)
0x000ff7be:  addr32 mov 0x12(%esp),%dx
0x000ff7c3:  in     (%dx),%al
0x000ff7c4:  addr32 mov 0x14(%esp),%eax
0x000ff7ca:  calll  0xff831

----------------
IN: 
0x000ff7d0:  test   %eax,%eax
0x000ff7d3:  jns    0xff7db

----------------
IN: 
0x000ff7db:  dec    %ebp
0x000ff7dd:  je     0xff7f9

----------------
IN: 
0x000ff7f9:  mov    %eax,%edx
0x000ff7fc:  and    $0x89,%edx
0x000ff803:  addr32 cmpl $0x0,0x8(%esp)
0x000ff80a:  je     0xff815

----------------
IN: 
0x000ff815:  cmp    $0x1,%edx
0x000ff819:  sbb    %eax,%eax
0x000ff81c:  not    %eax
0x000ff81f:  and    $0xfffffff9,%eax
0x000ff823:  add    $0x18,%esp
0x000ff827:  pop    %ebx
0x000ff829:  pop    %esi
0x000ff82b:  pop    %edi
0x000ff82d:  pop    %ebp
0x000ff82f:  retl   

----------------
IN: 
0x000f8b07:  mov    %eax,%ecx
0x000f8b0a:  mov    $0x8,%al
0x000f8b0c:  mov    %ebx,%edx
0x000f8b0f:  out    %al,(%dx)
0x000f8b10:  cmp    $0x1,%ecx
0x000f8b14:  sbb    %eax,%eax
0x000f8b17:  not    %eax
0x000f8b1a:  and    $0xc,%eax
0x000f8b1e:  add    $0xc,%esp
0x000f8b22:  pop    %ebx
0x000f8b24:  pop    %esi
0x000f8b26:  pop    %edi
0x000f8b28:  pop    %ebp
0x000f8b2a:  retl   

----------------
IN: 
0x000fb8e1:  mov    %bx,%es
0x000fb8e3:  addr32 mov 0x10(%esp),%edx
0x000fb8e9:  addr32 mov %dx,%es:0x10(%ebp)
0x000fb8ee:  add    $0x14,%esp
0x000fb8f2:  pop    %ebx
0x000fb8f4:  pop    %esi
0x000fb8f6:  pop    %edi
0x000fb8f8:  pop    %ebp
0x000fb8fa:  retl   

----------------
IN: 
0x000fe6bd:  jmp    0xfe6e8

----------------
IN: 
0x000fe6e8:  pop    %edx
0x000fe6ea:  pop    %ebx
0x000fe6ec:  pop    %esi
0x000fe6ee:  pop    %edi
0x000fe6f0:  retl   

----------------
IN: 
0x000fe3c7:  addr32 mov 0x14(%esp),%edx
0x000fe3cd:  addr32 mov %dl,0x1c(%ebx)
0x000fe3d1:  or     $0x60,%ah
0x000fe3d4:  mov    %eax,%edx
0x000fe3d7:  mov    %ebx,%eax
0x000fe3da:  calll  0xf75e0

----------------
IN: 
0x000f75e0:  mov    $0x40,%ecx
0x000f75e6:  addr32 cmpb $0x0,0x14(%eax)
0x000f75eb:  js     0xf75f6

----------------
IN: 
0x000f75f6:  mov    %cx,%es
0x000f75f8:  mov    %dl,%es:0x74
0x000f75fd:  test   %dl,%dl
0x000f75ff:  je     0xf760c

----------------
IN: 
0x000f760c:  jmp    0xfff45

----------------
IN: 
0x000fe3e0:  add    $0x18,%esp
0x000fe3e4:  pop    %ebx
0x000fe3e6:  pop    %esi
0x000fe3e8:  pop    %edi
0x000fe3ea:  retl   

----------------
IN: 
0x000fd2a3:  lret   

----------------
IN: 
0x000f23cb:  testb  $0x1,0x2a(%esp)
0x000f23d0:  je     0xf23db

----------------
IN: 
0x000f23db:  test   %esi,%esi
0x000f23dd:  je     0xf23f8

----------------
IN: 
0x000f23df:  cmpw   $0xaa55,0x7dfe
0x000f23e8:  je     0xf23f8

----------------
IN: 
0x000f23f8:  movzbl %bl,%edx
0x000f23fb:  mov    $0x7c00,%eax
0x000f2400:  call   0xf1e97

----------------
IN: 
0x000f1e97:  push   %esi
0x000f1e98:  push   %ebx
0x000f1e99:  sub    $0x34,%esp
0x000f1e9c:  mov    %eax,%ebx
0x000f1e9e:  mov    %edx,%esi
0x000f1ea0:  movzwl %ax,%eax
0x000f1ea3:  mov    %eax,0x8(%esp)
0x000f1ea7:  mov    %ebx,%eax
0x000f1ea9:  shr    $0x10,%eax
0x000f1eac:  mov    %eax,0x4(%esp)
0x000f1eb0:  movl   $0xf40e4,(%esp)
0x000f1eb7:  call   0xf1787

----------------
IN: 
0x000f1ebc:  mov    $0x26,%ecx
0x000f1ec1:  xor    %edx,%edx
0x000f1ec3:  lea    0xe(%esp),%eax
0x000f1ec7:  call   0xf0d7a

----------------
IN: 
0x000f1ecc:  movw   $0x200,0x32(%esp)
0x000f1ed3:  mov    %ebx,0x2e(%esp)
0x000f1ed7:  mov    %esi,%eax
0x000f1ed9:  mov    %al,0x22(%esp)
0x000f1edd:  movw   $0xaa55,0x2a(%esp)
0x000f1ee4:  lea    0xe(%esp),%eax
0x000f1ee8:  call   0xf16e7

----------------
IN: 
0x00007c00:  cli    
0x00007c01:  cld    
0x00007c02:  xor    %ax,%ax
0x00007c04:  mov    %ax,%ds
0x00007c06:  mov    %ax,%es
0x00007c08:  mov    %ax,%ss

----------------
IN: 
0x00007c0a:  in     $0x64,%al

----------------
IN: 
0x00007c0c:  test   $0x2,%al
0x00007c0e:  jne    0x7c0a

----------------
IN: 
0x00007c10:  mov    $0xd1,%al
0x00007c12:  out    %al,$0x64
0x00007c14:  in     $0x64,%al
0x00007c16:  test   $0x2,%al
0x00007c18:  jne    0x7c14

----------------
IN: 
0x00007c1a:  mov    $0xdf,%al
0x00007c1c:  out    %al,$0x60
0x00007c1e:  lgdtw  0x7c6c
0x00007c23:  mov    %cr0,%eax
0x00007c26:  or     $0x1,%eax
0x00007c2a:  mov    %eax,%cr0

----------------
IN: 
0x00007c2d:  ljmp   $0x8,$0x7c32

----------------
IN: 
0x00007c32:  mov    $0x10,%ax
0x00007c36:  mov    %eax,%ds

----------------
IN: 
0x00007c38:  mov    %eax,%es

----------------
IN: 
0x00007c3a:  mov    %eax,%fs
0x00007c3c:  mov    %eax,%gs
0x00007c3e:  mov    %eax,%ss

----------------
IN: 
0x00007c40:  mov    $0x0,%ebp

----------------
IN: 
0x00007c45:  mov    $0x7c00,%esp
0x00007c4a:  call   0x7cd1

----------------
IN: 
0x00007cd1:  push   %ebp
0x00007cd2:  mov    %esp,%ebp
0x00007cd4:  push   %edi
0x00007cd5:  push   %esi
0x00007cd6:  push   %ebx
0x00007cd7:  mov    $0x1,%ebx
0x00007cdc:  sub    $0x1c,%esp
0x00007cdf:  lea    0x7f(%ebx),%eax
0x00007ce2:  mov    %ebx,%edx
0x00007ce4:  shl    $0x9,%eax
0x00007ce7:  inc    %ebx
0x00007ce8:  call   0x7c72

----------------
IN: 
0x00007c72:  push   %ebp
0x00007c73:  mov    %edx,%ecx
0x00007c75:  mov    %esp,%ebp
0x00007c77:  mov    $0x1f7,%edx
0x00007c7c:  push   %edi
0x00007c7d:  mov    %eax,%edi
0x00007c7f:  in     (%dx),%al
0x00007c80:  and    $0xffffffc0,%eax
0x00007c83:  cmp    $0x40,%al
0x00007c85:  jne    0x7c7f

----------------
IN: 
0x00007c87:  mov    $0x1f2,%edx
0x00007c8c:  mov    $0x1,%al
0x00007c8e:  out    %al,(%dx)
0x00007c8f:  movzbl %cl,%eax
0x00007c92:  mov    $0xf3,%dl
0x00007c94:  out    %al,(%dx)
0x00007c95:  movzbl %ch,%eax
0x00007c98:  mov    $0xf4,%dl
0x00007c9a:  out    %al,(%dx)
0x00007c9b:  mov    %ecx,%eax
0x00007c9d:  mov    $0xf5,%dl
0x00007c9f:  shr    $0x10,%eax
0x00007ca2:  movzbl %al,%eax
0x00007ca5:  out    %al,(%dx)
0x00007ca6:  shr    $0x18,%ecx
0x00007ca9:  mov    $0xf6,%dl
0x00007cab:  mov    %cl,%al
0x00007cad:  and    $0xf,%eax
0x00007cb0:  or     $0xffffffe0,%eax
0x00007cb3:  out    %al,(%dx)
0x00007cb4:  mov    $0x20,%al
0x00007cb6:  mov    $0xf7,%dl
0x00007cb8:  out    %al,(%dx)
0x00007cb9:  in     (%dx),%al
0x00007cba:  and    $0xffffffc0,%eax
0x00007cbd:  cmp    $0x40,%al
0x00007cbf:  jne    0x7cb9

----------------
IN: 
0x00007cb9:  in     (%dx),%al
0x00007cba:  and    $0xffffffc0,%eax
0x00007cbd:  cmp    $0x40,%al
0x00007cbf:  jne    0x7cb9

----------------
IN: 
0x00007cc1:  mov    $0x80,%ecx
0x00007cc6:  mov    $0x1f0,%edx
0x00007ccb:  cld    
0x00007ccc:  repnz insl (%dx),%es:(%edi)

----------------
IN: 
0x00007ccc:  repnz insl (%dx),%es:(%edi)

----------------
IN: 
0x00007cce:  pop    %edi
0x00007ccf:  pop    %ebp
0x00007cd0:  ret    

----------------
IN: 
0x00007ced:  cmp    $0x9,%ebx
0x00007cf0:  jne    0x7cdf

----------------
IN: 
0x00007cdf:  lea    0x7f(%ebx),%eax
0x00007ce2:  mov    %ebx,%edx
0x00007ce4:  shl    $0x9,%eax
0x00007ce7:  inc    %ebx
0x00007ce8:  call   0x7c72

----------------
IN: 
0x00007cf2:  cmpl   $0x464c457f,0x10000
0x00007cfc:  jne    0x7d68

----------------
IN: 
0x00007cfe:  mov    0x1001c,%eax
0x00007d03:  lea    0x10000(%eax),%ebx
0x00007d09:  movzwl 0x1002c,%eax
0x00007d10:  shl    $0x5,%eax
0x00007d13:  add    %ebx,%eax
0x00007d15:  mov    %eax,-0x1c(%ebp)
0x00007d18:  cmp    -0x1c(%ebp),%ebx
0x00007d1b:  jae    0x7d5c

----------------
IN: 
0x00007d1d:  mov    0x8(%ebx),%esi
0x00007d20:  mov    0x14(%ebx),%eax
0x00007d23:  mov    0x4(%ebx),%ecx
0x00007d26:  and    $0xffffff,%esi
0x00007d2c:  add    %esi,%eax
0x00007d2e:  mov    %eax,-0x20(%ebp)
0x00007d31:  mov    %ecx,%eax
0x00007d33:  and    $0x1ff,%eax
0x00007d38:  shr    $0x9,%ecx
0x00007d3b:  sub    %eax,%esi
0x00007d3d:  lea    0x1(%ecx),%edi
0x00007d40:  cmp    -0x20(%ebp),%esi
0x00007d43:  jae    0x7d57

----------------
IN: 
0x00007d45:  mov    %edi,%edx
0x00007d47:  mov    %esi,%eax
0x00007d49:  call   0x7c72

----------------
IN: 
0x00007d4e:  add    $0x200,%esi
0x00007d54:  inc    %edi
0x00007d55:  jmp    0x7d40

----------------
IN: 
0x00007d40:  cmp    -0x20(%ebp),%esi
0x00007d43:  jae    0x7d57

----------------
IN: 
0x00007d57:  add    $0x20,%ebx
0x00007d5a:  jmp    0x7d18

----------------
IN: 
0x00007d18:  cmp    -0x1c(%ebp),%ebx
0x00007d1b:  jae    0x7d5c

----------------
IN: 
0x00007d5c:  mov    0x10018,%eax
0x00007d61:  and    $0xffffff,%eax
0x00007d66:  call   *%eax

----------------
IN: 
0x00100000:  push   %ebp

----------------
IN: 
0x00100000:  push   %ebp

----------------
IN: 
0x00100001:  mov    %esp,%ebp
0x00100003:  sub    $0x28,%esp
0x00100006:  mov    $0x10fd20,%edx
0x0010000b:  mov    $0x10ea16,%eax
0x00100010:  sub    %eax,%edx
0x00100012:  mov    %edx,%eax
0x00100014:  mov    %eax,0x8(%esp)
0x00100018:  movl   $0x0,0x4(%esp)
0x00100020:  movl   $0x10ea16,(%esp)
0x00100027:  call   0x1032e8

----------------
IN: 
0x001032e8:  push   %ebp
0x001032e9:  mov    %esp,%ebp
0x001032eb:  push   %edi
0x001032ec:  sub    $0x24,%esp
0x001032ef:  mov    0xc(%ebp),%eax
0x001032f2:  mov    %al,-0x28(%ebp)
0x001032f5:  movsbl -0x28(%ebp),%eax
0x001032f9:  mov    0x8(%ebp),%edx
0x001032fc:  mov    %edx,-0x8(%ebp)
0x001032ff:  mov    %al,-0x9(%ebp)
0x00103302:  mov    0x10(%ebp),%eax
0x00103305:  mov    %eax,-0x10(%ebp)
0x00103308:  mov    -0x10(%ebp),%ecx
0x0010330b:  movzbl -0x9(%ebp),%eax
0x0010330f:  mov    -0x8(%ebp),%edx
0x00103312:  mov    %edx,%edi
0x00103314:  rep stos %al,%es:(%edi)

----------------
IN: 
0x00103314:  rep stos %al,%es:(%edi)

----------------
IN: 
0x00103316:  mov    %edi,%edx
0x00103318:  mov    %ecx,-0x14(%ebp)
0x0010331b:  mov    %edx,-0x18(%ebp)
0x0010331e:  mov    -0x8(%ebp),%eax
0x00103321:  add    $0x24,%esp
0x00103324:  pop    %edi
0x00103325:  pop    %ebp
0x00103326:  ret    

----------------
IN: 
0x0010002c:  call   0x101565

----------------
IN: 
0x00101565:  push   %ebp
0x00101566:  mov    %esp,%ebp
0x00101568:  sub    $0x18,%esp
0x0010156b:  call   0x100e03

----------------
IN: 
0x00100e03:  push   %ebp
0x00100e04:  mov    %esp,%ebp
0x00100e06:  sub    $0x20,%esp
0x00100e09:  movl   $0xb8000,-0x4(%ebp)
0x00100e10:  mov    -0x4(%ebp),%eax
0x00100e13:  movzwl (%eax),%eax
0x00100e16:  mov    %ax,-0x6(%ebp)
0x00100e1a:  mov    -0x4(%ebp),%eax
0x00100e1d:  movw   $0xa55a,(%eax)
0x00100e22:  mov    -0x4(%ebp),%eax
0x00100e25:  movzwl (%eax),%eax
0x00100e28:  cmp    $0xa55a,%ax
0x00100e2c:  je     0x100e40

----------------
IN: 
0x00100e40:  mov    -0x4(%ebp),%eax
0x00100e43:  movzwl -0x6(%ebp),%edx
0x00100e47:  mov    %dx,(%eax)
0x00100e4a:  movw   $0x3d4,0x10ee66
0x00100e53:  movzwl 0x10ee66,%eax
0x00100e5a:  movzwl %ax,%eax
0x00100e5d:  mov    %ax,-0xe(%ebp)
0x00100e61:  movb   $0xe,-0xf(%ebp)
0x00100e65:  movzbl -0xf(%ebp),%eax
0x00100e69:  movzwl -0xe(%ebp),%edx
0x00100e6d:  out    %al,(%dx)
0x00100e6e:  movzwl 0x10ee66,%eax
0x00100e75:  add    $0x1,%eax
0x00100e78:  movzwl %ax,%eax
0x00100e7b:  mov    %ax,-0x12(%ebp)
0x00100e7f:  movzwl -0x12(%ebp),%eax
0x00100e83:  mov    %eax,%edx
0x00100e85:  in     (%dx),%al
0x00100e86:  mov    %al,-0x13(%ebp)
0x00100e89:  movzbl -0x13(%ebp),%eax
0x00100e8d:  movzbl %al,%eax
0x00100e90:  shl    $0x8,%eax
0x00100e93:  mov    %eax,-0xc(%ebp)
0x00100e96:  movzwl 0x10ee66,%eax
0x00100e9d:  movzwl %ax,%eax
0x00100ea0:  mov    %ax,-0x16(%ebp)
0x00100ea4:  movb   $0xf,-0x17(%ebp)
0x00100ea8:  movzbl -0x17(%ebp),%eax
0x00100eac:  movzwl -0x16(%ebp),%edx
0x00100eb0:  out    %al,(%dx)
0x00100eb1:  movzwl 0x10ee66,%eax
0x00100eb8:  add    $0x1,%eax
0x00100ebb:  movzwl %ax,%eax
0x00100ebe:  mov    %ax,-0x1a(%ebp)
0x00100ec2:  movzwl -0x1a(%ebp),%eax
0x00100ec6:  mov    %eax,%edx
0x00100ec8:  in     (%dx),%al
0x00100ec9:  mov    %al,-0x1b(%ebp)
0x00100ecc:  movzbl -0x1b(%ebp),%eax
0x00100ed0:  movzbl %al,%eax
0x00100ed3:  or     %eax,-0xc(%ebp)
0x00100ed6:  mov    -0x4(%ebp),%eax
0x00100ed9:  mov    %eax,0x10ee60
0x00100ede:  mov    -0xc(%ebp),%eax
0x00100ee1:  mov    %ax,0x10ee64
0x00100ee7:  leave  
0x00100ee8:  ret    

----------------
IN: 
0x00101570:  call   0x100ee9

----------------
IN: 
0x00100ee9:  push   %ebp
0x00100eea:  mov    %esp,%ebp
0x00100eec:  sub    $0x48,%esp
0x00100eef:  movw   $0x3fa,-0xa(%ebp)
0x00100ef5:  movb   $0x0,-0xb(%ebp)
0x00100ef9:  movzbl -0xb(%ebp),%eax
0x00100efd:  movzwl -0xa(%ebp),%edx
0x00100f01:  out    %al,(%dx)
0x00100f02:  movw   $0x3fb,-0xe(%ebp)
0x00100f08:  movb   $0x80,-0xf(%ebp)
0x00100f0c:  movzbl -0xf(%ebp),%eax
0x00100f10:  movzwl -0xe(%ebp),%edx
0x00100f14:  out    %al,(%dx)
0x00100f15:  movw   $0x3f8,-0x12(%ebp)
0x00100f1b:  movb   $0xc,-0x13(%ebp)
0x00100f1f:  movzbl -0x13(%ebp),%eax
0x00100f23:  movzwl -0x12(%ebp),%edx
0x00100f27:  out    %al,(%dx)
0x00100f28:  movw   $0x3f9,-0x16(%ebp)
0x00100f2e:  movb   $0x0,-0x17(%ebp)
0x00100f32:  movzbl -0x17(%ebp),%eax
0x00100f36:  movzwl -0x16(%ebp),%edx
0x00100f3a:  out    %al,(%dx)
0x00100f3b:  movw   $0x3fb,-0x1a(%ebp)
0x00100f41:  movb   $0x3,-0x1b(%ebp)
0x00100f45:  movzbl -0x1b(%ebp),%eax
0x00100f49:  movzwl -0x1a(%ebp),%edx
0x00100f4d:  out    %al,(%dx)
0x00100f4e:  movw   $0x3fc,-0x1e(%ebp)
0x00100f54:  movb   $0x0,-0x1f(%ebp)
0x00100f58:  movzbl -0x1f(%ebp),%eax
0x00100f5c:  movzwl -0x1e(%ebp),%edx
0x00100f60:  out    %al,(%dx)
0x00100f61:  movw   $0x3f9,-0x22(%ebp)
0x00100f67:  movb   $0x1,-0x23(%ebp)
0x00100f6b:  movzbl -0x23(%ebp),%eax
0x00100f6f:  movzwl -0x22(%ebp),%edx
0x00100f73:  out    %al,(%dx)
0x00100f74:  movw   $0x3fd,-0x26(%ebp)
0x00100f7a:  movzwl -0x26(%ebp),%eax
0x00100f7e:  mov    %eax,%edx
0x00100f80:  in     (%dx),%al
0x00100f81:  mov    %al,-0x27(%ebp)
0x00100f84:  movzbl -0x27(%ebp),%eax
0x00100f88:  cmp    $0xff,%al
0x00100f8a:  setne  %al
0x00100f8d:  movzbl %al,%eax
0x00100f90:  mov    %eax,0x10ee68
0x00100f95:  movw   $0x3fa,-0x2a(%ebp)
0x00100f9b:  movzwl -0x2a(%ebp),%eax
0x00100f9f:  mov    %eax,%edx
0x00100fa1:  in     (%dx),%al
0x00100fa2:  mov    %al,-0x2b(%ebp)
0x00100fa5:  movw   $0x3f8,-0x2e(%ebp)
0x00100fab:  movzwl -0x2e(%ebp),%eax
0x00100faf:  mov    %eax,%edx
0x00100fb1:  in     (%dx),%al
0x00100fb2:  mov    %al,-0x2f(%ebp)
0x00100fb5:  mov    0x10ee68,%eax
0x00100fba:  test   %eax,%eax
0x00100fbc:  je     0x100fca

----------------
IN: 
0x00100fbe:  movl   $0x4,(%esp)
0x00100fc5:  call   0x10167a

----------------
IN: 
0x0010167a:  push   %ebp
0x0010167b:  mov    %esp,%ebp
0x0010167d:  sub    $0x4,%esp
0x00101680:  mov    0x8(%ebp),%eax
0x00101683:  mov    $0x1,%edx
0x00101688:  mov    %eax,%ecx
0x0010168a:  shl    %cl,%edx
0x0010168c:  mov    %edx,%eax
0x0010168e:  not    %eax
0x00101690:  mov    %eax,%edx
0x00101692:  movzwl 0x10e550,%eax
0x00101699:  and    %edx,%eax
0x0010169b:  movzwl %ax,%eax
0x0010169e:  mov    %eax,(%esp)
0x001016a1:  call   0x101622

----------------
IN: 
0x00101622:  push   %ebp
0x00101623:  mov    %esp,%ebp
0x00101625:  sub    $0x14,%esp
0x00101628:  mov    0x8(%ebp),%eax
0x0010162b:  mov    %ax,-0x14(%ebp)
0x0010162f:  movzwl -0x14(%ebp),%eax
0x00101633:  mov    %ax,0x10e550
0x00101639:  mov    0x10f08c,%eax
0x0010163e:  test   %eax,%eax
0x00101640:  je     0x101678

----------------
IN: 
0x00101678:  leave  
0x00101679:  ret    

----------------
IN: 
0x001016a6:  leave  
0x001016a7:  ret    

----------------
IN: 
0x00100fca:  leave  
0x00100fcb:  ret    

----------------
IN: 
0x00101575:  call   0x10154c

----------------
IN: 
0x0010154c:  push   %ebp
0x0010154d:  mov    %esp,%ebp
0x0010154f:  sub    $0x18,%esp
0x00101552:  call   0x101538

----------------
IN: 
0x00101538:  push   %ebp
0x00101539:  mov    %esp,%ebp
0x0010153b:  sub    $0x18,%esp
0x0010153e:  movl   $0x1013af,(%esp)
0x00101545:  call   0x1012f0

----------------
IN: 
0x001012f0:  push   %ebp
0x001012f1:  mov    %esp,%ebp
0x001012f3:  sub    $0x18,%esp
0x001012f6:  jmp    0x10132b

----------------
IN: 
0x0010132b:  mov    0x8(%ebp),%eax
0x0010132e:  call   *%eax

----------------
IN: 
0x001013af:  push   %ebp
0x001013b0:  mov    %esp,%ebp
0x001013b2:  sub    $0x38,%esp
0x001013b5:  movw   $0x64,-0x10(%ebp)
0x001013bb:  movzwl -0x10(%ebp),%eax
0x001013bf:  mov    %eax,%edx
0x001013c1:  in     (%dx),%al
0x001013c2:  mov    %al,-0x11(%ebp)
0x001013c5:  movzbl -0x11(%ebp),%eax
0x001013c9:  movzbl %al,%eax
0x001013cc:  and    $0x1,%eax
0x001013cf:  test   %eax,%eax
0x001013d1:  jne    0x1013dd

----------------
IN: 
0x001013d3:  mov    $0xffffffff,%eax
0x001013d8:  jmp    0x101536

----------------
IN: 
0x00101536:  leave  
0x00101537:  ret    

----------------
IN: 
0x00101330:  mov    %eax,-0xc(%ebp)
0x00101333:  cmpl   $0xffffffff,-0xc(%ebp)
0x00101337:  jne    0x1012f8

----------------
IN: 
0x00101339:  leave  
0x0010133a:  ret    

----------------
IN: 
0x0010154a:  leave  
0x0010154b:  ret    

----------------
IN: 
0x00101557:  movl   $0x1,(%esp)
0x0010155e:  call   0x10167a

----------------
IN: 
0x00101563:  leave  
0x00101564:  ret    

----------------
IN: 
0x0010157a:  mov    0x10ee68,%eax
0x0010157f:  test   %eax,%eax
0x00101581:  jne    0x10158f

----------------
IN: 
0x0010158f:  leave  
0x00101590:  ret    

----------------
IN: 
0x00100031:  movl   $0x103480,-0xc(%ebp)
0x00100038:  mov    -0xc(%ebp),%eax
0x0010003b:  mov    %eax,0x4(%esp)
0x0010003f:  movl   $0x10349c,(%esp)
0x00100046:  call   0x100312

----------------
IN: 
0x00100312:  push   %ebp
0x00100313:  mov    %esp,%ebp
0x00100315:  sub    $0x28,%esp
0x00100318:  lea    0xc(%ebp),%eax
0x0010031b:  mov    %eax,-0x10(%ebp)
0x0010031e:  mov    -0x10(%ebp),%eax
0x00100321:  mov    %eax,0x4(%esp)
0x00100325:  mov    0x8(%ebp),%eax
0x00100328:  mov    %eax,(%esp)
0x0010032b:  call   0x1002df

----------------
IN: 
0x001002df:  push   %ebp
0x001002e0:  mov    %esp,%ebp
0x001002e2:  sub    $0x28,%esp
0x001002e5:  movl   $0x0,-0xc(%ebp)
0x001002ec:  mov    0xc(%ebp),%eax
0x001002ef:  mov    %eax,0xc(%esp)
0x001002f3:  mov    0x8(%ebp),%eax
0x001002f6:  mov    %eax,0x8(%esp)
0x001002fa:  lea    -0xc(%ebp),%eax
0x001002fd:  mov    %eax,0x4(%esp)
0x00100301:  movl   $0x1002bf,(%esp)
0x00100308:  call   0x102b01

----------------
IN: 
0x00102b01:  push   %ebp
0x00102b02:  mov    %esp,%ebp
0x00102b04:  push   %esi
0x00102b05:  push   %ebx
0x00102b06:  sub    $0x40,%esp
0x00102b09:  jmp    0x102b23

----------------
IN: 
0x00102b23:  mov    0x10(%ebp),%eax
0x00102b26:  lea    0x1(%eax),%edx
0x00102b29:  mov    %edx,0x10(%ebp)
0x00102b2c:  movzbl (%eax),%eax
0x00102b2f:  movzbl %al,%ebx
0x00102b32:  cmp    $0x25,%ebx
0x00102b35:  jne    0x102b0b

----------------
IN: 
0x00102b37:  movb   $0x20,-0x25(%ebp)
0x00102b3b:  movl   $0xffffffff,-0x1c(%ebp)
0x00102b42:  mov    -0x1c(%ebp),%eax
0x00102b45:  mov    %eax,-0x18(%ebp)
0x00102b48:  movl   $0x0,-0x24(%ebp)
0x00102b4f:  mov    -0x24(%ebp),%eax
0x00102b52:  mov    %eax,-0x20(%ebp)
0x00102b55:  mov    0x10(%ebp),%eax
0x00102b58:  lea    0x1(%eax),%edx
0x00102b5b:  mov    %edx,0x10(%ebp)
0x00102b5e:  movzbl (%eax),%eax
0x00102b61:  movzbl %al,%ebx
0x00102b64:  lea    -0x23(%ebx),%eax
0x00102b67:  cmp    $0x55,%eax
0x00102b6a:  ja     0x102eb4

----------------
IN: 
0x00102b70:  mov    0x103c34(,%eax,4),%eax
0x00102b77:  jmp    *%eax

----------------
IN: 
0x00102c9a:  mov    0x14(%ebp),%eax
0x00102c9d:  lea    0x4(%eax),%edx
0x00102ca0:  mov    %edx,0x14(%ebp)
0x00102ca3:  mov    (%eax),%esi
0x00102ca5:  test   %esi,%esi
0x00102ca7:  jne    0x102cae

----------------
IN: 
0x00102cae:  cmpl   $0x0,-0x18(%ebp)
0x00102cb2:  jle    0x102cf2

----------------
IN: 
0x00102cf2:  jmp    0x102d2c

----------------
IN: 
0x00102d2c:  mov    %esi,%eax
0x00102d2e:  lea    0x1(%eax),%esi
0x00102d31:  movzbl (%eax),%eax
0x00102d34:  movsbl %al,%ebx
0x00102d37:  test   %ebx,%ebx
0x00102d39:  je     0x102d4b

----------------
IN: 
0x00102d3b:  cmpl   $0x0,-0x1c(%ebp)
0x00102d3f:  js     0x102cf4

----------------
IN: 
0x00102cf4:  cmpl   $0x0,-0x24(%ebp)
0x00102cf8:  je     0x102d19

----------------
IN: 
0x00102d19:  mov    0xc(%ebp),%eax
0x00102d1c:  mov    %eax,0x4(%esp)
0x00102d20:  mov    %ebx,(%esp)
0x00102d23:  mov    0x8(%ebp),%eax
0x00102d26:  call   *%eax

----------------
IN: 
0x001002bf:  push   %ebp
0x001002c0:  mov    %esp,%ebp
0x001002c2:  sub    $0x18,%esp
0x001002c5:  mov    0x8(%ebp),%eax
0x001002c8:  mov    %eax,(%esp)
0x001002cb:  call   0x101591

----------------
IN: 
0x00101591:  push   %ebp
0x00101592:  mov    %esp,%ebp
0x00101594:  sub    $0x18,%esp
0x00101597:  mov    0x8(%ebp),%eax
0x0010159a:  mov    %eax,(%esp)
0x0010159d:  call   0x101045

----------------
IN: 
0x00101045:  push   %ebp
0x00101046:  mov    %esp,%ebp
0x00101048:  sub    $0x4,%esp
0x0010104b:  cmpl   $0x8,0x8(%ebp)
0x0010104f:  je     0x10105e

----------------
IN: 
0x00101051:  mov    0x8(%ebp),%eax
0x00101054:  mov    %eax,(%esp)
0x00101057:  call   0x100fcc

----------------
IN: 
0x00100fcc:  push   %ebp
0x00100fcd:  mov    %esp,%ebp
0x00100fcf:  sub    $0x20,%esp
0x00100fd2:  movl   $0x0,-0x4(%ebp)
0x00100fd9:  jmp    0x100fe4

----------------
IN: 
0x00100fe4:  movw   $0x379,-0x6(%ebp)
0x00100fea:  movzwl -0x6(%ebp),%eax
0x00100fee:  mov    %eax,%edx
0x00100ff0:  in     (%dx),%al
0x00100ff1:  mov    %al,-0x7(%ebp)
0x00100ff4:  movzbl -0x7(%ebp),%eax
0x00100ff8:  test   %al,%al
0x00100ffa:  js     0x101005

----------------
IN: 
0x00101005:  mov    0x8(%ebp),%eax
0x00101008:  movzbl %al,%eax
0x0010100b:  movw   $0x378,-0xa(%ebp)
0x00101011:  mov    %al,-0xb(%ebp)
0x00101014:  movzbl -0xb(%ebp),%eax
0x00101018:  movzwl -0xa(%ebp),%edx
0x0010101c:  out    %al,(%dx)
0x0010101d:  movw   $0x37a,-0xe(%ebp)
0x00101023:  movb   $0xd,-0xf(%ebp)
0x00101027:  movzbl -0xf(%ebp),%eax
0x0010102b:  movzwl -0xe(%ebp),%edx
0x0010102f:  out    %al,(%dx)
0x00101030:  movw   $0x37a,-0x12(%ebp)
0x00101036:  movb   $0x8,-0x13(%ebp)
0x0010103a:  movzbl -0x13(%ebp),%eax
0x0010103e:  movzwl -0x12(%ebp),%edx
0x00101042:  out    %al,(%dx)
0x00101043:  leave  
0x00101044:  ret    

----------------
IN: 
0x0010105c:  jmp    0x101082

----------------
IN: 
0x00101082:  leave  
0x00101083:  ret    

----------------
IN: 
0x001015a2:  mov    0x8(%ebp),%eax
0x001015a5:  mov    %eax,(%esp)
0x001015a8:  call   0x101084

----------------
IN: 
0x00101084:  push   %ebp
0x00101085:  mov    %esp,%ebp
0x00101087:  push   %ebx
0x00101088:  sub    $0x34,%esp
0x0010108b:  mov    0x8(%ebp),%eax
0x0010108e:  mov    $0x0,%al
0x00101090:  test   %eax,%eax
0x00101092:  jne    0x10109b

----------------
IN: 
0x00101094:  orl    $0x700,0x8(%ebp)
0x0010109b:  mov    0x8(%ebp),%eax
0x0010109e:  movzbl %al,%eax
0x001010a1:  cmp    $0xa,%eax
0x001010a4:  je     0x1010f2

----------------
IN: 
0x001010a6:  cmp    $0xd,%eax
0x001010a9:  je     0x101102

----------------
IN: 
0x001010ab:  cmp    $0x8,%eax
0x001010ae:  jne    0x10113c

----------------
IN: 
0x0010113c:  mov    0x10ee60,%ecx
0x00101142:  movzwl 0x10ee64,%eax
0x00101149:  lea    0x1(%eax),%edx
0x0010114c:  mov    %dx,0x10ee64
0x00101153:  movzwl %ax,%eax
0x00101156:  add    %eax,%eax
0x00101158:  lea    (%ecx,%eax,1),%edx
0x0010115b:  mov    0x8(%ebp),%eax
0x0010115e:  mov    %ax,(%edx)
0x00101161:  nop    
0x00101162:  movzwl 0x10ee64,%eax
0x00101169:  cmp    $0x7cf,%ax
0x0010116d:  jbe    0x1011ca

----------------
IN: 
0x001011ca:  movzwl 0x10ee66,%eax
0x001011d1:  movzwl %ax,%eax
0x001011d4:  mov    %ax,-0xe(%ebp)
0x001011d8:  movb   $0xe,-0xf(%ebp)
0x001011dc:  movzbl -0xf(%ebp),%eax
0x001011e0:  movzwl -0xe(%ebp),%edx
0x001011e4:  out    %al,(%dx)
0x001011e5:  movzwl 0x10ee64,%eax
0x001011ec:  shr    $0x8,%ax
0x001011f0:  movzbl %al,%eax
0x001011f3:  movzwl 0x10ee66,%edx
0x001011fa:  add    $0x1,%edx
0x001011fd:  movzwl %dx,%edx
0x00101200:  mov    %dx,-0x12(%ebp)
0x00101204:  mov    %al,-0x13(%ebp)
0x00101207:  movzbl -0x13(%ebp),%eax
0x0010120b:  movzwl -0x12(%ebp),%edx
0x0010120f:  out    %al,(%dx)
0x00101210:  movzwl 0x10ee66,%eax
0x00101217:  movzwl %ax,%eax
0x0010121a:  mov    %ax,-0x16(%ebp)
0x0010121e:  movb   $0xf,-0x17(%ebp)
0x00101222:  movzbl -0x17(%ebp),%eax
0x00101226:  movzwl -0x16(%ebp),%edx
0x0010122a:  out    %al,(%dx)
0x0010122b:  movzwl 0x10ee64,%eax
0x00101232:  movzbl %al,%eax
0x00101235:  movzwl 0x10ee66,%edx
0x0010123c:  add    $0x1,%edx
0x0010123f:  movzwl %dx,%edx
0x00101242:  mov    %dx,-0x1a(%ebp)
0x00101246:  mov    %al,-0x1b(%ebp)
0x00101249:  movzbl -0x1b(%ebp),%eax
0x0010124d:  movzwl -0x1a(%ebp),%edx
0x00101251:  out    %al,(%dx)
0x00101252:  add    $0x34,%esp
0x00101255:  pop    %ebx
0x00101256:  pop    %ebp
0x00101257:  ret    

----------------
IN: 
0x001015ad:  mov    0x8(%ebp),%eax
0x001015b0:  mov    %eax,(%esp)
0x001015b3:  call   0x1012b1

----------------
IN: 
0x001012b1:  push   %ebp
0x001012b2:  mov    %esp,%ebp
0x001012b4:  sub    $0x4,%esp
0x001012b7:  cmpl   $0x8,0x8(%ebp)
0x001012bb:  je     0x1012ca

----------------
IN: 
0x001012bd:  mov    0x8(%ebp),%eax
0x001012c0:  mov    %eax,(%esp)
0x001012c3:  call   0x101258

----------------
IN: 
0x00101258:  push   %ebp
0x00101259:  mov    %esp,%ebp
0x0010125b:  sub    $0x10,%esp
0x0010125e:  movl   $0x0,-0x4(%ebp)
0x00101265:  jmp    0x101270

----------------
IN: 
0x00101270:  movw   $0x3fd,-0x6(%ebp)
0x00101276:  movzwl -0x6(%ebp),%eax
0x0010127a:  mov    %eax,%edx
0x0010127c:  in     (%dx),%al
0x0010127d:  mov    %al,-0x7(%ebp)
0x00101280:  movzbl -0x7(%ebp),%eax
0x00101284:  movzbl %al,%eax
0x00101287:  and    $0x20,%eax
0x0010128a:  test   %eax,%eax
0x0010128c:  jne    0x101297

----------------
IN: 
0x00101297:  mov    0x8(%ebp),%eax
0x0010129a:  movzbl %al,%eax
0x0010129d:  movw   $0x3f8,-0xa(%ebp)
0x001012a3:  mov    %al,-0xb(%ebp)
0x001012a6:  movzbl -0xb(%ebp),%eax
0x001012aa:  movzwl -0xa(%ebp),%edx
0x001012ae:  out    %al,(%dx)
0x001012af:  leave  
0x001012b0:  ret    

----------------
IN: 
0x001012c8:  jmp    0x1012ee

----------------
IN: 
0x001012ee:  leave  
0x001012ef:  ret    

----------------
IN: 
0x001015b8:  leave  
0x001015b9:  ret    

----------------
IN: 
0x001002d0:  mov    0xc(%ebp),%eax
0x001002d3:  mov    (%eax),%eax
0x001002d5:  lea    0x1(%eax),%edx
0x001002d8:  mov    0xc(%ebp),%eax
0x001002db:  mov    %edx,(%eax)
0x001002dd:  leave  
0x001002de:  ret    

----------------
IN: 
0x00102d28:  subl   $0x1,-0x18(%ebp)
0x00102d2c:  mov    %esi,%eax
0x00102d2e:  lea    0x1(%eax),%esi
0x00102d31:  movzbl (%eax),%eax
0x00102d34:  movsbl %al,%ebx
0x00102d37:  test   %ebx,%ebx
0x00102d39:  je     0x102d4b

----------------
IN: 
0x00102d4b:  jmp    0x102d64

----------------
IN: 
0x00102d64:  cmpl   $0x0,-0x18(%ebp)
0x00102d68:  jg     0x102d4d

----------------
IN: 
0x00102d6a:  jmp    0x102edf

----------------
IN: 
0x00102edf:  nop    
0x00102ee0:  jmp    0x102b23

----------------
IN: 
0x00102b0b:  test   %ebx,%ebx
0x00102b0d:  jne    0x102b14

----------------
IN: 
0x00102b14:  mov    0xc(%ebp),%eax
0x00102b17:  mov    %eax,0x4(%esp)
0x00102b1b:  mov    %ebx,(%esp)
0x00102b1e:  mov    0x8(%ebp),%eax
0x00102b21:  call   *%eax

----------------
IN: 
0x001010f2:  movzwl 0x10ee64,%eax
0x001010f9:  add    $0x50,%eax
0x001010fc:  mov    %ax,0x10ee64
0x00101102:  movzwl 0x10ee64,%ebx
0x00101109:  movzwl 0x10ee64,%ecx
0x00101110:  movzwl %cx,%eax
0x00101113:  imul   $0xcccd,%eax,%eax
0x00101119:  shr    $0x10,%eax
0x0010111c:  mov    %eax,%edx
0x0010111e:  shr    $0x6,%dx
0x00101122:  mov    %edx,%eax
0x00101124:  shl    $0x2,%eax
0x00101127:  add    %edx,%eax
0x00101129:  shl    $0x4,%eax
0x0010112c:  sub    %eax,%ecx
0x0010112e:  mov    %ecx,%edx
0x00101130:  mov    %ebx,%eax
0x00101132:  sub    %edx,%eax
0x00101134:  mov    %ax,0x10ee64
0x0010113a:  jmp    0x101162

----------------
IN: 
0x00101162:  movzwl 0x10ee64,%eax
0x00101169:  cmp    $0x7cf,%ax
0x0010116d:  jbe    0x1011ca

----------------
IN: 
0x00102b0f:  jmp    0x102ee5

----------------
IN: 
0x00102ee5:  add    $0x40,%esp
0x00102ee8:  pop    %ebx
0x00102ee9:  pop    %esi
0x00102eea:  pop    %ebp
0x00102eeb:  ret    

----------------
IN: 
0x0010030d:  mov    -0xc(%ebp),%eax
0x00100310:  leave  
0x00100311:  ret    

----------------
IN: 
0x00100330:  mov    %eax,-0xc(%ebp)
0x00100333:  mov    -0xc(%ebp),%eax
0x00100336:  leave  
0x00100337:  ret    

----------------
IN: 
0x0010004b:  call   0x100846

----------------
IN: 
0x00100846:  push   %ebp
0x00100847:  mov    %esp,%ebp
0x00100849:  sub    $0x18,%esp
0x0010084c:  movl   $0x103536,(%esp)
0x00100853:  call   0x100312

----------------
IN: 
0x00100858:  movl   $0x100000,0x4(%esp)
0x00100860:  movl   $0x10354f,(%esp)
0x00100867:  call   0x100312

----------------
IN: 
0x00102b7f:  movb   $0x30,-0x25(%ebp)
0x00102b83:  jmp    0x102b55

----------------
IN: 
0x00102b55:  mov    0x10(%ebp),%eax
0x00102b58:  lea    0x1(%eax),%edx
0x00102b5b:  mov    %edx,0x10(%ebp)
0x00102b5e:  movzbl (%eax),%eax
0x00102b61:  movzbl %al,%ebx
0x00102b64:  lea    -0x23(%ebx),%eax
0x00102b67:  cmp    $0x55,%eax
0x00102b6a:  ja     0x102eb4

----------------
IN: 
0x00102b85:  movl   $0x0,-0x1c(%ebp)
0x00102b8c:  mov    -0x1c(%ebp),%edx
0x00102b8f:  mov    %edx,%eax
0x00102b91:  shl    $0x2,%eax
0x00102b94:  add    %edx,%eax
0x00102b96:  add    %eax,%eax
0x00102b98:  add    %ebx,%eax
0x00102b9a:  sub    $0x30,%eax
0x00102b9d:  mov    %eax,-0x1c(%ebp)
0x00102ba0:  mov    0x10(%ebp),%eax
0x00102ba3:  movzbl (%eax),%eax
0x00102ba6:  movsbl %al,%ebx
0x00102ba9:  cmp    $0x2f,%ebx
0x00102bac:  jle    0x102bb9

----------------
IN: 
0x00102bae:  cmp    $0x39,%ebx
0x00102bb1:  jg     0x102bb9

----------------
IN: 
0x00102bb9:  jmp    0x102bee

----------------
IN: 
0x00102bee:  cmpl   $0x0,-0x18(%ebp)
0x00102bf2:  jns    0x102c06

----------------
IN: 
0x00102bf4:  mov    -0x1c(%ebp),%eax
0x00102bf7:  mov    %eax,-0x18(%ebp)
0x00102bfa:  movl   $0xffffffff,-0x1c(%ebp)
0x00102c01:  jmp    0x102b55

----------------
IN: 
0x00102e4c:  mov    -0x20(%ebp),%eax
0x00102e4f:  mov    %eax,0x4(%esp)
0x00102e53:  lea    0x14(%ebp),%eax
0x00102e56:  mov    %eax,(%esp)
0x00102e59:  call   0x102a3d

----------------
IN: 
0x00102a3d:  push   %ebp
0x00102a3e:  mov    %esp,%ebp
0x00102a40:  cmpl   $0x1,0xc(%ebp)
0x00102a44:  jle    0x102a5a

----------------
IN: 
0x00102a5a:  cmpl   $0x0,0xc(%ebp)
0x00102a5e:  je     0x102a76

----------------
IN: 
0x00102a76:  mov    0x8(%ebp),%eax
0x00102a79:  mov    (%eax),%eax
0x00102a7b:  lea    0x4(%eax),%ecx
0x00102a7e:  mov    0x8(%ebp),%edx
0x00102a81:  mov    %ecx,(%edx)
0x00102a83:  mov    (%eax),%eax
0x00102a85:  mov    $0x0,%edx
0x00102a8a:  pop    %ebp
0x00102a8b:  ret    

----------------
IN: 
0x00102e5e:  mov    %eax,-0x10(%ebp)
0x00102e61:  mov    %edx,-0xc(%ebp)
0x00102e64:  movl   $0x10,-0x14(%ebp)
0x00102e6b:  movsbl -0x25(%ebp),%edx
0x00102e6f:  mov    -0x14(%ebp),%eax
0x00102e72:  mov    %edx,0x18(%esp)
0x00102e76:  mov    -0x18(%ebp),%edx
0x00102e79:  mov    %edx,0x14(%esp)
0x00102e7d:  mov    %eax,0x10(%esp)
0x00102e81:  mov    -0x10(%ebp),%eax
0x00102e84:  mov    -0xc(%ebp),%edx
0x00102e87:  mov    %eax,0x8(%esp)
0x00102e8b:  mov    %edx,0xc(%esp)
0x00102e8f:  mov    0xc(%ebp),%eax
0x00102e92:  mov    %eax,0x4(%esp)
0x00102e96:  mov    0x8(%ebp),%eax
0x00102e99:  mov    %eax,(%esp)
0x00102e9c:  call   0x102938

----------------
IN: 
0x00102938:  push   %ebp
0x00102939:  mov    %esp,%ebp
0x0010293b:  sub    $0x58,%esp
0x0010293e:  mov    0x10(%ebp),%eax
0x00102941:  mov    %eax,-0x30(%ebp)
0x00102944:  mov    0x14(%ebp),%eax
0x00102947:  mov    %eax,-0x2c(%ebp)
0x0010294a:  mov    -0x30(%ebp),%eax
0x0010294d:  mov    -0x2c(%ebp),%edx
0x00102950:  mov    %eax,-0x18(%ebp)
0x00102953:  mov    %edx,-0x14(%ebp)
0x00102956:  mov    0x18(%ebp),%eax
0x00102959:  mov    %eax,-0x1c(%ebp)
0x0010295c:  mov    -0x18(%ebp),%eax
0x0010295f:  mov    -0x14(%ebp),%edx
0x00102962:  mov    %eax,-0x20(%ebp)
0x00102965:  mov    %edx,-0x10(%ebp)
0x00102968:  mov    -0x10(%ebp),%eax
0x0010296b:  mov    %eax,-0xc(%ebp)
0x0010296e:  cmpl   $0x0,-0x10(%ebp)
0x00102972:  je     0x102990

----------------
IN: 
0x00102990:  mov    -0x20(%ebp),%eax
0x00102993:  mov    -0xc(%ebp),%edx
0x00102996:  divl   -0x1c(%ebp)
0x00102999:  mov    %eax,-0x20(%ebp)
0x0010299c:  mov    %edx,-0x24(%ebp)
0x0010299f:  mov    -0x20(%ebp),%eax
0x001029a2:  mov    -0x10(%ebp),%edx
0x001029a5:  mov    %eax,-0x18(%ebp)
0x001029a8:  mov    %edx,-0x14(%ebp)
0x001029ab:  mov    -0x24(%ebp),%eax
0x001029ae:  mov    %eax,-0x28(%ebp)
0x001029b1:  mov    0x18(%ebp),%eax
0x001029b4:  mov    $0x0,%edx
0x001029b9:  cmp    -0x2c(%ebp),%edx
0x001029bc:  ja     0x102a14

----------------
IN: 
0x001029be:  cmp    -0x2c(%ebp),%edx
0x001029c1:  jb     0x1029c8

----------------
IN: 
0x001029c3:  cmp    -0x30(%ebp),%eax
0x001029c6:  ja     0x102a14

----------------
IN: 
0x001029c8:  mov    0x1c(%ebp),%eax
0x001029cb:  lea    -0x1(%eax),%edx
0x001029ce:  mov    0x20(%ebp),%eax
0x001029d1:  mov    %eax,0x18(%esp)
0x001029d5:  mov    %edx,0x14(%esp)
0x001029d9:  mov    0x18(%ebp),%eax
0x001029dc:  mov    %eax,0x10(%esp)
0x001029e0:  mov    -0x18(%ebp),%eax
0x001029e3:  mov    -0x14(%ebp),%edx
0x001029e6:  mov    %eax,0x8(%esp)
0x001029ea:  mov    %edx,0xc(%esp)
0x001029ee:  mov    0xc(%ebp),%eax
0x001029f1:  mov    %eax,0x4(%esp)
0x001029f5:  mov    0x8(%ebp),%eax
0x001029f8:  mov    %eax,(%esp)
0x001029fb:  call   0x102938

----------------
IN: 
0x00102a14:  subl   $0x1,0x1c(%ebp)
0x00102a18:  cmpl   $0x0,0x1c(%ebp)
0x00102a1c:  jg     0x102a02

----------------
IN: 
0x00102a02:  mov    0xc(%ebp),%eax
0x00102a05:  mov    %eax,0x4(%esp)
0x00102a09:  mov    0x20(%ebp),%eax
0x00102a0c:  mov    %eax,(%esp)
0x00102a0f:  mov    0x8(%ebp),%eax
0x00102a12:  call   *%eax

----------------
IN: 
0x00102a1e:  mov    -0x28(%ebp),%eax
0x00102a21:  add    $0x103c10,%eax
0x00102a26:  movzbl (%eax),%eax
0x00102a29:  movsbl %al,%eax
0x00102a2c:  mov    0xc(%ebp),%edx
0x00102a2f:  mov    %edx,0x4(%esp)
0x00102a33:  mov    %eax,(%esp)
0x00102a36:  mov    0x8(%ebp),%eax
0x00102a39:  call   *%eax

----------------
IN: 
0x00102a3b:  leave  
0x00102a3c:  ret    

----------------
IN: 
0x00102a00:  jmp    0x102a1e

----------------
IN: 
0x00102ea1:  jmp    0x102edf

----------------
IN: 
0x0010086c:  movl   $0x103471,0x4(%esp)
0x00100874:  movl   $0x103567,(%esp)
0x0010087b:  call   0x100312

----------------
IN: 
0x00100880:  movl   $0x10ea16,0x4(%esp)
0x00100888:  movl   $0x10357f,(%esp)
0x0010088f:  call   0x100312

----------------
IN: 
0x00100894:  movl   $0x10fd20,0x4(%esp)
0x0010089c:  movl   $0x103597,(%esp)
0x001008a3:  call   0x100312

----------------
IN: 
0x001008a8:  mov    $0x10fd20,%eax
0x001008ad:  lea    0x3ff(%eax),%edx
0x001008b3:  mov    $0x100000,%eax
0x001008b8:  sub    %eax,%edx
0x001008ba:  mov    %edx,%eax
0x001008bc:  lea    0x3ff(%eax),%edx
0x001008c2:  test   %eax,%eax
0x001008c4:  cmovs  %edx,%eax
0x001008c7:  sar    $0xa,%eax
0x001008ca:  mov    %eax,0x4(%esp)
0x001008ce:  movl   $0x1035b0,(%esp)
0x001008d5:  call   0x100312

----------------
IN: 
0x00102d6f:  mov    -0x20(%ebp),%eax
0x00102d72:  mov    %eax,0x4(%esp)
0x00102d76:  lea    0x14(%ebp),%eax
0x00102d79:  mov    %eax,(%esp)
0x00102d7c:  call   0x102a8c

----------------
IN: 
0x00102a8c:  push   %ebp
0x00102a8d:  mov    %esp,%ebp
0x00102a8f:  cmpl   $0x1,0xc(%ebp)
0x00102a93:  jle    0x102aa9

----------------
IN: 
0x00102aa9:  cmpl   $0x0,0xc(%ebp)
0x00102aad:  je     0x102ac1

----------------
IN: 
0x00102ac1:  mov    0x8(%ebp),%eax
0x00102ac4:  mov    (%eax),%eax
0x00102ac6:  lea    0x4(%eax),%ecx
0x00102ac9:  mov    0x8(%ebp),%edx
0x00102acc:  mov    %ecx,(%edx)
0x00102ace:  mov    (%eax),%eax
0x00102ad0:  cltd   
0x00102ad1:  pop    %ebp
0x00102ad2:  ret    

----------------
IN: 
0x00102d81:  mov    %eax,-0x10(%ebp)
0x00102d84:  mov    %edx,-0xc(%ebp)
0x00102d87:  mov    -0x10(%ebp),%eax
0x00102d8a:  mov    -0xc(%ebp),%edx
0x00102d8d:  test   %edx,%edx
0x00102d8f:  jns    0x102db7

----------------
IN: 
0x00102db7:  movl   $0xa,-0x14(%ebp)
0x00102dbe:  jmp    0x102e6b

----------------
IN: 
0x00102e6b:  movsbl -0x25(%ebp),%edx
0x00102e6f:  mov    -0x14(%ebp),%eax
0x00102e72:  mov    %edx,0x18(%esp)
0x00102e76:  mov    -0x18(%ebp),%edx
0x00102e79:  mov    %edx,0x14(%esp)
0x00102e7d:  mov    %eax,0x10(%esp)
0x00102e81:  mov    -0x10(%ebp),%eax
0x00102e84:  mov    -0xc(%ebp),%edx
0x00102e87:  mov    %eax,0x8(%esp)
0x00102e8b:  mov    %edx,0xc(%esp)
0x00102e8f:  mov    0xc(%ebp),%eax
0x00102e92:  mov    %eax,0x4(%esp)
0x00102e96:  mov    0x8(%ebp),%eax
0x00102e99:  mov    %eax,(%esp)
0x00102e9c:  call   0x102938

----------------
IN: 
0x001008da:  leave  
0x001008db:  ret    

----------------
IN: 
0x00100050:  call   0x1000db

----------------
IN: 
0x001000db:  push   %ebp
0x001000dc:  mov    %esp,%ebp
0x001000de:  sub    $0x18,%esp
0x001000e1:  mov    $0x100000,%eax
0x001000e6:  movl   $0xffff0000,0x8(%esp)
0x001000ee:  mov    %eax,0x4(%esp)
0x001000f2:  movl   $0x0,(%esp)
0x001000f9:  call   0x1000c1

----------------
IN: 
0x001000c1:  push   %ebp
0x001000c2:  mov    %esp,%ebp
0x001000c4:  sub    $0x18,%esp
0x001000c7:  mov    0x10(%ebp),%eax
0x001000ca:  mov    %eax,0x4(%esp)
0x001000ce:  mov    0x8(%ebp),%eax
0x001000d1:  mov    %eax,(%esp)
0x001000d4:  call   0x100094

----------------
IN: 
0x00100094:  push   %ebp
0x00100095:  mov    %esp,%ebp
0x00100097:  push   %ebx
0x00100098:  sub    $0x14,%esp
0x0010009b:  lea    0xc(%ebp),%ebx
0x0010009e:  mov    0xc(%ebp),%ecx
0x001000a1:  lea    0x8(%ebp),%edx
0x001000a4:  mov    0x8(%ebp),%eax
0x001000a7:  mov    %ebx,0xc(%esp)
0x001000ab:  mov    %ecx,0x8(%esp)
0x001000af:  mov    %edx,0x4(%esp)
0x001000b3:  mov    %eax,(%esp)
0x001000b6:  call   0x100070

----------------
IN: 
0x00100070:  push   %ebp
0x00100071:  mov    %esp,%ebp
0x00100073:  sub    $0x18,%esp
0x00100076:  movl   $0x0,0x8(%esp)
0x0010007e:  movl   $0x0,0x4(%esp)
0x00100086:  movl   $0x0,(%esp)
0x0010008d:  call   0x100c8a

----------------
IN: 
0x00100c8a:  push   %ebp
0x00100c8b:  mov    %esp,%ebp
0x00100c8d:  sub    $0x8,%esp
0x00100c90:  call   0x100990

----------------
IN: 
0x00100990:  push   %ebp
0x00100991:  mov    %esp,%ebp
0x00100993:  sub    $0x38,%esp
0x00100996:  mov    %ebp,%eax
0x00100998:  mov    %eax,-0x20(%ebp)
0x0010099b:  mov    -0x20(%ebp),%eax
0x0010099e:  mov    %eax,-0xc(%ebp)
0x001009a1:  call   0x10097f

----------------
IN: 
0x0010097f:  push   %ebp
0x00100980:  mov    %esp,%ebp
0x00100982:  sub    $0x10,%esp
0x00100985:  mov    0x4(%ebp),%eax
0x00100988:  mov    %eax,-0x4(%ebp)
0x0010098b:  mov    -0x4(%ebp),%eax
0x0010098e:  leave  
0x0010098f:  ret    

----------------
IN: 
0x001009a6:  mov    %eax,-0x10(%ebp)
0x001009a9:  movl   $0x0,-0x14(%ebp)
0x001009b0:  jmp    0x100a3d

----------------
IN: 
0x00100a3d:  cmpl   $0x0,-0xc(%ebp)
0x00100a41:  je     0x100a4d

----------------
IN: 
0x00100a43:  cmpl   $0x13,-0x14(%ebp)
0x00100a47:  jle    0x1009b5

----------------
IN: 
0x001009b5:  mov    -0x10(%ebp),%eax
0x001009b8:  mov    %eax,0x8(%esp)
0x001009bc:  mov    -0xc(%ebp),%eax
0x001009bf:  mov    %eax,0x4(%esp)
0x001009c3:  movl   $0x103608,(%esp)
0x001009ca:  call   0x100312

----------------
IN: 
0x001009cf:  mov    -0xc(%ebp),%eax
0x001009d2:  add    $0x8,%eax
0x001009d5:  mov    %eax,-0x1c(%ebp)
0x001009d8:  movl   $0x0,-0x18(%ebp)
0x001009df:  jmp    0x100a06

----------------
IN: 
0x00100a06:  cmpl   $0x3,-0x18(%ebp)
0x00100a0a:  jle    0x1009e1

----------------
IN: 
0x001009e1:  mov    -0x18(%ebp),%eax
0x001009e4:  lea    0x0(,%eax,4),%edx
0x001009eb:  mov    -0x1c(%ebp),%eax
0x001009ee:  add    %edx,%eax
0x001009f0:  mov    (%eax),%eax
0x001009f2:  mov    %eax,0x4(%esp)
0x001009f6:  movl   $0x103624,(%esp)
0x001009fd:  call   0x100312

----------------
IN: 
0x00100a02:  addl   $0x1,-0x18(%ebp)
0x00100a06:  cmpl   $0x3,-0x18(%ebp)
0x00100a0a:  jle    0x1009e1

----------------
IN: 
0x00100a0c:  movl   $0x10362c,(%esp)
0x00100a13:  call   0x100312

----------------
IN: 
0x00100a18:  mov    -0x10(%ebp),%eax
0x00100a1b:  sub    $0x1,%eax
0x00100a1e:  mov    %eax,(%esp)
0x00100a21:  call   0x1008dc

----------------
IN: 
0x001008dc:  push   %ebp
0x001008dd:  mov    %esp,%ebp
0x001008df:  sub    $0x148,%esp
0x001008e5:  lea    -0x24(%ebp),%eax
0x001008e8:  mov    %eax,0x4(%esp)
0x001008ec:  mov    0x8(%ebp),%eax
0x001008ef:  mov    %eax,(%esp)
0x001008f2:  call   0x100509

----------------
IN: 
0x00100509:  push   %ebp
0x0010050a:  mov    %esp,%ebp
0x0010050c:  sub    $0x58,%esp
0x0010050f:  mov    0xc(%ebp),%eax
0x00100512:  movl   $0x10352c,(%eax)
0x00100518:  mov    0xc(%ebp),%eax
0x0010051b:  movl   $0x0,0x4(%eax)
0x00100522:  mov    0xc(%ebp),%eax
0x00100525:  movl   $0x10352c,0x8(%eax)
0x0010052c:  mov    0xc(%ebp),%eax
0x0010052f:  movl   $0x9,0xc(%eax)
0x00100536:  mov    0xc(%ebp),%eax
0x00100539:  mov    0x8(%ebp),%edx
0x0010053c:  mov    %edx,0x10(%eax)
0x0010053f:  mov    0xc(%ebp),%eax
0x00100542:  movl   $0x0,0x14(%eax)
0x00100549:  movl   $0x103d8c,-0xc(%ebp)
0x00100550:  movl   $0x10b4a8,-0x10(%ebp)
0x00100557:  movl   $0x10b4a9,-0x14(%ebp)
0x0010055e:  movl   $0x10d494,-0x18(%ebp)
0x00100565:  mov    -0x18(%ebp),%eax
0x00100568:  cmp    -0x14(%ebp),%eax
0x0010056b:  jbe    0x10057a

----------------
IN: 
0x0010056d:  mov    -0x18(%ebp),%eax
0x00100570:  sub    $0x1,%eax
0x00100573:  movzbl (%eax),%eax
0x00100576:  test   %al,%al
0x00100578:  je     0x100584

----------------
IN: 
0x00100584:  movl   $0x0,-0x1c(%ebp)
0x0010058b:  mov    -0x10(%ebp),%edx
0x0010058e:  mov    -0xc(%ebp),%eax
0x00100591:  sub    %eax,%edx
0x00100593:  mov    %edx,%eax
0x00100595:  sar    $0x2,%eax
0x00100598:  imul   $0xaaaaaaab,%eax,%eax
0x0010059e:  sub    $0x1,%eax
0x001005a1:  mov    %eax,-0x20(%ebp)
0x001005a4:  mov    0x8(%ebp),%eax
0x001005a7:  mov    %eax,0x10(%esp)
0x001005ab:  movl   $0x64,0xc(%esp)
0x001005b3:  lea    -0x20(%ebp),%eax
0x001005b6:  mov    %eax,0x8(%esp)
0x001005ba:  lea    -0x1c(%ebp),%eax
0x001005bd:  mov    %eax,0x4(%esp)
0x001005c1:  mov    -0xc(%ebp),%eax
0x001005c4:  mov    %eax,(%esp)
0x001005c7:  call   0x1003b3

----------------
IN: 
0x001003b3:  push   %ebp
0x001003b4:  mov    %esp,%ebp
0x001003b6:  sub    $0x20,%esp
0x001003b9:  mov    0xc(%ebp),%eax
0x001003bc:  mov    (%eax),%eax
0x001003be:  mov    %eax,-0x4(%ebp)
0x001003c1:  mov    0x10(%ebp),%eax
0x001003c4:  mov    (%eax),%eax
0x001003c6:  mov    %eax,-0x8(%ebp)
0x001003c9:  movl   $0x0,-0xc(%ebp)
0x001003d0:  jmp    0x1004a7

----------------
IN: 
0x001004a7:  mov    -0x4(%ebp),%eax
0x001004aa:  cmp    -0x8(%ebp),%eax
0x001004ad:  jle    0x1003d5

----------------
IN: 
0x001003d5:  mov    -0x8(%ebp),%eax
0x001003d8:  mov    -0x4(%ebp),%edx
0x001003db:  add    %edx,%eax
0x001003dd:  mov    %eax,%edx
0x001003df:  shr    $0x1f,%edx
0x001003e2:  add    %edx,%eax
0x001003e4:  sar    %eax
0x001003e6:  mov    %eax,-0x14(%ebp)
0x001003e9:  mov    -0x14(%ebp),%eax
0x001003ec:  mov    %eax,-0x10(%ebp)
0x001003ef:  jmp    0x1003f5

----------------
IN: 
0x001003f5:  mov    -0x10(%ebp),%eax
0x001003f8:  cmp    -0x4(%ebp),%eax
0x001003fb:  jl     0x10041c

----------------
IN: 
0x001003fd:  mov    -0x10(%ebp),%edx
0x00100400:  mov    %edx,%eax
0x00100402:  add    %eax,%eax
0x00100404:  add    %edx,%eax
0x00100406:  shl    $0x2,%eax
0x00100409:  mov    %eax,%edx
0x0010040b:  mov    0x8(%ebp),%eax
0x0010040e:  add    %edx,%eax
0x00100410:  movzbl 0x4(%eax),%eax
0x00100414:  movzbl %al,%eax
0x00100417:  cmp    0x14(%ebp),%eax
0x0010041a:  jne    0x1003f1

----------------
IN: 
0x001003f1:  subl   $0x1,-0x10(%ebp)
0x001003f5:  mov    -0x10(%ebp),%eax
0x001003f8:  cmp    -0x4(%ebp),%eax
0x001003fb:  jl     0x10041c

----------------
IN: 
0x0010041c:  mov    -0x10(%ebp),%eax
0x0010041f:  cmp    -0x4(%ebp),%eax
0x00100422:  jge    0x10042f

----------------
IN: 
0x0010042f:  movl   $0x1,-0xc(%ebp)
0x00100436:  mov    -0x10(%ebp),%edx
0x00100439:  mov    %edx,%eax
0x0010043b:  add    %eax,%eax
0x0010043d:  add    %edx,%eax
0x0010043f:  shl    $0x2,%eax
0x00100442:  mov    %eax,%edx
0x00100444:  mov    0x8(%ebp),%eax
0x00100447:  add    %edx,%eax
0x00100449:  mov    0x8(%eax),%eax
0x0010044c:  cmp    0x18(%ebp),%eax
0x0010044f:  jae    0x100464

----------------
IN: 
0x00100464:  mov    -0x10(%ebp),%edx
0x00100467:  mov    %edx,%eax
0x00100469:  add    %eax,%eax
0x0010046b:  add    %edx,%eax
0x0010046d:  shl    $0x2,%eax
0x00100470:  mov    %eax,%edx
0x00100472:  mov    0x8(%ebp),%eax
0x00100475:  add    %edx,%eax
0x00100477:  mov    0x8(%eax),%eax
0x0010047a:  cmp    0x18(%ebp),%eax
0x0010047d:  jbe    0x100495

----------------
IN: 
0x0010047f:  mov    -0x10(%ebp),%eax
0x00100482:  lea    -0x1(%eax),%edx
0x00100485:  mov    0x10(%ebp),%eax
0x00100488:  mov    %edx,(%eax)
0x0010048a:  mov    -0x10(%ebp),%eax
0x0010048d:  sub    $0x1,%eax
0x00100490:  mov    %eax,-0x8(%ebp)
0x00100493:  jmp    0x1004a7

----------------
IN: 
0x00100451:  mov    0xc(%ebp),%eax
0x00100454:  mov    -0x10(%ebp),%edx
0x00100457:  mov    %edx,(%eax)
0x00100459:  mov    -0x14(%ebp),%eax
0x0010045c:  add    $0x1,%eax
0x0010045f:  mov    %eax,-0x4(%ebp)
0x00100462:  jmp    0x1004a7

----------------
IN: 
0x00100424:  mov    -0x14(%ebp),%eax
0x00100427:  add    $0x1,%eax
0x0010042a:  mov    %eax,-0x4(%ebp)
0x0010042d:  jmp    0x1004a7

----------------
IN: 
0x001004b3:  cmpl   $0x0,-0xc(%ebp)
0x001004b7:  jne    0x1004c8

----------------
IN: 
0x001004c8:  mov    0x10(%ebp),%eax
0x001004cb:  mov    (%eax),%eax
0x001004cd:  mov    %eax,-0x4(%ebp)
0x001004d0:  jmp    0x1004d6

----------------
IN: 
0x001004d6:  mov    0xc(%ebp),%eax
0x001004d9:  mov    (%eax),%eax
0x001004db:  cmp    -0x4(%ebp),%eax
0x001004de:  jge    0x1004ff

----------------
IN: 
0x001004e0:  mov    -0x4(%ebp),%edx
0x001004e3:  mov    %edx,%eax
0x001004e5:  add    %eax,%eax
0x001004e7:  add    %edx,%eax
0x001004e9:  shl    $0x2,%eax
0x001004ec:  mov    %eax,%edx
0x001004ee:  mov    0x8(%ebp),%eax
0x001004f1:  add    %edx,%eax
0x001004f3:  movzbl 0x4(%eax),%eax
0x001004f7:  movzbl %al,%eax
0x001004fa:  cmp    0x14(%ebp),%eax
0x001004fd:  jne    0x1004d2

----------------
IN: 
0x001004d2:  subl   $0x1,-0x4(%ebp)
0x001004d6:  mov    0xc(%ebp),%eax
0x001004d9:  mov    (%eax),%eax
0x001004db:  cmp    -0x4(%ebp),%eax
0x001004de:  jge    0x1004ff

----------------
IN: 
0x001004ff:  mov    0xc(%ebp),%eax
0x00100502:  mov    -0x4(%ebp),%edx
0x00100505:  mov    %edx,(%eax)
0x00100507:  leave  
0x00100508:  ret    

----------------
IN: 
0x001005cc:  mov    -0x1c(%ebp),%eax
0x001005cf:  test   %eax,%eax
0x001005d1:  jne    0x1005dd

----------------
IN: 
0x001005dd:  mov    -0x1c(%ebp),%eax
0x001005e0:  mov    %eax,-0x24(%ebp)
0x001005e3:  mov    -0x20(%ebp),%eax
0x001005e6:  mov    %eax,-0x28(%ebp)
0x001005e9:  mov    0x8(%ebp),%eax
0x001005ec:  mov    %eax,0x10(%esp)
0x001005f0:  movl   $0x24,0xc(%esp)
0x001005f8:  lea    -0x28(%ebp),%eax
0x001005fb:  mov    %eax,0x8(%esp)
0x001005ff:  lea    -0x24(%ebp),%eax
0x00100602:  mov    %eax,0x4(%esp)
0x00100606:  mov    -0xc(%ebp),%eax
0x00100609:  mov    %eax,(%esp)
0x0010060c:  call   0x1003b3

----------------
IN: 
0x00100611:  mov    -0x24(%ebp),%edx
0x00100614:  mov    -0x28(%ebp),%eax
0x00100617:  cmp    %eax,%edx
0x00100619:  jg     0x100697

----------------
IN: 
0x0010061b:  mov    -0x24(%ebp),%eax
0x0010061e:  mov    %eax,%edx
0x00100620:  mov    %edx,%eax
0x00100622:  add    %eax,%eax
0x00100624:  add    %edx,%eax
0x00100626:  shl    $0x2,%eax
0x00100629:  mov    %eax,%edx
0x0010062b:  mov    -0xc(%ebp),%eax
0x0010062e:  add    %edx,%eax
0x00100630:  mov    (%eax),%edx
0x00100632:  mov    -0x18(%ebp),%ecx
0x00100635:  mov    -0x14(%ebp),%eax
0x00100638:  sub    %eax,%ecx
0x0010063a:  mov    %ecx,%eax
0x0010063c:  cmp    %eax,%edx
0x0010063e:  jae    0x100662

----------------
IN: 
0x00100640:  mov    -0x24(%ebp),%eax
0x00100643:  mov    %eax,%edx
0x00100645:  mov    %edx,%eax
0x00100647:  add    %eax,%eax
0x00100649:  add    %edx,%eax
0x0010064b:  shl    $0x2,%eax
0x0010064e:  mov    %eax,%edx
0x00100650:  mov    -0xc(%ebp),%eax
0x00100653:  add    %edx,%eax
0x00100655:  mov    (%eax),%edx
0x00100657:  mov    -0x14(%ebp),%eax
0x0010065a:  add    %eax,%edx
0x0010065c:  mov    0xc(%ebp),%eax
0x0010065f:  mov    %edx,0x8(%eax)
0x00100662:  mov    -0x24(%ebp),%eax
0x00100665:  mov    %eax,%edx
0x00100667:  mov    %edx,%eax
0x00100669:  add    %eax,%eax
0x0010066b:  add    %edx,%eax
0x0010066d:  shl    $0x2,%eax
0x00100670:  mov    %eax,%edx
0x00100672:  mov    -0xc(%ebp),%eax
0x00100675:  add    %edx,%eax
0x00100677:  mov    0x8(%eax),%edx
0x0010067a:  mov    0xc(%ebp),%eax
0x0010067d:  mov    %edx,0x10(%eax)
0x00100680:  mov    0xc(%ebp),%eax
0x00100683:  mov    0x10(%eax),%eax
0x00100686:  sub    %eax,0x8(%ebp)
0x00100689:  mov    -0x24(%ebp),%eax
0x0010068c:  mov    %eax,-0x2c(%ebp)
0x0010068f:  mov    -0x28(%ebp),%eax
0x00100692:  mov    %eax,-0x30(%ebp)
0x00100695:  jmp    0x1006ac

----------------
IN: 
0x001006ac:  mov    0xc(%ebp),%eax
0x001006af:  mov    0x8(%eax),%eax
0x001006b2:  movl   $0x3a,0x4(%esp)
0x001006ba:  mov    %eax,(%esp)
0x001006bd:  call   0x10315c

----------------
IN: 
0x0010315c:  push   %ebp
0x0010315d:  mov    %esp,%ebp
0x0010315f:  sub    $0x4,%esp
0x00103162:  mov    0xc(%ebp),%eax
0x00103165:  mov    %al,-0x4(%ebp)
0x00103168:  jmp    0x10317b

----------------
IN: 
0x0010317b:  mov    0x8(%ebp),%eax
0x0010317e:  movzbl (%eax),%eax
0x00103181:  test   %al,%al
0x00103183:  jne    0x10316a

----------------
IN: 
0x0010316a:  mov    0x8(%ebp),%eax
0x0010316d:  movzbl (%eax),%eax
0x00103170:  cmp    -0x4(%ebp),%al
0x00103173:  jne    0x103177

----------------
IN: 
0x00103177:  addl   $0x1,0x8(%ebp)
0x0010317b:  mov    0x8(%ebp),%eax
0x0010317e:  movzbl (%eax),%eax
0x00103181:  test   %al,%al
0x00103183:  jne    0x10316a

----------------
IN: 
0x00103175:  jmp    0x103185

----------------
IN: 
0x00103185:  mov    0x8(%ebp),%eax
0x00103188:  leave  
0x00103189:  ret    

----------------
IN: 
0x001006c2:  mov    %eax,%edx
0x001006c4:  mov    0xc(%ebp),%eax
0x001006c7:  mov    0x8(%eax),%eax
0x001006ca:  sub    %eax,%edx
0x001006cc:  mov    0xc(%ebp),%eax
0x001006cf:  mov    %edx,0xc(%eax)
0x001006d2:  mov    0x8(%ebp),%eax
0x001006d5:  mov    %eax,0x10(%esp)
0x001006d9:  movl   $0x44,0xc(%esp)
0x001006e1:  lea    -0x30(%ebp),%eax
0x001006e4:  mov    %eax,0x8(%esp)
0x001006e8:  lea    -0x2c(%ebp),%eax
0x001006eb:  mov    %eax,0x4(%esp)
0x001006ef:  mov    -0xc(%ebp),%eax
0x001006f2:  mov    %eax,(%esp)
0x001006f5:  call   0x1003b3

----------------
IN: 
0x001006fa:  mov    -0x2c(%ebp),%edx
0x001006fd:  mov    -0x30(%ebp),%eax
0x00100700:  cmp    %eax,%edx
0x00100702:  jg     0x100728

----------------
IN: 
0x00100704:  mov    -0x30(%ebp),%eax
0x00100707:  mov    %eax,%edx
0x00100709:  mov    %edx,%eax
0x0010070b:  add    %eax,%eax
0x0010070d:  add    %edx,%eax
0x0010070f:  shl    $0x2,%eax
0x00100712:  mov    %eax,%edx
0x00100714:  mov    -0xc(%ebp),%eax
0x00100717:  add    %edx,%eax
0x00100719:  movzwl 0x6(%eax),%eax
0x0010071d:  movzwl %ax,%edx
0x00100720:  mov    0xc(%ebp),%eax
0x00100723:  mov    %edx,0x4(%eax)
0x00100726:  jmp    0x10073b

----------------
IN: 
0x0010073b:  mov    -0x2c(%ebp),%edx
0x0010073e:  mov    -0x1c(%ebp),%eax
0x00100741:  cmp    %eax,%edx
0x00100743:  jl     0x10079b

----------------
IN: 
0x00100745:  mov    -0x2c(%ebp),%eax
0x00100748:  mov    %eax,%edx
0x0010074a:  mov    %edx,%eax
0x0010074c:  add    %eax,%eax
0x0010074e:  add    %edx,%eax
0x00100750:  shl    $0x2,%eax
0x00100753:  mov    %eax,%edx
0x00100755:  mov    -0xc(%ebp),%eax
0x00100758:  add    %edx,%eax
0x0010075a:  movzbl 0x4(%eax),%eax
0x0010075e:  cmp    $0x84,%al
0x00100760:  je     0x10079b

----------------
IN: 
0x00100762:  mov    -0x2c(%ebp),%eax
0x00100765:  mov    %eax,%edx
0x00100767:  mov    %edx,%eax
0x00100769:  add    %eax,%eax
0x0010076b:  add    %edx,%eax
0x0010076d:  shl    $0x2,%eax
0x00100770:  mov    %eax,%edx
0x00100772:  mov    -0xc(%ebp),%eax
0x00100775:  add    %edx,%eax
0x00100777:  movzbl 0x4(%eax),%eax
0x0010077b:  cmp    $0x64,%al
0x0010077d:  jne    0x100732

----------------
IN: 
0x00100732:  mov    -0x2c(%ebp),%eax
0x00100735:  sub    $0x1,%eax
0x00100738:  mov    %eax,-0x2c(%ebp)
0x0010073b:  mov    -0x2c(%ebp),%edx
0x0010073e:  mov    -0x1c(%ebp),%eax
0x00100741:  cmp    %eax,%edx
0x00100743:  jl     0x10079b

----------------
IN: 
0x0010079b:  mov    -0x2c(%ebp),%edx
0x0010079e:  mov    -0x1c(%ebp),%eax
0x001007a1:  cmp    %eax,%edx
0x001007a3:  jl     0x1007eb

----------------
IN: 
0x001007a5:  mov    -0x2c(%ebp),%eax
0x001007a8:  mov    %eax,%edx
0x001007aa:  mov    %edx,%eax
0x001007ac:  add    %eax,%eax
0x001007ae:  add    %edx,%eax
0x001007b0:  shl    $0x2,%eax
0x001007b3:  mov    %eax,%edx
0x001007b5:  mov    -0xc(%ebp),%eax
0x001007b8:  add    %edx,%eax
0x001007ba:  mov    (%eax),%edx
0x001007bc:  mov    -0x18(%ebp),%ecx
0x001007bf:  mov    -0x14(%ebp),%eax
0x001007c2:  sub    %eax,%ecx
0x001007c4:  mov    %ecx,%eax
0x001007c6:  cmp    %eax,%edx
0x001007c8:  jae    0x1007eb

----------------
IN: 
0x001007ca:  mov    -0x2c(%ebp),%eax
0x001007cd:  mov    %eax,%edx
0x001007cf:  mov    %edx,%eax
0x001007d1:  add    %eax,%eax
0x001007d3:  add    %edx,%eax
0x001007d5:  shl    $0x2,%eax
0x001007d8:  mov    %eax,%edx
0x001007da:  mov    -0xc(%ebp),%eax
0x001007dd:  add    %edx,%eax
0x001007df:  mov    (%eax),%edx
0x001007e1:  mov    -0x14(%ebp),%eax
0x001007e4:  add    %eax,%edx
0x001007e6:  mov    0xc(%ebp),%eax
0x001007e9:  mov    %edx,(%eax)
0x001007eb:  mov    -0x24(%ebp),%edx
0x001007ee:  mov    -0x28(%ebp),%eax
0x001007f1:  cmp    %eax,%edx
0x001007f3:  jge    0x10083f

----------------
IN: 
0x001007f5:  mov    -0x24(%ebp),%eax
0x001007f8:  add    $0x1,%eax
0x001007fb:  mov    %eax,-0x2c(%ebp)
0x001007fe:  jmp    0x100818

----------------
IN: 
0x00100818:  mov    -0x2c(%ebp),%edx
0x0010081b:  mov    -0x28(%ebp),%eax
0x0010081e:  cmp    %eax,%edx
0x00100820:  jge    0x10083f

----------------
IN: 
0x00100822:  mov    -0x2c(%ebp),%eax
0x00100825:  mov    %eax,%edx
0x00100827:  mov    %edx,%eax
0x00100829:  add    %eax,%eax
0x0010082b:  add    %edx,%eax
0x0010082d:  shl    $0x2,%eax
0x00100830:  mov    %eax,%edx
0x00100832:  mov    -0xc(%ebp),%eax
0x00100835:  add    %edx,%eax
0x00100837:  movzbl 0x4(%eax),%eax
0x0010083b:  cmp    $0xa0,%al
0x0010083d:  je     0x100800

----------------
IN: 
0x0010083f:  mov    $0x0,%eax
0x00100844:  leave  
0x00100845:  ret    

----------------
IN: 
0x001008f7:  test   %eax,%eax
0x001008f9:  je     0x100910

----------------
IN: 
0x00100910:  movl   $0x0,-0xc(%ebp)
0x00100917:  jmp    0x100935

----------------
IN: 
0x00100935:  mov    -0x18(%ebp),%eax
0x00100938:  cmp    -0xc(%ebp),%eax
0x0010093b:  jg     0x100919

----------------
IN: 
0x00100919:  mov    -0x1c(%ebp),%edx
0x0010091c:  mov    -0xc(%ebp),%eax
0x0010091f:  add    %edx,%eax
0x00100921:  movzbl (%eax),%eax
0x00100924:  lea    -0x124(%ebp),%ecx
0x0010092a:  mov    -0xc(%ebp),%edx
0x0010092d:  add    %ecx,%edx
0x0010092f:  mov    %al,(%edx)
0x00100931:  addl   $0x1,-0xc(%ebp)
0x00100935:  mov    -0x18(%ebp),%eax
0x00100938:  cmp    -0xc(%ebp),%eax
0x0010093b:  jg     0x100919

----------------
IN: 
0x0010093d:  lea    -0x124(%ebp),%edx
0x00100943:  mov    -0xc(%ebp),%eax
0x00100946:  add    %edx,%eax
0x00100948:  movb   $0x0,(%eax)
0x0010094b:  mov    -0x14(%ebp),%eax
0x0010094e:  mov    0x8(%ebp),%edx
0x00100951:  mov    %edx,%ecx
0x00100953:  sub    %eax,%ecx
0x00100955:  mov    -0x20(%ebp),%edx
0x00100958:  mov    -0x24(%ebp),%eax
0x0010095b:  mov    %ecx,0x10(%esp)
0x0010095f:  lea    -0x124(%ebp),%ecx
0x00100965:  mov    %ecx,0xc(%esp)
0x00100969:  mov    %edx,0x8(%esp)
0x0010096d:  mov    %eax,0x4(%esp)
0x00100971:  movl   $0x1035f6,(%esp)
0x00100978:  call   0x100312

----------------
IN: 
0x0010097d:  leave  
0x0010097e:  ret    

----------------
IN: 
0x00100a26:  mov    -0xc(%ebp),%eax
0x00100a29:  add    $0x4,%eax
0x00100a2c:  mov    (%eax),%eax
0x00100a2e:  mov    %eax,-0x10(%ebp)
0x00100a31:  mov    -0xc(%ebp),%eax
0x00100a34:  mov    (%eax),%eax
0x00100a36:  mov    %eax,-0xc(%ebp)
0x00100a39:  addl   $0x1,-0x14(%ebp)
0x00100a3d:  cmpl   $0x0,-0xc(%ebp)
0x00100a41:  je     0x100a4d

----------------
IN: 
0x0010077f:  mov    -0x2c(%ebp),%eax
0x00100782:  mov    %eax,%edx
0x00100784:  mov    %edx,%eax
0x00100786:  add    %eax,%eax
0x00100788:  add    %edx,%eax
0x0010078a:  shl    $0x2,%eax
0x0010078d:  mov    %eax,%edx
0x0010078f:  mov    -0xc(%ebp),%eax
0x00100792:  add    %edx,%eax
0x00100794:  mov    0x8(%eax),%eax
0x00100797:  test   %eax,%eax
0x00100799:  je     0x100732

----------------
IN: 
0x00100800:  mov    0xc(%ebp),%eax
0x00100803:  mov    0x14(%eax),%eax
0x00100806:  lea    0x1(%eax),%edx
0x00100809:  mov    0xc(%ebp),%eax
0x0010080c:  mov    %edx,0x14(%eax)
0x0010080f:  mov    -0x2c(%ebp),%eax
0x00100812:  add    $0x1,%eax
0x00100815:  mov    %eax,-0x2c(%ebp)
0x00100818:  mov    -0x2c(%ebp),%edx
0x0010081b:  mov    -0x28(%ebp),%eax
0x0010081e:  cmp    %eax,%edx
0x00100820:  jge    0x10083f

----------------
IN: 
0x0010116f:  mov    0x10ee60,%eax
0x00101174:  lea    0xa0(%eax),%edx
0x0010117a:  mov    0x10ee60,%eax
0x0010117f:  movl   $0xf00,0x8(%esp)
0x00101187:  mov    %edx,0x4(%esp)
0x0010118b:  mov    %eax,(%esp)
0x0010118e:  call   0x103327

----------------
IN: 
0x00103327:  push   %ebp
0x00103328:  mov    %esp,%ebp
0x0010332a:  push   %edi
0x0010332b:  push   %esi
0x0010332c:  push   %ebx
0x0010332d:  sub    $0x30,%esp
0x00103330:  mov    0x8(%ebp),%eax
0x00103333:  mov    %eax,-0x10(%ebp)
0x00103336:  mov    0xc(%ebp),%eax
0x00103339:  mov    %eax,-0x14(%ebp)
0x0010333c:  mov    0x10(%ebp),%eax
0x0010333f:  mov    %eax,-0x18(%ebp)
0x00103342:  mov    -0x10(%ebp),%eax
0x00103345:  cmp    -0x14(%ebp),%eax
0x00103348:  jae    0x10338c

----------------
IN: 
0x0010334a:  mov    -0x10(%ebp),%eax
0x0010334d:  mov    %eax,-0x1c(%ebp)
0x00103350:  mov    -0x14(%ebp),%eax
0x00103353:  mov    %eax,-0x20(%ebp)
0x00103356:  mov    -0x18(%ebp),%eax
0x00103359:  mov    %eax,-0x24(%ebp)
0x0010335c:  mov    -0x24(%ebp),%eax
0x0010335f:  shr    $0x2,%eax
0x00103362:  mov    %eax,%ecx
0x00103364:  mov    -0x1c(%ebp),%edx
0x00103367:  mov    -0x20(%ebp),%eax
0x0010336a:  mov    %edx,%edi
0x0010336c:  mov    %eax,%esi
0x0010336e:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0010336e:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00103370:  mov    -0x24(%ebp),%ecx
0x00103373:  and    $0x3,%ecx
0x00103376:  je     0x10337a

----------------
IN: 
0x0010337a:  mov    %esi,%eax
0x0010337c:  mov    %edi,%edx
0x0010337e:  mov    %ecx,-0x28(%ebp)
0x00103381:  mov    %edx,-0x2c(%ebp)
0x00103384:  mov    %eax,-0x30(%ebp)
0x00103387:  mov    -0x1c(%ebp),%eax
0x0010338a:  jmp    0x1033c2

----------------
IN: 
0x001033c2:  add    $0x30,%esp
0x001033c5:  pop    %ebx
0x001033c6:  pop    %esi
0x001033c7:  pop    %edi
0x001033c8:  pop    %ebp
0x001033c9:  ret    

----------------
IN: 
0x00101193:  movl   $0x780,-0xc(%ebp)
0x0010119a:  jmp    0x1011b1

----------------
IN: 
0x001011b1:  cmpl   $0x7cf,-0xc(%ebp)
0x001011b8:  jle    0x10119c

----------------
IN: 
0x0010119c:  mov    0x10ee60,%eax
0x001011a1:  mov    -0xc(%ebp),%edx
0x001011a4:  add    %edx,%edx
0x001011a6:  add    %edx,%eax
0x001011a8:  movw   $0x720,(%eax)
0x001011ad:  addl   $0x1,-0xc(%ebp)
0x001011b1:  cmpl   $0x7cf,-0xc(%ebp)
0x001011b8:  jle    0x10119c

----------------
IN: 
0x001011ba:  movzwl 0x10ee64,%eax
0x001011c1:  sub    $0x50,%eax
0x001011c4:  mov    %ax,0x10ee64
0x001011ca:  movzwl 0x10ee66,%eax
0x001011d1:  movzwl %ax,%eax
0x001011d4:  mov    %ax,-0xe(%ebp)
0x001011d8:  movb   $0xe,-0xf(%ebp)
0x001011dc:  movzbl -0xf(%ebp),%eax
0x001011e0:  movzwl -0xe(%ebp),%edx
0x001011e4:  out    %al,(%dx)
0x001011e5:  movzwl 0x10ee64,%eax
0x001011ec:  shr    $0x8,%ax
0x001011f0:  movzbl %al,%eax
0x001011f3:  movzwl 0x10ee66,%edx
0x001011fa:  add    $0x1,%edx
0x001011fd:  movzwl %dx,%edx
0x00101200:  mov    %dx,-0x12(%ebp)
0x00101204:  mov    %al,-0x13(%ebp)
0x00101207:  movzbl -0x13(%ebp),%eax
0x0010120b:  movzwl -0x12(%ebp),%edx
0x0010120f:  out    %al,(%dx)
0x00101210:  movzwl 0x10ee66,%eax
0x00101217:  movzwl %ax,%eax
0x0010121a:  mov    %ax,-0x16(%ebp)
0x0010121e:  movb   $0xf,-0x17(%ebp)
0x00101222:  movzbl -0x17(%ebp),%eax
0x00101226:  movzwl -0x16(%ebp),%edx
0x0010122a:  out    %al,(%dx)
0x0010122b:  movzwl 0x10ee64,%eax
0x00101232:  movzbl %al,%eax
0x00101235:  movzwl 0x10ee66,%edx
0x0010123c:  add    $0x1,%edx
0x0010123f:  movzwl %dx,%edx
0x00101242:  mov    %dx,-0x1a(%ebp)
0x00101246:  mov    %al,-0x1b(%ebp)
0x00101249:  movzbl -0x1b(%ebp),%eax
0x0010124d:  movzwl -0x1a(%ebp),%edx
0x00101251:  out    %al,(%dx)
0x00101252:  add    $0x34,%esp
0x00101255:  pop    %ebx
0x00101256:  pop    %ebp
0x00101257:  ret    

----------------
IN: 
0x001005d3:  mov    $0xffffffff,%eax
0x001005d8:  jmp    0x100844

----------------
IN: 
0x00100844:  leave  
0x00100845:  ret    

----------------
IN: 
0x001008fb:  mov    0x8(%ebp),%eax
0x001008fe:  mov    %eax,0x4(%esp)
0x00100902:  movl   $0x1035da,(%esp)
0x00100909:  call   0x100312

----------------
IN: 
0x0010090e:  jmp    0x10097d

----------------
IN: 
0x00100a4d:  leave  
0x00100a4e:  ret    

----------------
IN: 
0x00100c95:  mov    $0x0,%eax
0x00100c9a:  leave  
0x00100c9b:  ret    

----------------
IN: 
0x00100092:  leave  
0x00100093:  ret    

----------------
IN: 
0x001000bb:  add    $0x14,%esp
0x001000be:  pop    %ebx
0x001000bf:  pop    %ebp
0x001000c0:  ret    

----------------
IN: 
0x001000d9:  leave  
0x001000da:  ret    

----------------
IN: 
0x001000fe:  leave  
0x001000ff:  ret    

----------------
IN: 
0x00100055:  call   0x10292e

----------------
IN: 
0x0010292e:  push   %ebp
0x0010292f:  mov    %esp,%ebp
0x00102931:  call   0x10282e

----------------
IN: 
0x0010282e:  push   %ebp
0x0010282f:  mov    %esp,%ebp
0x00102831:  sub    $0x14,%esp
0x00102834:  mov    $0x10f920,%eax
0x00102839:  add    $0x400,%eax
0x0010283e:  mov    %eax,0x10f8a4
0x00102843:  movw   $0x10,0x10f8a8
0x0010284c:  movw   $0x68,0x10ea08
0x00102855:  mov    $0x10f8a0,%eax
0x0010285a:  mov    %ax,0x10ea0a
0x00102860:  mov    $0x10f8a0,%eax
0x00102865:  shr    $0x10,%eax
0x00102868:  mov    %al,0x10ea0c
0x0010286d:  movzbl 0x10ea0d,%eax
0x00102874:  and    $0xfffffff0,%eax
0x00102877:  or     $0x9,%eax
0x0010287a:  mov    %al,0x10ea0d
0x0010287f:  movzbl 0x10ea0d,%eax
0x00102886:  or     $0x10,%eax
0x00102889:  mov    %al,0x10ea0d
0x0010288e:  movzbl 0x10ea0d,%eax
0x00102895:  and    $0xffffff9f,%eax
0x00102898:  mov    %al,0x10ea0d
0x0010289d:  movzbl 0x10ea0d,%eax
0x001028a4:  or     $0xffffff80,%eax
0x001028a7:  mov    %al,0x10ea0d
0x001028ac:  movzbl 0x10ea0e,%eax
0x001028b3:  and    $0xfffffff0,%eax
0x001028b6:  mov    %al,0x10ea0e
0x001028bb:  movzbl 0x10ea0e,%eax
0x001028c2:  and    $0xffffffef,%eax
0x001028c5:  mov    %al,0x10ea0e
0x001028ca:  movzbl 0x10ea0e,%eax
0x001028d1:  and    $0xffffffdf,%eax
0x001028d4:  mov    %al,0x10ea0e
0x001028d9:  movzbl 0x10ea0e,%eax
0x001028e0:  or     $0x40,%eax
0x001028e3:  mov    %al,0x10ea0e
0x001028e8:  movzbl 0x10ea0e,%eax
0x001028ef:  and    $0x7f,%eax
0x001028f2:  mov    %al,0x10ea0e
0x001028f7:  mov    $0x10f8a0,%eax
0x001028fc:  shr    $0x18,%eax
0x001028ff:  mov    %al,0x10ea0f
0x00102904:  movzbl 0x10ea0d,%eax
0x0010290b:  and    $0xffffffef,%eax
0x0010290e:  mov    %al,0x10ea0d
0x00102913:  movl   $0x10ea10,(%esp)
0x0010291a:  call   0x1027f9

----------------
IN: 
0x001027f9:  push   %ebp
0x001027fa:  mov    %esp,%ebp
0x001027fc:  mov    0x8(%ebp),%eax
0x001027ff:  lgdtl  (%eax)
0x00102802:  mov    $0x23,%eax
0x00102807:  mov    %eax,%gs
0x00102809:  mov    $0x23,%eax
0x0010280e:  mov    %eax,%fs
0x00102810:  mov    $0x10,%eax
0x00102815:  mov    %eax,%es

----------------
IN: 
0x00102817:  mov    $0x10,%eax
0x0010281c:  mov    %eax,%ds

----------------
IN: 
0x0010281e:  mov    $0x10,%eax
0x00102823:  mov    %eax,%ss

----------------
IN: 
0x00102825:  ljmp   $0x8,$0x10282c

----------------
IN: 
0x0010282c:  pop    %ebp
0x0010282d:  ret    

----------------
IN: 
0x0010291f:  movw   $0x28,-0x2(%ebp)
0x00102925:  movzwl -0x2(%ebp),%eax
0x00102929:  ltr    %ax
0x0010292c:  leave  
0x0010292d:  ret    

----------------
IN: 
0x00102936:  pop    %ebp
0x00102937:  ret    

----------------
IN: 
0x0010005a:  call   0x1016a8

----------------
IN: 
0x001016a8:  push   %ebp
0x001016a9:  mov    %esp,%ebp
0x001016ab:  sub    $0x44,%esp
0x001016ae:  movl   $0x1,0x10f08c
0x001016b8:  movw   $0x21,-0x2(%ebp)
0x001016be:  movb   $0xff,-0x3(%ebp)
0x001016c2:  movzbl -0x3(%ebp),%eax
0x001016c6:  movzwl -0x2(%ebp),%edx
0x001016ca:  out    %al,(%dx)
0x001016cb:  movw   $0xa1,-0x6(%ebp)
0x001016d1:  movb   $0xff,-0x7(%ebp)
0x001016d5:  movzbl -0x7(%ebp),%eax
0x001016d9:  movzwl -0x6(%ebp),%edx
0x001016dd:  out    %al,(%dx)
0x001016de:  movw   $0x20,-0xa(%ebp)
0x001016e4:  movb   $0x11,-0xb(%ebp)
0x001016e8:  movzbl -0xb(%ebp),%eax
0x001016ec:  movzwl -0xa(%ebp),%edx
0x001016f0:  out    %al,(%dx)
0x001016f1:  movw   $0x21,-0xe(%ebp)
0x001016f7:  movb   $0x20,-0xf(%ebp)
0x001016fb:  movzbl -0xf(%ebp),%eax
0x001016ff:  movzwl -0xe(%ebp),%edx
0x00101703:  out    %al,(%dx)
0x00101704:  movw   $0x21,-0x12(%ebp)
0x0010170a:  movb   $0x4,-0x13(%ebp)
0x0010170e:  movzbl -0x13(%ebp),%eax
0x00101712:  movzwl -0x12(%ebp),%edx
0x00101716:  out    %al,(%dx)
0x00101717:  movw   $0x21,-0x16(%ebp)
0x0010171d:  movb   $0x3,-0x17(%ebp)
0x00101721:  movzbl -0x17(%ebp),%eax
0x00101725:  movzwl -0x16(%ebp),%edx
0x00101729:  out    %al,(%dx)
0x0010172a:  movw   $0xa0,-0x1a(%ebp)
0x00101730:  movb   $0x11,-0x1b(%ebp)
0x00101734:  movzbl -0x1b(%ebp),%eax
0x00101738:  movzwl -0x1a(%ebp),%edx
0x0010173c:  out    %al,(%dx)
0x0010173d:  movw   $0xa1,-0x1e(%ebp)
0x00101743:  movb   $0x28,-0x1f(%ebp)
0x00101747:  movzbl -0x1f(%ebp),%eax
0x0010174b:  movzwl -0x1e(%ebp),%edx
0x0010174f:  out    %al,(%dx)
0x00101750:  movw   $0xa1,-0x22(%ebp)
0x00101756:  movb   $0x2,-0x23(%ebp)
0x0010175a:  movzbl -0x23(%ebp),%eax
0x0010175e:  movzwl -0x22(%ebp),%edx
0x00101762:  out    %al,(%dx)
0x00101763:  movw   $0xa1,-0x26(%ebp)
0x00101769:  movb   $0x3,-0x27(%ebp)
0x0010176d:  movzbl -0x27(%ebp),%eax
0x00101771:  movzwl -0x26(%ebp),%edx
0x00101775:  out    %al,(%dx)
0x00101776:  movw   $0x20,-0x2a(%ebp)
0x0010177c:  movb   $0x68,-0x2b(%ebp)
0x00101780:  movzbl -0x2b(%ebp),%eax
0x00101784:  movzwl -0x2a(%ebp),%edx
0x00101788:  out    %al,(%dx)
0x00101789:  movw   $0x20,-0x2e(%ebp)
0x0010178f:  movb   $0xa,-0x2f(%ebp)
0x00101793:  movzbl -0x2f(%ebp),%eax
0x00101797:  movzwl -0x2e(%ebp),%edx
0x0010179b:  out    %al,(%dx)
0x0010179c:  movw   $0xa0,-0x32(%ebp)
0x001017a2:  movb   $0x68,-0x33(%ebp)
0x001017a6:  movzbl -0x33(%ebp),%eax
0x001017aa:  movzwl -0x32(%ebp),%edx
0x001017ae:  out    %al,(%dx)
0x001017af:  movw   $0xa0,-0x36(%ebp)
0x001017b5:  movb   $0xa,-0x37(%ebp)
0x001017b9:  movzbl -0x37(%ebp),%eax
0x001017bd:  movzwl -0x36(%ebp),%edx
0x001017c1:  out    %al,(%dx)
0x001017c2:  movzwl 0x10e550,%eax
0x001017c9:  cmp    $0xffffffff,%ax
0x001017cd:  je     0x1017e1

----------------
IN: 
0x001017cf:  movzwl 0x10e550,%eax
0x001017d6:  movzwl %ax,%eax
0x001017d9:  mov    %eax,(%esp)
0x001017dc:  call   0x101622

----------------
IN: 
0x00101642:  movzwl -0x14(%ebp),%eax
0x00101646:  movzbl %al,%eax
0x00101649:  movw   $0x21,-0x2(%ebp)
0x0010164f:  mov    %al,-0x3(%ebp)
0x00101652:  movzbl -0x3(%ebp),%eax
0x00101656:  movzwl -0x2(%ebp),%edx
0x0010165a:  out    %al,(%dx)
0x0010165b:  movzwl -0x14(%ebp),%eax
0x0010165f:  shr    $0x8,%ax
0x00101663:  movzbl %al,%eax
0x00101666:  movw   $0xa1,-0x6(%ebp)
0x0010166c:  mov    %al,-0x7(%ebp)
0x0010166f:  movzbl -0x7(%ebp),%eax
0x00101673:  movzwl -0x6(%ebp),%edx
0x00101677:  out    %al,(%dx)
0x00101678:  leave  
0x00101679:  ret    

----------------
IN: 
0x001017e1:  leave  
0x001017e2:  ret    

----------------
IN: 
0x0010005f:  call   0x1017ff

----------------
IN: 
0x001017ff:  push   %ebp
0x00101800:  mov    %esp,%ebp
0x00101802:  sub    $0x10,%esp
0x00101805:  movl   $0x0,-0x4(%ebp)
0x0010180c:  jmp    0x1018d4

----------------
IN: 
0x001018d4:  mov    -0x4(%ebp),%eax
0x001018d7:  cmp    $0xff,%eax
0x001018dc:  jbe    0x101811

----------------
IN: 
0x00101811:  mov    -0x4(%ebp),%eax
0x00101814:  mov    0x10e5e0(,%eax,4),%eax
0x0010181b:  mov    %eax,%edx
0x0010181d:  mov    -0x4(%ebp),%eax
0x00101820:  mov    %dx,0x10f0a0(,%eax,8)
0x00101828:  mov    -0x4(%ebp),%eax
0x0010182b:  movw   $0x8,0x10f0a2(,%eax,8)
0x00101835:  mov    -0x4(%ebp),%eax
0x00101838:  movzbl 0x10f0a4(,%eax,8),%edx
0x00101840:  and    $0xffffffe0,%edx
0x00101843:  mov    %dl,0x10f0a4(,%eax,8)
0x0010184a:  mov    -0x4(%ebp),%eax
0x0010184d:  movzbl 0x10f0a4(,%eax,8),%edx
0x00101855:  and    $0x1f,%edx
0x00101858:  mov    %dl,0x10f0a4(,%eax,8)
0x0010185f:  mov    -0x4(%ebp),%eax
0x00101862:  movzbl 0x10f0a5(,%eax,8),%edx
0x0010186a:  and    $0xfffffff0,%edx
0x0010186d:  or     $0xe,%edx
0x00101870:  mov    %dl,0x10f0a5(,%eax,8)
0x00101877:  mov    -0x4(%ebp),%eax
0x0010187a:  movzbl 0x10f0a5(,%eax,8),%edx
0x00101882:  and    $0xffffffef,%edx
0x00101885:  mov    %dl,0x10f0a5(,%eax,8)
0x0010188c:  mov    -0x4(%ebp),%eax
0x0010188f:  movzbl 0x10f0a5(,%eax,8),%edx
0x00101897:  and    $0xffffff9f,%edx
0x0010189a:  mov    %dl,0x10f0a5(,%eax,8)
0x001018a1:  mov    -0x4(%ebp),%eax
0x001018a4:  movzbl 0x10f0a5(,%eax,8),%edx
0x001018ac:  or     $0xffffff80,%edx
0x001018af:  mov    %dl,0x10f0a5(,%eax,8)
0x001018b6:  mov    -0x4(%ebp),%eax
0x001018b9:  mov    0x10e5e0(,%eax,4),%eax
0x001018c0:  shr    $0x10,%eax
0x001018c3:  mov    %eax,%edx
0x001018c5:  mov    -0x4(%ebp),%eax
0x001018c8:  mov    %dx,0x10f0a6(,%eax,8)
0x001018d0:  addl   $0x1,-0x4(%ebp)
0x001018d4:  mov    -0x4(%ebp),%eax
0x001018d7:  cmp    $0xff,%eax
0x001018dc:  jbe    0x101811

----------------
IN: 
0x001018e2:  mov    0x10e7c4,%eax
0x001018e7:  mov    %ax,0x10f468
0x001018ed:  movw   $0x8,0x10f46a
0x001018f6:  movzbl 0x10f46c,%eax
0x001018fd:  and    $0xffffffe0,%eax
0x00101900:  mov    %al,0x10f46c
0x00101905:  movzbl 0x10f46c,%eax
0x0010190c:  and    $0x1f,%eax
0x0010190f:  mov    %al,0x10f46c
0x00101914:  movzbl 0x10f46d,%eax
0x0010191b:  and    $0xfffffff0,%eax
0x0010191e:  or     $0xe,%eax
0x00101921:  mov    %al,0x10f46d
0x00101926:  movzbl 0x10f46d,%eax
0x0010192d:  and    $0xffffffef,%eax
0x00101930:  mov    %al,0x10f46d
0x00101935:  movzbl 0x10f46d,%eax
0x0010193c:  or     $0x60,%eax
0x0010193f:  mov    %al,0x10f46d
0x00101944:  movzbl 0x10f46d,%eax
0x0010194b:  or     $0xffffff80,%eax
0x0010194e:  mov    %al,0x10f46d
0x00101953:  mov    0x10e7c4,%eax
0x00101958:  shr    $0x10,%eax
0x0010195b:  mov    %ax,0x10f46e
0x00101961:  movl   $0x10e560,-0x8(%ebp)
0x00101968:  mov    -0x8(%ebp),%eax
0x0010196b:  lidtl  (%eax)
0x0010196e:  leave  
0x0010196f:  ret    

----------------
IN: 
0x00100064:  call   0x100d58

----------------
IN: 
0x00100d58:  push   %ebp
0x00100d59:  mov    %esp,%ebp
0x00100d5b:  sub    $0x28,%esp
0x00100d5e:  movw   $0x43,-0xa(%ebp)
0x00100d64:  movb   $0x34,-0xb(%ebp)
0x00100d68:  movzbl -0xb(%ebp),%eax
0x00100d6c:  movzwl -0xa(%ebp),%edx
0x00100d70:  out    %al,(%dx)
0x00100d71:  movw   $0x40,-0xe(%ebp)
0x00100d77:  movb   $0x9c,-0xf(%ebp)
0x00100d7b:  movzbl -0xf(%ebp),%eax
0x00100d7f:  movzwl -0xe(%ebp),%edx
0x00100d83:  out    %al,(%dx)
0x00100d84:  movw   $0x40,-0x12(%ebp)
0x00100d8a:  movb   $0x2e,-0x13(%ebp)
0x00100d8e:  movzbl -0x13(%ebp),%eax
0x00100d92:  movzwl -0x12(%ebp),%edx
0x00100d96:  out    %al,(%dx)
0x00100d97:  movl   $0x0,0x10f908
0x00100da1:  movl   $0x103782,(%esp)
0x00100da8:  call   0x100312

----------------
IN: 
0x00100dad:  movl   $0x0,(%esp)
0x00100db4:  call   0x10167a

----------------
IN: 
0x00100db9:  leave  
0x00100dba:  ret    

----------------
IN: 
0x00100069:  call   0x101616

----------------
IN: 
0x00101616:  push   %ebp
0x00101617:  mov    %esp,%ebp
0x00101619:  sti    

----------------
IN: 
0x0010161a:  pop    %ebp

----------------
IN: 
0x0010161b:  ret    

----------------
IN: 
0x0010006e:  jmp    0x10006e

Servicing hardware INT=0x20
----------------
IN: 
0x00101e99:  push   $0x0
0x00101e9b:  push   $0x20
0x00101e9d:  jmp    0x101d67

----------------
IN: 
0x00101d67:  push   %ds
0x00101d68:  push   %es
0x00101d69:  push   %fs
0x00101d6b:  push   %gs
0x00101d6d:  pusha  
0x00101d6e:  mov    $0x10,%eax
0x00101d73:  mov    %eax,%ds

----------------
IN: 
0x00101d75:  mov    %eax,%es

----------------
IN: 
0x00101d77:  push   %esp
0x00101d78:  call   0x101d54

----------------
IN: 
0x00101d54:  push   %ebp
0x00101d55:  mov    %esp,%ebp
0x00101d57:  sub    $0x18,%esp
0x00101d5a:  mov    0x8(%ebp),%eax
0x00101d5d:  mov    %eax,(%esp)
0x00101d60:  call   0x101c33

----------------
IN: 
0x00101c33:  push   %ebp
0x00101c34:  mov    %esp,%ebp
0x00101c36:  sub    $0x28,%esp
0x00101c39:  mov    0x8(%ebp),%eax
0x00101c3c:  mov    0x30(%eax),%eax
0x00101c3f:  cmp    $0x2f,%eax
0x00101c42:  ja     0x101c65

----------------
IN: 
0x00101c44:  cmp    $0x2e,%eax
0x00101c47:  jae    0x101d51

----------------
IN: 
0x00101c4d:  cmp    $0x21,%eax
0x00101c50:  je     0x101cd7

----------------
IN: 
0x00101c56:  cmp    $0x24,%eax
0x00101c59:  je     0x101cb1

----------------
IN: 
0x00101c5b:  cmp    $0x20,%eax
0x00101c5e:  je     0x101c76

----------------
IN: 
0x00101c76:  mov    0x10f908,%eax
0x00101c7b:  add    $0x1,%eax
0x00101c7e:  mov    %eax,0x10f908
0x00101c83:  mov    0x10f908,%ecx
0x00101c89:  mov    $0x51eb851f,%edx
0x00101c8e:  mov    %ecx,%eax
0x00101c90:  mul    %edx
0x00101c92:  mov    %edx,%eax
0x00101c94:  shr    $0x5,%eax
0x00101c97:  imul   $0x64,%eax,%eax
0x00101c9a:  sub    %eax,%ecx
0x00101c9c:  mov    %ecx,%eax
0x00101c9e:  test   %eax,%eax
0x00101ca0:  jne    0x101cac

----------------
IN: 
0x00101cac:  jmp    0x101d52

----------------
IN: 
0x00101d52:  leave  
0x00101d53:  ret    

----------------
IN: 
0x00101d65:  leave  
0x00101d66:  ret    

----------------
IN: 
0x00101d7d:  pop    %esp
0x00101d7e:  popa   
0x00101d7f:  pop    %gs
0x00101d81:  pop    %fs
0x00101d83:  pop    %es

----------------
IN: 
0x00101d84:  pop    %ds

----------------
IN: 
0x00101d85:  add    $0x8,%esp
0x00101d88:  iret   

Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
----------------
IN: 
0x00101ca2:  call   0x1017e3

----------------
IN: 
0x001017e3:  push   %ebp
0x001017e4:  mov    %esp,%ebp
0x001017e6:  sub    $0x18,%esp
0x001017e9:  movl   $0x64,0x4(%esp)
0x001017f1:  movl   $0x1037e0,(%esp)
0x001017f8:  call   0x100312

----------------
IN: 
0x001017fd:  leave  
0x001017fe:  ret    

----------------
IN: 
0x00101ca7:  jmp    0x101d52

Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
Servicing hardware INT=0x20
